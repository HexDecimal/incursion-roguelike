/* ============================================================= 
 *                   Level One Priest Spells
 * =============================================================
Druid Spell "Ice Dagger" : EA_BLAST
Wizard / Priest / Druid Spell "Minor Light" : EA_CREATION
Druid Spell "Produce Flame" : EA_CREATION
Priest Spell "Bane" : EA_INFLICT
Priest  Spell "Bless" : EA_INFLICT
Priest / Druid  Spell "Call Light" : EA_GENERIC
Priest  Spell "Command" : EA_GENERIC
Priest / Druid Spell "Cure Light Wounds" : EA_HEALING
Priest "Detect Evil" : EA_INFLICT
Priest  Spell "Divine Favour" : EA_INFLICT
Priest Spell "Holy Summoning I" : EA_SUMMON
Priest Spell "Inflict Light Wounds" : EA_BLAST
Druid Spell "Lifesight" : EA_INFLICT 
Priest  Spell "Remove Fear" : EA_HEALING
Priest / Druid Spell "Sanctuary" : EA_GENERIC
Priest Spell "Shield of Faith" : EA_INFLICT
Priest / Druid  Spell "Slow Poison" : EA_INFLICT
Druid Spell "Calm Animals" : EA_GENERIC 
Druid Spell "Camouflage" : EA_INFLICT
Druid Spell "Dust Devil" : EA_SUMMON
Druid Spell "Detect Animals and Plants" : EA_INFLICT
Druid Spell "Hawkeye" : EA_INFLICT
Druid Spell "Longstrider" : EA_INFLICT
Priest / Druid / Wizard Spell "Call Companions" : EA_GENERIC
Druid Spell "Sunscorch" : EA_BLAST
Druid Spell "Sandblast" : EA_BLAST
Druid Spell "Magic Fang" : EA_INFLICT
Druid Spell "Detect Natural Traps" : EA_GENERIC
Druid Spell "Puffball" : EA_BLAST
Druid Spell "Shillelagh" : EA_GENERIC
Druid  Spell "Faerie Fire" : EA_INFLICT
Druid  Spell "Obscurement" : EA_GENERIC
Druid Spell "Summon Nature's Ally I" : EA_SUMMON
Druid Spell "Pass without Trace" : EA_INFLICT
Druid Spell "Silversheen;spell" : EA_GENERIC 
Priest Spell "Succor Contingency" : EA_INFLICT
Priest Spell "Retributive Mirror" : EA_INFLICT
Priest Spell "Brand of Hatred" : EA_GENERIC 
Priest Spell "Detect Blood" : EA_INFLICT
Priest Spell "Caustic Vitae" : EA_BLAST
Priest Spell "Entropic Shield" : EA_INFLICT
Priest Spell "Moment" : EA_INFLICT
Priest Spell "Pain Touch" : EA_INFLICT
 */

// ww: this spell is taken from Icewind Dale 2, but it comes in handy --
// druids have quite a bit of trouble dealing with "Flame Hobgoblins" and
// whatnot ...
Druid Spell "Ice Dagger" : EA_BLAST
  { SC_EVO|SC_COLD; Base: SP_HARD; Cost: 1; Level: 1; xval: AD_COLD; 
    Purpose: EP_ATTACK (VS_GENERAL); cval: SKYBLUE;
    pval: (LEVEL_MAX5)d4; sval: REF PARTIAL; lval: 2; 
    qval: Q_DIR|Q_TAR|Q_LOC; aval: AR_BALL; 
    flags: EF_CASTER_IMMUNE; 
    Desc: "Upon completion the caster hurles a shard of magical ice imbued
    with deep freezing cold, dealing 1d4 points of cold damage per caster
    level (max 5d4) to every creature within 1 one square radius. The
    caster is immune." ; 
    On Event MSG_BLASTNAME "ice dagger"; }


Druid Spell "Produce Flame" : EA_CREATION
  { SC_EVO|SC_FIRE; Base: SP_TRIVIAL; Cost: 1; Level: 1; 
    xval: CREA_WIELD | CREA_TEMP | CREA_MANY; rval: $"produced flame"; 
    yval: LEVEL_1PER1; // make how many? 
    Purpose: EP_BUFF (VS_MELEE); Flags: EF_DLONG, EF_NOTBAD; 
    pval: LEVEL_3PER1; // divided by 3 when making a magical item plus
    Desc: "Creates balls of magical fire that inflicts 1d6 points of
    damage, plus 1 point per level (max +5). One ball is created per caster
    level.";
    hObj it;
    On Event EV_ISTARGET {
      for(it=EActor->FirstInv();it;it=EActor->NextInv()) 
        if (it->iID == $"produced flame" || it->iID == $"fire seeds")
          return CAN_CAST_IT; 
      return SHOULD_CAST_IT; 
    };
  } 

Priest Spell "Bane" : EA_INFLICT
  { SC_THE; Base: SP_EASY; Cost: 2; Level: 1; 
    aval: AR_GLOBE; lval: 10; cval: RED;
    xval: ADJUST_MOR; yval: A_AID; pval: -1; tval: MA_ENEMIES; 
    Flags: EF_LIM_MTYPE, EF_DLONG, EF_SHOWNAME, EF_FEAR;
    Purpose: EP_CURSE | AIM_AT_SELF;
    Desc: "Inflicts ill fortune in battle on all enemies within 50
      feet (5 squares) of you, causing them a -1 morale penalty to most
      rolls.";
    On Event EV_CAST
      "In the name of <God:EActor>, you call maledictions down
        on your enemies!" / 
      "In the name of <God:EActor>, the <EActor> calls maledictions 
        down on <his:EActor> enemies!",
      EV_MAGIC_HIT
        "You feel threatened.";
  }

Priest  Spell "Bless" : EA_INFLICT
  { SC_THE; 
    Level: 1; xval: ADJUST_MOR; yval: A_AID; pval: +1; 
    aval: AR_GLOBE; lval: 6; tval: MA_ALLIES; cval: WHITE;
    IS_A_BUFF(COST_1); 
    Flags: EF_LIM_MTYPE;
    Purpose: EP_BUFF | AIM_AT_SELF;
    Desc: "This spell can be cast in one of two forms; the combat form
      is automatically chosen if this spell is cast as part of an
      AutoBuff.\n
      __<9>Combat Blessing:<1> Grants a +1 morale bonus to attack rolls
      and saving throws to you and all allies within sixty feet of you 
      when the spell is cast. This version lasts until you rest.\n
      __<9>Item Blessing:<1> This form of the spell makes a single chosen
      item <11>blessed<1>, often improving its effect in some manner.
      A blessed item cannot be picked up by undead, demons, devils, or 
      lycanthropes. A blessed shield or suit of armour cumulatively 
      increases your Defense by +2 against the touch attacks of 
      such creatures. A blessed weapon strikes true against such creatures, 
      even if they have weapon immunity. A blessed weapon also strikes 
      true against evil incorporeal creatures.\n
      __You have the power to bless any item found commonly at a dungeon
      depth equal to or lower than half your caster level plus your secondary 
      Charisma modifier, plus a modifier based on divine favour. Blessing an
      item costs you 1 fatigue point, and is permanent until something acts
      to defile the item."; 
    On Event PRE(EV_EFFECT) {
      if (EActor->isPlayer() && !EActor->HasStati(ACTING))
        if (EActor->ChoicePrompt("Combat blessing or item blessing?", "ci", 'c') == 'i')
          return RedirectEff(e,$"bless;item",EV_EFFECT); 
      },
    EV_MAGIC_HIT
      "You feel righteous.",
    EV_ELAPSED
      "The righteous feeling fades.",
    MSG_STATINAME "Blessed" / "Ble";
    Constants:
      * SERVICE_SPELL_COST 150;
  }
  
Effect "bless;item" : EA_GENERIC
  {
    qval: Q_INV; Flags: EF_AFFECTS_ITEMS, EF_ITEMS_ONLY;
    On Event EV_RATETARG {
      if (EItem->isKnown(KN_BLESS))
        if (EItem->IFlags & (IF_BLESSED|IF_CURSED))
          return ABORT;
      return NOTHING;
      },
    EV_MAGIC_HIT {
      if (!EActor->LoseFatigue(1,true))
        return ABORT;
      if (ETarget->ItemLevel()*2 > e.vCasterLev + EActor->Mod(A_CHA) +
            EActor->getGodLevel(EActor->getGod()) || ETarget->isCursed())
        {
          DPrint(e,"The <ETarget> glows blue for a minute, but the
                      glow quickly fades.",NULL);
          return DONE;
        }
      DPrint(e,"The <ETarget> emits a warm blue light.",NULL);
      ETarget->IFlags |= IF_BLESSED;
      ETarget->MakeKnown(KN_BLESS | KN_CURSE);
      return DONE;
      };
  }
  
Priest / Druid  Spell "Call Light" : EA_GENERIC {
    SC_EVO|SC_LIGHT; Base: SP_TRIVIAL; Cost: 1; Level: 1; qval: Q_LOC|Q_TAR;
    cval: COL_LIGHT; lval: 5; aval: AR_FIELD; rval: FI_LIGHT; 
    cval: yellow; Purpose: EP_CURSE; Flags: EF_GLYPH_FLOOR;
    Desc: "This spell can be cast in one of two forms:\n
      __<9>Standing Radiance:<1> This versions of the spell creates a 
      globe of sunlight 50 feet (5 squares) in radius. Hiding within
      the area is impossible, and creatures can see within the area
      given line of sight and basic sight range, even if it exceeds
      the range of their personal light sources. The target area 
      remains lit for the duration and afflicts light-averse
      creatures with -4 penalities to attack and defense rolls, and
      disperses any existing <9>globe of shadow<1> if cast into its
      area of effect.\n
      __<9>Portable Globe:<1> Creates a mote of magical light that 
      functions like a torch and provides illumination out to 40 feet 
      (4' squares). The light mote travels with you and cannot be 
      dropped or placed in a container."; 
    On Event MSG_CAST
      "A bright golden radiance illuminates the area.",
    EV_ELAPSED
      "The light fades away.",
    EV_ISTARGET {
      if (EMap->BrightAt(EVictim->x,EVictim->y))
        return CAN_CAST_IT;
      if (EVictim->HasMFlag(M_LIGHT_AVERSE) && !EVictim->isBlind())
        return SHOULD_CAST_IT;
      return CAN_CAST_IT; 
      },
    PRE(EV_EFFECT) {
      char ch;
      ch = EActor->ChoicePrompt("Standing radiance or portable globe?","sp",'s'); 
      if (ch == 'p')
        {
          RedirectEff(e,$"minor light",EV_EFFECT);
          return DONE;
        }
      return NOTHING;
      },
    EV_MAGIC_XY {
      if (EMap->DispelField(e.EXVal,e.EYVal,0,$"Globe of Shadow",0))
        APrint(e,"The radiance tears away the globe of magical shadows!");
      return NOTHING;
      };
  } 
  
Wizard Spell "Minor Light" : EA_CREATION
  { SC_EVO; Base: SP_TRIVIAL; Cost: 1; Level: 1; 
    xval: CREA_WIELD; rval: $"minor light;item"; 
    Purpose: EP_PLAYER_ONLY; Flags: EF_NOTBAD; 
    Desc: "Creates a mote of magical light that functions like a torch
    and provides illumination out to 40 feet (4' squares). The light mote
    travels with you and cannot be dropped or placed in a container.";
  }

Item "minor light;item" : T_LIGHT
  { Image: yellow '{'; hp: 10;
    Desc: "This enchanted mote of magical light provides illumination
    out to 40 feet (4' squares)."; 
    Flags: IT_NOGEN;
    Mat: MAT_FORCE; Weight: 0; Lifespan: 3000; 
    Light Range: 4; 
    On Event 
    PRE(EV_DROP) {
      EActor->IPrint("You dispel the globe of light.");
      EItem->Remove(true); return DONE;
      },
    PRE(EV_LOSEITEM) { EItem->Remove(true); return DONE; },
    PRE(EV_INSERT) {
      EActor->IPrint("You can't put the globe of light into a container.");
      return ABORT;
      };
    }

Priest / Sorcerer  Spell "Command" : EA_GENERIC
  { SC_ENC; Base: SP_MEDIUM; Cost: 2; Level: 1; qval: Q_TAR; sval: WILL;
    // tval: LEVEL_2PER3; Flags: EF_DSHORT, EF_MENTAL, EF_LIM_LEVEL; 
    // ww: I don't see anything in the SRD about this having a level limit. 
    // Invariably the creatures you meet that you might actually want
    // to use this on are of a higher level than you are. In addition,
    // orc shamans and whatnot have this spell but can never really use
    // it because you are always of a higher level than they are. Let's
    // remove that limit. 
    Flags: EF_DSHORT, EF_MENTAL, EF_COMPULSION; Purpose: EP_CURSE; 
    int16 choice; hText str; 
    On Event
      EV_EFFECT {       
        choice = EActor->ChoicePrompt("Command -- Flee, Yield, Kneel, Attack, 
          Drop or Halt?", "fykadh");
        if (choice == 27 /* KEY_ESC */)
          return ABORT;
        if (choice == 'f') { str = "flee"; }
        else if (choice == 'k') { str = "kneel"; }
        else if (choice == 'd') { str = "drop"; }
        else if (choice == 'y') { str = "yield"; }
        else if (choice == 'a') { str = "attack"; }
        else if (choice == 'h') { str = "halt"; }
        TPrint(e, "You point at the <EVictim> and say, '<hText>'!",
            "The <EActor> points at you and says, '<hText>'!",
            "The <EActor> points at the <EVictim> and says, '<hText>'!",
            str); 
        return NOTHING;   
      },  
      EV_MAGIC_HIT {
        hObj h; 
        if (choice == 'f') { 
          EVictim->GainTempStati(AFRAID, EActor, 2d8, SS_ENCH, 0, 0, $"Command");   
        } else if (choice == 'y') { 
          EVictim->GainTempStati(CHARMED, EActor, 3d8, SS_ENCH, CH_CHARM, 0, $"Command");
        } else if (choice == 'k') { 
          VPrint(e, "You drop to your feet.",
              "The <EVictim> drops to the ground!");
          ThrowDmg(EV_DAMAGE,AD_TRIP,-1,"command: kneel",EActor,EVictim);
        } else if (choice == 'a') { 
          for(h=EMap->FirstThing();h;h=EMap->NextThing())
            if (h->isCreature())
              if (h->isBeside(EVictim))
                if (h != GetHandle(EVictim))
                  break;                  
          if (!h) {
            VPrint(e, "You aren't sure who you're supposed to attack, so the spell fails.", "The <EVictim> seems confused.");
            return DONE;
          }
          if (EVictim->Timeout > 20) {
            VPrint(e, "You're otherwise occupied, so the spell fails.", 
                "The <EVictim> seems overtaxed.");
            return DONE;
          }
          if (EVictim->AttackMode() == S_MELEE)
            Throw(EV_WATTACK, EVictim, h, EVictim->InSlot(SL_WEAPON));
          else
            Throw(EV_NATTACK, EVictim, h);
          return DONE;
        } else if (choice == 'd') {
          h = EVictim->InSlot(SL_WEAPON);
          if (!h)
            h = EVictim->InSlot(SL_READY);
          if (!h) {
            VPrint(e, "You have nothing to drop, so the spell fails.", "The <EVictim> seems confused.");
            return DONE;
          }
          VPrint(e, "You drop your <hObj>.",
              "The <EVictim> drops <his:EVictim> <hObj>.",
              h);
          h->Remove(false);
          h->PlaceAt(EMap, EVictim->x, EVictim->y);
        } else if (choice == 'h') { 
          VPrint(e, "You freeze!", "The <EVictim> freezes!");
          EVictim->GainTempStati(PARALYSIS, EActor, 1d4+1, SS_ENCH, 0, 0, $"Command");
          break;
        }
        };
    Desc: "Allows you to speak one of six one-word commands that a single
      target creature will be forced to obey for a brief time: flee, yield,
      kneel (i.e., drop prone), attack (the nearest creature), drop (held
      items) or halt (freeze in place). Does not affect creatures whose
      CR is more than 2/3rds your level.";
  }  

Priest / Druid / Sorcerer Spell "Cure Light Wounds" : EA_HEALING
  { SC_THE; Base: SP_EASY; Cost: 0; Level: 1; qval: Q_TAR|Q_NEAR;
    xval: HEAL_HP; pval: 1d8 + LEVEL_MAX5; yval: 10; 
    Flags: EF_VARMANA, EF_LOSEMANA; Purpose: EP_FIX_TROUBLE (TROUBLE_INJURY);
    Desc: "Heals you of 1d8 + your level in hit points of damage, to a
      maximum of 1d8+5, with a hit point to mana ratio of 1 per 1. Healing
      spells disrupt unlife, inflicting twice the damage to an undead
      creature they would have healed in a living one.";
    Constants:
      * SERVICE_SPELL_COST 15; 
  }

Priest Spell "Detect Evil" : EA_INFLICT
  { SC_DIV; IS_A_BUFF(COST_1); 
    Level: 1; xval: DETECTING; yval: MA_EVIL; 
    pval: 25d1 + (LEVEL_2PER1); Flags: EF_DOMAIN, EF_GOOD; 
    Desc: "Reveals all Evil creatures, seen or unseen, within (25 + [caster
    level x 2]) squares of you."; 
    On Event MSG_STATINAME "DetEvil"; 
  }

Effect "Detect Good" : EA_INFLICT
  { SC_DIV; IS_A_BUFF(COST_1); 
    Level: 1; xval: DETECTING; yval: MA_GOOD;
    pval: 25d1 + (LEVEL_2PER1); Flags: EF_DOMAIN, EF_EVIL; 
    Desc: "Reveals all Good creatures, seen or unseen, within (25 + [caster
    level x 2]) squares of you."; 
    On Event MSG_STATINAME "DetGood"; 
  }

#if 0

Priest Spell "Detect Law" : EA_INFLICT
  { SC_DIV; IS_A_BUFF(COST_1); 
    Level: 1; xval: DETECTING; yval: MA_LAWFUL;
    pval: 25d1 + (LEVEL_2PER1); Flags: EF_DOMAIN, EF_CHAOTIC; 
    Desc: "Reveals all Lawful creatures, seen or unseen, within (25 + [caster
    level x 2]) squares of you."; 
    On Event MSG_STATINAME "DetLaw"; 
  }

Priest Spell "Detect Chaos" : EA_INFLICT
  { SC_DIV; IS_A_BUFF(COST_1); 
    Level: 1; xval: DETECTING; yval: MA_CHAOTIC;
    pval: 25d1 + (LEVEL_2PER1); Flags: EF_DOMAIN, EF_LAWFUL; 
    Desc: "Reveals all Chaotic creatures, seen or unseen, within (25 + [caster
    level x 2]) squares of you."; 
    On Event MSG_STATINAME "DetChaos"; 
  }
#endif

Priest Spell "Doom" : EA_INFLICT
  { SC_THE; Base: SP_EASY; Cost: 2; Level: 1; 
    xval: ADJUST_MOR; yval: A_AID; pval: -4;
    Flags: EF_DLONG, EF_SHOWNAME, EF_FEAR; sval: WILL; qval: Q_TAR;
    Purpose: EP_CURSE | AIM_AT_SELF;
    Desc: "Inflicts severe ill fortune in battle on a single enemies, 
      causing them a -4 morale penalty to most rolls.";
    On Event EV_CAST
      "In the name of <God:EActor>, you call maledictions down
        on the <EVictim>!" / 
      "In the name of <God:EActor>, the <EActor> calls maledictions 
        down on you!" / 
      "In the name of <God:EActor>, the <EActor> calls maledictions 
        down on the <EVictim>!", 
      EV_MAGIC_HIT
        "You feel gravely threatened.";
  }

Priest  Spell "Divine Favour" : EA_INFLICT
  { SC_THE; IS_A_BUFF(COST_1); Level: 1; 
    xval: ADJUST_SAC; yval: A_DMG; pval: LEVEL_EVERY4; 
    Desc: "Increases your attack rolls and the damage you inflict in combat 
	  by +1 per blow at 1st level, +2 at fifth, +3 at 9th, +4 at 13th, +5 
	  at 17th, +5 at 21st, and so forth.";
    On Event EV_MAGIC_HIT
      "You feel worthy.",
    EV_ELAPSED
      "The feeling of confidance fades.",
	MSG_STATINAME "DivFav" / "DF"; }
and EA_INFLICT
  { xval: ADJUST_SAC; yval: A_HIT; pval: LEVEL_EVERY4; }

/* Endure Fire / Cold / Acid / Lightning / Poison under Wiz Spells */

Priest Spell "Holy Summoning I" : EA_SUMMON
  { SC_WEA; Base: SP_MEDIUM; Cost: 3; Level: 1; qval: Q_LOC;
    Purpose: EP_SUMMON; rval: $"Holy Summons"; pval: 1; 
    Desc: "Summons an outsider of CR 1 to fight in the 
      caster's name.";  
    ALIENIST_CLAUSE(1) }

Priest Spell "Inflict Light Wounds" : EA_BLAST
  { SC_NEC; Base: SP_TRIVIAL; Cost: 1; Level: 1; aval: AR_TOUCH;
    xval: AD_NECR; pval: 1d8 + LEVEL_MAX5; cval: BROWN;
    Flags: EF_CANCEL, EF_NOTBAD, EF_DLONG; Purpose: EP_ATTACK;
    On Event EV_CAST
      "Your hands glow with a black aura." /
      "The <EActor>'s hands glow with a black aura.",
     EV_MAGIC_HIT
      "Wounds appear on your body!" /
      "Wounds appear on the <EVictim>'s body!";
    Desc: "Inflicts 1d8 + caster level (maximum 1d8+5) points of necromantic
      damage on the next creature you touch. Undead are healed instead.";
  }

Priest Spell "Invisibility to Undead" : EA_INFLICT
  { SC_ILL; Base: SP_HARD; Cost: 5; Level: 1; qval: Q_TAR;
    xval: INVIS_TO; yval: INV_NORMAL; pval: MA_UNDEAD;
    Flags: EF_DLONG, EF_NOTBAD; Purpose: EP_BUFF | EP_STEALTH;
    Desc: "Renders a chosen character unseen by undead. This
      spell only eaffects undead, but is otherwise identical
      in effect and restrictions to the mage spell <9>invisibility<1>."; }
Druid Spell "Invisibility to Animals" : EA_INFLICT
  { SC_ILL; Base: SP_HARD; Cost: 5; Level: 1; qval: Q_TAR;
    xval: INVIS_TO; yval: INV_NORMAL; pval: MA_ANIMAL;
    Flags: EF_DLONG, EF_NOTBAD; Purpose: EP_BUFF | EP_STEALTH;
    Desc: "Renders a chosen character unseen by animals. This
      spell only eaffects animals, but is otherwise identical
      in effect and restrictions to the mage spell <9>invisibility<1>."; }


Druid Spell "Lifesight" : EA_INFLICT 
  { SC_DIV; IS_A_BUFF(COST_1X); Level: 1; 
    xval: DETECTING; yval: MA_NLIVING; pval: 6d1 + LEVEL_1PER1; }
  and EA_INFLICT
  {
    xval: LIFESIGHT; 
    Desc: "Highlights natural, living creatures within (6 + level) squares, and 
      also lets you know both the current and maximum hit points of the
      creatures around you using the 'l'ook command. Lifesight does not
      detect undead, extraplanar creatures or constructs.";
    On Event EV_MAGIC_HIT
      "You sense the presence of life around you.";
  }
  
Druid Spell "Log of Everburning" : EA_GENERIC
  { SC_ARC|SC_FIRE; Cost: 1; Level: 1; qval: Q_INV;
    Desc: "This simple but useful incantation alters the composition
      of a mundane torch, giving it the ability to burn for just as
      long as a lantern would (18,000 turns).";
    Flags: EF_AFFECTS_ITEMS, EF_ITEMS_ONLY;
    On Event EV_ISTARGET {
      return EVictim->iID == $"torch" ?
        SHOULD_CAST_IT : CANNOT_CAST_IT;
      },
    EV_MAGIC_HIT {
      ETarget->Age = 18000;
      EActor->IPrint("Your torch burns sharper!");
      };
    Constants:
      * SERVICE_SPELL_COST 10;
  }

Priest / Sorcerer  Spell "Valour" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(COST_1); Level: 1; aval: AR_GLOBE; 
    tval: MA_ALLIES; 
    xval: SAVE_BONUS; yval: SN_FEAR; pval: +5;
    lval: LEVEL_PLUS5; Flags: EF_LIM_MTYPE; 
    Purpose: EP_BUFF | EP_FIX_TROUBLE (TROUBLE_FEAR);
    Desc: "Causes any of your allies within (level + 5) squares 
      when the spell is cast -- including yourself -- to be imbued
      with a divine courage, granting a +5 saving throw bonus
      versus fear."; 
  }

Priest / Druid Spell "Sanctuary" : EA_GENERIC
  { SC_ABJ; Base: SP_EASY; Cost: 2; Level: 1; sval: WILL + 10;
    Purpose: EP_BUFF | EP_FOIL_PURSUIT; Flags: EF_DEFENSIVE;
    On Event EV_MAGIC_HIT {
      /* SS_MISC cause sancutary can't be dispelled. */
      EVictim->GainTempStati(TRAP_EVENT, EActor, e.vDuration, SS_MISC,
        EVICTIM(EV_STRIKE),e.saveDC,$"sanctuary");
      EVictim->GainTempStati(TRAP_EVENT, EActor, e.vDuration, SS_MISC,
        EV_EFFECT,e.saveDC,$"sanctuary");
      EVictim->GainTempStati(TRAP_EVENT, EActor, e.vDuration, SS_MISC,
        EV_MAGIC_STRIKE,e.saveDC,$"sanctuary");
      return DONE;
      },
    META(EVICTIM(EV_STRIKE)) {
      if (EActor->SavingThrow(WILL,
          EVictim->GetEffStatiVal(TRAP_EVENT,$"sanctuary"),SA_MAGIC|SA_SPELLS))
        return NOTHING;
      if (e.AType == A_FIRE || e.AType == A_SPEL)
        return ABORT;
      /* Later: Seeing an opportunity, you find yourself... */
      DPrint(e,"You find yourself unable to strike!",
               "The <EActor> hesitates.");
      return DONE;
      },
    META(EV_STRIKE) {
      EActor->RemoveEffStati($"sanctuary");
      return NOTHING;
      },
    META(EV_MAGIC_STRIKE) {
      if (!e.isTrap)
        if (GetHandle(EActor) != GetHandle(EVictim))
          if (GetHandle(EVictim) != NULL && 
            EVictim->isCreature() && 
            EActor != NULL && 
            EActor->isCreature() && 
            EVictim->isHostileTo(EActor))
          EActor->RemoveEffStati($"sanctuary");  
      return NOTHING;
      },
    EV_MAGIC_HIT
      "You feel safe." /
      "The <EActor> is surrounded by a warm aura.",
    EV_REMOVED
      "You feel less safe." /
      "The <EActor>'s warm aura fades.",
    MSG_STATINAME
      "Sanc";
    Desc: "Evokes a mystical protection around you such that other creatures
      who fail a saving throw cannot attack you. This protection ceases if 
      you take any directly hostile action against another creature.";
    Flags: EF_SHOWNAME, EF_DLONG;
  }

Priest Spell "Shield of Faith" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(COST_1); 
    Level: 1; 
    xval: ADJUST; yval: A_DEF; pval: 1d1 + LEVEL_EVERY3; 
    Desc: "Improves your defense class by +2 points at 1st level, +3 at
      4th, +4 at 7th, +5 at 10th, +6 at 13th, and so forth.";
    On Event MSG_STATINAME "SoF",
      EV_MAGIC_HIT
        "You feel protected.",
      EV_REMOVED
        "You no longer feel protected.";
  }

Priest / Druid / Sorcerer  Spell "Slow Poison" : EA_INFLICT
  { SC_ABJ; Base: SP_TRIVIAL; Cost: 3; Level: 1; qval: Q_TAR;
    xval: SLOW_POISON; Flags: EF_DLONG, EF_NOTBAD, EF_CANCEL;
    Purpose: EP_BUFF | EP_FIX_TROUBLE (TROUBLE_POISON);
    Desc: "Delays the continuing effects of poison in the target
      for the duration. The poison's effects continue as soon as
      the duration of this spell runs out."; 
    On Event POST(EV_EFFECT) {
      if (EActor->HasStati(POISONED))
        EActor->IPrint("You feel the effects of the poison slow down...");
      return NOTHING;
      },
    EV_ELAPSED {
      if (EActor->HasStati(POISONED))
        EActor->IPrint("You feel the resurgance of the poison...");
      return NOTHING;
      };
  }

Priest / Druid Spell "Vigor" : EA_INFLICT
  {
    SC_THA; Base: SP_MEDIUM; Cost: 5; Level: 1; qval: Q_TAR;
    tval: MA_NLIVING; xval: ADJUST_RES; yval: A_SAV_FORT; pval: +5;
    Flags: EF_LIM_MTYPE, EF_DLONG, EF_SHOWNAME, EF_LOSEMANA;
    Desc: "Casting this spell speeds up a target living creature's
      metabolism, giving them a +5 resistance bonus to Fortitude
      saving throws for a reasonably long duration at the cost of
      3 fatigue points when it expires.";
    On Event EV_REMOVED {
      EActor->IPrint("Your metabolism crashes.");
      EActor->LoseFatigue(3,false);
      return DONE;
      };
  }

/* -- DRUID 1 -- */

Druid Spell "Calm Animals" : EA_GENERIC 
  { SC_ENC; Base: SP_EASY; Cost: 2; Level: 1; qval: Q_LOC; cval: SKYBLUE;
    aval: AR_GLOBE; sval: WILL; lval: 3;  Purpose: EP_PLAYER_ONLY;
    Flags: EF_MENTAL;
    Desc: "Causes all animals and beasts within 30 feet (3 squares)
      of the target point who fail a Will save to become calm and
      stop attacking.";
    On Event EV_MAGIC_HIT {
      EVictim->StateFlags |= MS_PEACEFUL;
      VPrint(e,"You feel calmer.",
               "The <EVictim> seems calmer.");
      },
    EV_ISTARGET {
      if (EVictim->isMType(MA_SAPIENT))
        return CANNOT_CAST_IT;
      if (EVictim->isMType(MA_ANIMAL) || EVictim->isMType(MA_BEAST))
        return SHOULD_CAST_IT;
      return CANNOT_CAST_IT;
      };
  }

Druid Spell "Camouflage" : EA_INFLICT
  { SC_ILL; IS_A_BUFF(COST_1); Level: 1;
    xval: SKILL_BONUS; yval: SK_HIDE; pval: +5;
    On Event MSG_STATINAME "Camo";
    Desc: "This spell subtly alters the druid's colouration and the
      play of light around her, causing her to blend in easily with
      rock, foliage or other natural surroundings and thus giving her
      a +5 magic bonus to her Hide skill rating.";
  }

Druid Spell "Dust Devil" : EA_SUMMON
  { SC_WEA|SC_EARTH|SC_AIR; Level: 1; Cost: 1; Base: SP_MEDIUM; qval: Q_LOC; pval: 2; 
    rval: $"dust devil;monster"; Flags: EF_DLONG, EF_MULTIPLE, EF_XSUMMON;
    Purpose: EP_SUMMON;
    Desc: "Conjures waist-high whirlwinds of dust (totalling CR 2) that can
      attack your foes."; }

// ww: in the SRD this is a cone or something silly like that ... detecting
// animals is so weak that we may as well make it an area-of-effect thing
// fjm: Changed to 120 + CLx5, as the Dice struct uses int8's.
Druid Spell "Detect Animals and Plants" : EA_INFLICT
  { SC_DIV; IS_A_BUFF(COST_1); 
    Level: 1; xval: DETECTING; yval: MA_PLANT; 
    pval: 120d1 + (LEVEL_5PER1); 
    Desc: "Reveals all Plant and Animal monsters, seen or unseen, within (120 +
    [caster level x 5]) squares of you. In addition, all vegetable terrain
    (e.g., trees, giant mushrooms) on the current level is revealed."; 
    On Event MSG_STATINAME "DetA&P"; 
  } and EA_INFLICT 
  { SC_DIV; Level: 1; xval: DETECTING; yval: MA_ANIMAL; 
    pval: 120d1 + (LEVEL_5PER1); 
    On Event EV_MAGIC_HIT {
      /* Let's make this a little better by detecting ALL plants. */
      Rect r; int16 x, y; rID terID;

      if (!EVictim->isPlayer())
        return NOTHING;

      r@x1 = 1; 
      r@x2 = EMap->SizeX()-1; 
      r@y1 = 1; 
      r@y2 = EMap->SizeY()-1; 
      for (x=r@x1;x<=r@x2;x++)
        for (y=r@y1;y<=r@y2;y++)
          {
            if (EMap->TreeAt(x,y)) /* Assumption: Player #0 */  
              EMap->MarkAsSeen(0,x,y,0);
          }
      EMap->VUpdate(EVictim->x,EVictim->y);
      return NOTHING;
      };
  }
  
Druid Spell "Entangle" : EA_DRAIN
  { SC_ARC; Base: SP_MEDIUM; Cost: 3; Level: 1;
    aval: AR_GLOBE; lval: 8; qval: Q_LOC | Q_TAR;
    Purpose: EP_CURSE | EP_FOIL_PURSUIT | AIM_AT_ENEMY; 
    xval: AD_STUK; pval: -1; sval: REF; cval: EMERALD; 
    Flags: EF_CASTER_IMMUNE, EF_ALLIES_IMMUNE, EF_HARDSAVE4;
    Desc: "Causes plants, vines and vegetation to rise up and entangle
      hostile creatures within an 80 foot globe; victims become stuck if 
      they fail a Reflex saving throw. If there is no existing plant 
      life to work with, the spell automatically fails.";
    bool cast_flag, found_flag;
    On Event 
      EV_EFFECT 
        { cast_flag = 0; found_flag = 0; },
      EV_ISTARGET {
        found_flag = 1;
        if (EMap->TerrainAt(EVictim->x,EVictim->y)->TerrainHasFlag(TF_VERDANT) ||
            EMap->TreeAt(EVictim->x,EVictim->y))
          {
            cast_flag = 1;
            return 1;
          }
        return -1; 
        },
      POST(EV_EFFECT) {
        if (found_flag && !cast_flag)
          EActor->IPrint("Since there is no suitable terrain nearby,
            no entangling occured.");
        };
  }


Druid / Sorcerer Spell "Hawkeye" : EA_INFLICT
  { SC_ENC; IS_A_BUFF(COST_1); 
    Level: 1; xval: TRAP_EVENT; yval: PRE(EV_STRIKE); 
    Desc: "This spell imbues the caster with the vision of a hawk,
      increasing the range increments of her ranged attacks by 50~
      and granting her low-light vision out to 30 feet.";
    On Event META(PRE(EV_STRIKE)) {
      if (e.vRange) 
        e.vRange = (e.vRange*3+1)/2;
      return NOTHING;
      };
  }
and EA_INFLICT
  { xval: EXTRA_ABILITY; yval: CA_LOWLIGHT; pval: +3; }

Druid / Sorcerer Spell "Longstrider" : EA_INFLICT
  { SC_THA; IS_A_BUFF(COST_1); level: 1; qval: Q_TAR;
    xval: ADJUST; yval: A_MOV; pval: +10; Purpose: EP_BUFF | EP_ESCAPE;
    On Event MSG_STATINAME "LStrider",
      EV_ISTARGET {
        if (GetHandle(EVictim) != NULL_OBJ)
          if (EVictim->isCreature() && EVictim->HasMFlag(M_HUMANOID))
            return SHOULD_CAST_IT;
        return CANNOT_CAST_IT;
        };
    Desc: "This spell provides an enhancement bonus of 50~ to the 
           movement rate of a single humanoid creature."; 
  }

Priest / Druid / Wizard / Sorcerer Spell "Call Companions" : EA_GENERIC
  { SC_WEA; Base: SP_TRIVIAL; Cost: 2; Level: 1; qval: Q_LOC; aval: AR_BOLT;
    cval: GREEN;
    Purpose: EP_PLAYER_ONLY;
    Desc: "This spell teleports your companions or followers (if you
    currently have any) to the area surrounding the target empty square.
    This spell is useful for helping wayward summoned monsters and animal
    companions navigate difficult terrain or for encouraging them to face
    a particular challenges on your behalf.";
    On Event EV_ISTARGET {
      if (EMap->SolidAt(e.EXVal,e.EYVal) ||
          EMap->FCreatureAt(e.EXVal,e.EYVal) != NULL)
        return CANNOT_CAST_IT;
      return CAN_CAST_IT; 
    },
    EV_EFFECT {
      hObj h; 
      for(h = EMap->FirstThing(); h ; h = EMap->NextThing())  {
        if (h->isType(T_CREATURE)) {
          if (h->isLedBy(EActor) && !(EActor->isLedBy(h))) {
            EActor->IPrint("The <hObj> appears!",h);
            if (EMap->SolidAt(e.EXVal,e.EYVal) || 
                EMap->FCreatureAt(e.EXVal,e.EYVal) != NULL) {
              h->PlaceNear(e.EXVal,e.EYVal);
            } else {
              h->PlaceAt(EMap,e.EXVal,e.EYVal);
            }
          } else {
            // ww: debugging
            // EActor->IPrint("The <hObj> reject you!",h);
          } 
        } 
      }
    };
    Constants:
      * SERVICE_SPELL_COST 100;
  }

Druid Spell "Sandblast" : EA_BLAST
  { SC_EVO|SC_EARTH; Base: SP_TRIVIAL; Cost: 2; Level: 1; qval: Q_DIR; 
    xval: AD_SLASH; pval: (LEVEL_SCALED)d6; cval: BROWN;
    Purpose: EP_ATTACK; On Event MSG_BLASTNAME "blast of sand";
    sval: REF partial; Flags: EF_DEFENSIVE;
    Desc: "You spray a blast of sand out from your hands inflicting
      1d6 points of abrasive (slashing) damage per caster level, in
      a 10 foot long arc in a direction of your choice. Creatures
      who fail to save against the effect are also stunned, but
      creatures with an armour rating of 7 or more against slashing
      damage are immune to this spell's effects. This spell does not
      provoke an attack of opportunity when cast.";
    On Event EV_ISTARGET {
      /* This is included so that the monster AI won't cast burning hands at
         targets that are out of the (customized) area of effect. */
      if (!EVictim->isBeside(EActor))
        return CANNOT_CAST_IT;
      if (EVictim->ResistLevel(AD_SLASH) >= 7)
        return CANNOT_CAST_IT;
      return SHOULD_CAST_IT;
      },
    EV_EFFECT {
      hObj h1,h2,h3; 

      #define HIT_SPOT(vx,vy,h)                                       \
        if (EMap->InBounds(EActor->x + vx,EActor->y + vy) &&          \
              !EMap->SolidAt(EActor->x + vx,EActor->y + vy))          \
          {                                                           \
            ETerm->PutGlyph(EActor->x + vx,                           \
                            EActor->y + vy,                           \
                            197 + (BROWN*256));                       \
            h = EMap->FCreatureAt(EActor->x + vx,EActor->y + vy);      \
          }                                                       
      h1 = NULL; h2 = NULL; h3 = NULL;
      if (DirX(e.EDir) && DirY(e.EDir)) {
        HIT_SPOT(DirX(e.EDir),DirY(e.EDir),h1)
        HIT_SPOT(DirX(e.EDir),0,h2)
        HIT_SPOT(0,DirY(e.EDir),h3)
        }
      else if (DirX(e.EDir)) {
        HIT_SPOT(DirX(e.EDir),0,h1)
        HIT_SPOT(DirX(e.EDir),1,h2)
        HIT_SPOT(DirX(e.EDir),-1,h3)
        }
      else if (DirY(e.EDir)) {
        HIT_SPOT(0,DirY(e.EDir),h1)
        HIT_SPOT(1,DirY(e.EDir),h2)
        HIT_SPOT(-1,DirY(e.EDir),h3)
        }
      else {
        e.SetParam(1,EActor);
        ReThrow(EV_MAGIC_STRIKE,e);
        e.isSomething = true;
        return DONE;
        }
      if ((EActor != NULL && EActor->isPlayer()) || 
          (EVictim != NULL && EVictim->isPlayer())) { 
        ETerm->TermUpdate();
        ETerm->StopWatch(500);
        ETerm->RefreshMap();
      } 
      if (h1) {
        e.SetParam(1,h1);                                      
        ReThrow(EV_MAGIC_STRIKE,e);                           
        }
      if (h2) {
        e.SetParam(1,h2);                                      
        ReThrow(EV_MAGIC_STRIKE,e);                           
        }
      if (h3) {
        e.SetParam(1,h3);                                      
        ReThrow(EV_MAGIC_STRIKE,e);                           
        }
      e.isSomething = true;
      return DONE;
      #undef HIT_SPOT
      };
  }
and EA_INFLICT
  { xval: STUNNED; sval: REF; Flags: EF_DSHORT; }

Druid Spell "Warp Wood" : EA_GENERIC
  { SC_ARC; Base: SP_MEDIUM; Cost: 5; Level: 2; qval: Q_LOC|Q_TAR; 
    Purpose: EP_PASSAGE | EP_UNLOCK | EP_CURSE; cval: BROWN; 
    hObj h; Flags: EF_CASTER_IMMUNE, EF_AFFECTS_ITEMS; lval: 4;
    pval: (LEVEL_1PER1)d6; sval: WILL; aval: AR_GLOBE;
    On Event EV_ISTARGET {
      if (GetHandle(EVictim) != NULL_OBJ)
        if (EVictim->isCreature())
          for (h=EVictim->FirstInv();h;h=EVictim->NextInv())
            if (h->isWooden())
              if (h->isType(T_BOW) || h->isType(T_MISSILE))
                return SHOULD_CAST_IT;
      for(h=EMap->FirstThing();h;h=EMap->NextThing()) {
        if (h->isType(T_DOOR) && (!(h->DoorFlags & (DF_OPEN|DF_SECRET))) && 
            h->isWooden() && EActor->Perceives(h) && 
            dist(EActor->x,EActor->y,h->x,h->y) <= 4)
          return SHOULD_CAST_IT; 
        else if ((h->isType(T_CONTAIN) || h->isType(T_CHEST)) &&
             h->isWooden() && 
            (h->HasStati(LOCKED)) && EActor->Perceives(h) &&  
            dist(EActor->x,EActor->y,h->x,h->y) <= 4)
          return SHOULD_CAST_IT; 
        }
      return CAN_CAST_IT; 
      },
    EV_MAGIC_HIT {
      hObj it;
      h = GetHandle(EVictim);
      if (h == GetHandle(EActor))
        return DONE;
      if (h->isType(T_DOOR) && (!(h->DoorFlags & (DF_BROKEN|DF_SECRET))) && 
          h->isWooden()) {
        h->DoorFlags |= DF_OPEN|DF_BROKEN;
        h->SetImage();
        e.isSomething = true;
        APrint(e,"The <hObj> swells and cracks apart in its frame!",h);
        } 
      else if ((h->isType(T_CONTAIN) || h->isType(T_CHEST)) &&
          h->isWooden() && (h->HasStati(LOCKED))) {
        h->RemoveStati(LOCKED); 
        h->SetImage();
        e.isSomething = true;
        APrint(e,"The <hObj> warps, snapping off its lock.",h);
        } 
      else if (h->isCreature()) {
        for (it=h->FirstInv();it;it=h->NextInv())
          if (it->isWooden())
            ThrowDmg(EV_DAMAGE,AD_DCAY,e.vDmg,"",EActor,it);
        }
      else if (h->isWooden())
        ThrowDmg(EV_DAMAGE,AD_DCAY,e.vDmg,"",EActor,h); 
      return DONE;
      };
    Desc: "Magically warps wooden objects within a 40-foot radius, inflicting
      1d6 points of damage per caster level. Doors are instead broken open in
      their frame, and chests are forcibly unlocked. The caster is unaffected,
      and any other creatures receive a Will save to prevent damage to
      their wooden items."; 
  }
   
Druid Spell "Magic Fang" : EA_INFLICT
  { SC_THA; IS_A_BUFF(COST_1); 
    Level: 1; qval: Q_TAR;
    xval: ADJUST; yval: A_DMG_BRAWL; pval: LEVEL_EVERY4;
    On Event EV_ISTARGET {
      if (!EVictim->isMType(MA_LIVING))
        return CANNOT_CAST_IT;
      return SHOULD_CAST_IT;
    };
    Desc: "Enhances one living creature's natural attacks, giving it
      a +1 to hit and damage at 1st level, increasing by +1 for every four
      levels thereafter. Such natural attacks count at magical +1 weapons,
      increasing by +1 every four levels.";
    On Event MSG_STATINAME "MFang"; 
    On Event EV_MAGIC_HIT
      "You grow feral." /
      "The <EVictim> grows feral!",
    EV_ELAPSED
      "You feel the feral power of the Magic Fang leave you." /
      "The <EActor> is no longer affected by Magic Fang."; 
  }
and EA_INFLICT
  { xval: ADJUST; yval: A_HIT_BRAWL; pval: LEVEL_EVERY4; }
and EA_INFLICT
  { xval: EXTRA_ABILITY; yval: CA_KI_STRIKE; pval: LEVEL_EVERY4;  }



Druid Spell "Detect Natural Traps" : EA_GENERIC
  { SC_THE; Base: SP_EASY; Cost: 2; Level: 1; 
    Purpose: EP_PLAYER_ONLY; Flags: EF_NOTBAD;
    On Event EV_MAGIC_HIT {
      hObj h; int16 found; rID teff; 
      found = 0; 
      for(h = EMap->FirstThing(); h ; h = EMap->NextThing()) 
        if (dist(EActor->x,EActor->y,h->x,h->y) <= 25 + e.vCasterLev*2) {
          if (h->isType(T_TRAP))
            if (!(h->TrapFlags & TS_FOUND)) {
              teff = h->tID;
              if (teff->HasFlag(EF_MUNDANE)) { 
                h->TrapFlags |= TS_FOUND;
                h->SetImage();
                h->Flags |= F_DELETE;
                EActor->IPrint("An <hObj>!",h);
                h->Flags &= ~F_DELETE;
                EMap->MarkAsSeen(0,h->x,h->y,0);
                found = 1;
              } 
            }
        }
      if (!found)
        EActor->IPrint("You find nothing of note.");
      else 
        EMap->VUpdate(EActor->x,EActor->y);
      };
    Desc: "Reveals the presence of natural traps like snares and pits.
    Magical traps, glpyhs and symbols are not detected. The range of this
    spell is 25 squares plus 2 squares per level.";
  }

Druid Spell "Puffball" : EA_BLAST
  { SC_ENC; Base: SP_MEDIUM; Cost: 1; Level: 1; qval: Q_DIR|Q_TAR|Q_LOC;
    aval: AR_BALL; lval: 3; cval: BROWN; sval: FORT;
    xval: AD_NORM; pval: (LEVEL_EVERY4)d3; }
and EA_INFLICT
  { xval: STUNNED; sval: FORT; tval: MA_BREATHER;
    Flags: EF_LIM_MTYPE, EF_DSHORT; Purpose: EP_ATTACK;
    On Event MSG_BLASTNAME "cloud of spores";
    Desc: "Enchants a normal toadstool or mushroom such that is
      explodes into a cloud of spores when thrown, causing anyone
      who fails a Fortitude save to suffer 1d3 points of damage,
      plus 1d3 points for every 4 additional caster levels -- and
      to be stunned for a very short period. The puffball affects
      only creatures who need to breathe."; } 
                                        
Druid Spell "Shillelagh" : EA_GENERIC
  { SC_ENC; IS_A_BUFF(COST_1); Level: 1; 
    Desc: "Imbues one of your non-cursed, blunt wooden melee weapons 
      with a +2 enhancement bonus and the thundering quality (+1d6 
      sonic damage).";
    hObj it; qval: Q_INV; Flags: EF_AFFECTS_ITEMS, EF_ITEMS_ONLY;
    On Event EV_ISTARGET {
      for(it=EActor->FirstInv();it;it=EActor->NextInv()) {
        if (it->isType(T_WEAPON))
          if (!(it->IFlags & IF_CURSED) && 
              (it->isWooden()) && it->HasIFlag(WT_BLUNT) &&
              (it->GetPlus() < 2 || it->QualityOK(WQ_THUNDERING)))
            return SHOULD_CAST_IT; 
        } 
      return CAN_CAST_IT;
      },
    EV_RATETARG {
      if (EItem->isType(T_WEAPON) && EItem->HasIFlag(WT_BLUNT) &&
           !(ETarget->IFlags & IF_CURSED) &&
           ETarget->isWooden() && ETarget->QualityOK(WQ_THUNDERING))
        return NOTHING;
      return ABORT;
      },  
    EV_MAGIC_STRIKE {
      if (ETarget->isType(T_WEAPON) && ETarget->HasIFlag(WT_BLUNT) &&
           !(ETarget->IFlags & IF_CURSED) &&
           ETarget->isWooden() && ETarget->QualityOK(WQ_THUNDERING)) {
        ETarget->GainTempStati(EXTRA_QUALITY,EActor,e.vDuration,SS_ENCH,
            WQ_THUNDERING,WQ_THUNDERING,$"shillelagh", e.vCasterLev);
        ETarget->GainTempStati(BOOST_PLUS, EActor, e.vDuration, SS_ENCH,
            0, +2, $"shillelagh", e.vCasterLev);
        }
      return DONE;
    }; 
  }

Druid  Spell "Faerie Fire" : EA_INFLICT
  { SC_EVO|SC_LIGHT; Base: SP_EASY; Cost: 1; Level: 1; qval: Q_LOC;
    aval: AR_GLOBE; cval: SKYBLUE; lval: 4; xval: ILLUMINATED; pval: +1; 
    Purpose: EP_CURSE | EP_COUNTER | AIM_AT_ENEMY (VS_INVIS);
    Desc: "Limns any creatures within a 40-foot radius with coloured, 
      flickering light, granting a +1 to hit it with ranged weapons, 
      making it unable to hide, negating the effects of blur or 
      displacement and making it visible from a greater distance 
      away.";
    On Event EV_MAGIC_HIT {    
      hText str;  
      switch(random(5)) {
        case 0: str = "silver"; break;
        case 1: str = "violet"; break;
        case 2: str = "amber"; break;
        case 3: str = "azure"; break;
        case 4: str = "crimson"; break;
        }
      VPrint(e,"You are limned in flickering <hText> light.",
               "The <EVictim> is limned in flickering <hText> light.", str);
      return NOTHING;
      };
    Flags: EF_SHOWNAME;
  }

Wizard / Druid  Spell "Obscurement" : EA_INFLICT 
  { xval: SKILL_BONUS; yval: SK_MOVE_SIL; pval: +2; }
  and EA_INFLICT 
  { SC_ARC|SC_AIR|SC_WATER; IS_A_BUFF(COST_1X); Level: 1; qval: 0; 
    lval: LEVEL_HALF_PLUS3;
    rval: FI_FOG; cval: GREY; Purpose: EP_BUFF|EP_STEALTH; aval: AR_MFIELD;
    Flags: EF_GLYPH_FOG;
    Desc: "Conjures a bank of fog which travels with you and limits
    normal vision and infravision to 10 feet. Wood Elves, second level
    Druids and other creatures with the Nature Sense ability can see
    through fog. The fog bank has a radius of 30 feet (3 squares) plus
    10 feet (1 square) for every two caster levels. The fog also muffles
    sound a bit, granting the caster a +2 bonus to Move Silently checks."; 
    On Event MSG_CAST
      "A bank of thick fog rises up!",
    EV_ELAPSED
      "The fog disperses."; 
    On Event EV_ISTARGET {
      if ((EActor->HasAbility(CA_NATURE_SENSE) ||
          EActor->HasAbility(CA_BLINDSIGHT) ||
          EActor->HasAbility(CA_TREMORSENSE) ||
          EActor->HasAbility(CA_TELEPATHY) ||
          EActor->HasAbility(CA_SCENT) ||
          EActor->HasStati(PERCEPTION)) &&
          (((int32)EActor) % 3) == 1)
        return SHOULD_CAST_IT; 
      else
        return CAN_CAST_IT; 
    } ; 
  } 


Druid Spell "Summon Nature's Ally I" : EA_SUMMON
  { SC_WEA; Base: SP_MEDIUM; Cost: 2; Level: 1; qval: Q_LOC;
    Purpose: EP_SUMMON; rval: $"Nature's Ally"; pval: 1; 
    Desc: "Summons a natural creature of CR 1 to fight in the 
      caster's name.";  
    ALIENIST_CLAUSE(1) }
    
Druid / Sorcerer Spell "Pass without Trace" : EA_INFLICT
  { SC_ILL; IS_A_BUFF(COST_1); Level: 1; qval: Q_LOC;
    xval: NONDETECTION; yval: PER_TREMOR | PER_SCENT | PER_TRACK;   
    On Event MSG_STATINAME "PwoTrace"; 
    Desc: "Turns your party effectively invisible on the wilderness
      screen -- encounters will not chase you, and even if you bump
      into one, you have a 50% chance of being able to decide whether
      you want to evade it or not. Additionally, you cannot be sensed
      by creatures using Scent, Tremorsense or Tracking."; }

Druid Spell "Forest Wall" : EA_TERRAFORM
  { SC_ARC; Base: SP_EASY; Cost: 1; Level: 1; qval: Q_DIR; aval: AR_BARRIER;
    Purpose: EP_FOIL_PURSUIT | EP_CURSE | AIM_AT_ENEMY (VS_MISSILES);
    xval: TERRA_FLOOR; rval: $"tree"; 
    Desc: "Conjures a sparse wall of trees. The trees obscure vision and
    slow movement by 25~. They count as trees for spells or abilities that
    require such. They can be climbed like normal trees."; 
    On Event MSG_CAST
      "A curtain of trees appears.";
  }

/* -- PALADIN 1 -- */

Effect "Divine Sacrifice" : EA_INFLICT
  {
    SC_THE; Level: 2; Cost: 3; 
    Desc: "Casting this spell, you sacrifice between two and ten hit
      points in order to gain the ability to inflict +1d10 extra damage
      on the next creature you hit for every 2 hit points you lose.
      The effect lasts only a short time; if you do not hit within
      the spell's duration, the sacrificed hit points are wasted. You
      can sacrifice a maximum number of hit points equal to your
      paladin level.";
    int16 sac; xval: TRAP_EVENT; yval: PRE(EV_HIT);
    On Event EV_EFFECT {
      int16 lv, ch; lv = EActor->LevelAs($"paladin");
      ch = EActor->ChoicePrompt("How many extra dice of damage?",
        lv >= 10 ? "12345" : lv >= 8 ? "1234" : lv >= 6 ? "123" :
        lv >= 4 ? "12" : "1", '0' + min(5,lv/2));
      sac = (ch - '0')*2;
      ThrowDmg(EV_DAMAGE,AD_NORM,sac,"martyrdom",EActor,EActor);
      return NOTHING;
      },
    POST(EV_MAGIC_HIT) {
      EVictim->GainTempStati(EFF_FLAG1,NULL,e.vDuration,SS_ENCH,
        e.MM, sac, $"Divine Sacrifice", e.vCasterLev);
      return NOTHING;
      },
    META(PRE(EV_HIT)) {
      uint32 meta; int16 dt, dmg;
      meta = EActor->GetEffStatiVal(EFF_FLAG1,$"Divine Sacrifice");
      sac  = EActor->GetEffStatiMag(EFF_FLAG1,$"Divine Sacrifice")/2;
      if (sac)
        {
          if (meta & MM_MAXIMIZE)
            dmg = sac * 10;
          else 
            dmg = (sac)d10;
          if (meta & MM_EMPOWER)
            dmg = (dmg*3)/2;
          e.bDmg += dmg;
          e.strDmg += Format(" %+d DSac",dmg);
          EActor->RemoveEffStati($"Divine Sacrifice");
        }
      return NOTHING;
      };
  }

/* -- DOMAIN 1 -- */
Effect "Silversheen;spell" : EA_GENERIC 
  {
    Level: 1; SC_ARC; IS_A_BUFF(COST_2X); Flags: EF_PERMANANT; 
    Desc: "This magical spell transmutes one of your non-organic 
    weapons, missiles, shields or armour into silver. Silver weapons strike
    true against undead, demons, devil and lycanthropes but have only half 
    the hardness of iron. Silver armour grants increased defense to attacks 
    from such creatures. The transmutation is permanant."; 
    hObj it;
    On Event 
      EV_ISTARGET {
        if (EActor->isMType(MA_UNDEAD) ||
            EActor->isMType(MA_LYCANTHROPE) ||
            EActor->isMType(MA_DEVIL) ||
            EActor->isMType(MA_DEMON)) 
          return CANNOT_CAST_IT;
        for(it=EActor->FirstInv();it;it=EActor->NextInv()) {
          if (it->isType(T_WEAPON) || it->isType(T_MISSILE) ||
              it->isType(T_SHIELD) || it->isType(T_ARMOUR))
            if (it->QualityOK(IQ_SILVER) && it->isMetallic()) {
              /* VPrint(e, "You could silver your <hObj>.",
                "The <EVictim> could silver <his:EVictim> <hObj>.",
                it); */
              return SHOULD_CAST_IT; 
              } 
          }
        return CANNOT_CAST_IT; 
      },
    EV_RATETARG {
      if (EItem->isType(T_WEAPON) || EItem->isType(T_MISSILE) ||
          EItem->isType(T_SHIELD) || EItem->isType(T_ARMOUR))
        if (EItem->QualityOK(IQ_SILVER) && EItem->isMetallic())
          return NOTHING;
      return ABORT;
      },  
    EV_MAGIC_STRIKE {
      if (ETarget->isType(T_WEAPON) || ETarget->isType(T_MISSILE) ||
          ETarget->isType(T_SHIELD) || ETarget->isType(T_ARMOUR))
        if (ETarget->QualityOK(IQ_SILVER) && ETarget->isMetallic())
          ETarget->GainTempStati(EXTRA_QUALITY,EActor,e.vDuration,SS_ENCH,
              IQ_SILVER,IQ_SILVER, $"silversheen;spell", e.vCasterLev);
      return DONE;
      }; 
  }

0 Effect  "Succor Contingency" : EA_INFLICT
  { SC_NEC; xval: TRAP_EVENT; SC_WEA;
    IS_A_BUFF(COST_1X); Level: 1; 
    yval: PRE(EVICTIM(EV_DAMAGE)); 
    Desc: "While under the influence of this spell, if you are about to
    take damage that would reduce your hit points to 33~ or less, there is
    a 20~ chance that you will be teleported away randomly before the
    damage is dealt. If you are teleported away you lose one point of
    fatigue and take two points of Luck damage."; 
    On Event EV_MAGIC_HIT
      "A sweet aura surronds you."
      "A sweet aura surronds the <EVictim>.";
    On Event MSG_STATINAME "Succor"; 
    On Event META(PRE(EVICTIM(EV_DAMAGE))) {
        if (EActor != EVictim && EActor->isCreature()) {
          if ( (EVictim->cHP - e.vDmg) < 
               (EVictim->mHP / 3) ) {
            if (random(100) < 20) {
              DPrint(e,"The <EVictim> is granted succor!",
                  "You are granted succor!");
              ThrowEff(EV_EFFECT,$"dimension door",EVictim,EVictim);
              EVictim->LoseFatigue(1,false);
              ThrowDmg(EV_DAMAGE,AD_DALU,2,"the karmic strain of a Succor Contingency",EVictim,EVictim,NULL,NULL);
              return ABORT; 
            } 
          } 
        } 
    }; 
  } 

Effect "Retributive Mirror" : EA_INFLICT
  { SC_NEC; xval: TRAP_EVENT; IS_A_BUFF(COST_2X); Level: 2;
    yval: PRE(EVICTIM(EV_DAMAGE)); 
    Desc: "While under the influence of this spell, one third of all
    damage dealt to you (round down) is reflected back to the attacker.
    Unless the attacker dies, the full amount then strikes you.";
    On Event EV_MAGIC_HIT
      "A reflective sheen surronds you."
      "A reflective sheen surronds the <EVictim>.";
    On Event MSG_STATINAME "Retrib"; 
    On Event META(PRE(EVICTIM(EV_DAMAGE))) {
      hObj caster;
      int16 bonus; 
        if (EActor != EVictim && EActor->isCreature()) {
          bonus = e.vDmg / 5;
          if (bonus > 0) {
            ThrowDmg(EV_DAMAGE,AD_NORM,bonus,"retributive strike",
              EVictim,EActor,EItem,EItem2);
            if (EActor->isDead())
              return ABORT; 
          } 
        } 
    }; 
  } 

Effect "Brand of Hatred" : EA_GENERIC 
  {
    IS_A_BUFF(COST_1X); SC_THE; Level: 1; qval: Q_INV;
    Desc: "This spell brands a weapon of your choice, forever marking it as a Bane 
      weapon (+2 attack bonus, +2d6 magic damage) against your Favoured Enemy from
      the Hatred Domain power."; 
    hObj it; Flags: EF_AFFECTS_ITEMS, EF_ITEMS_ONLY;
    On Event 
      EV_ISTARGET {
        for(it=EActor->FirstInv();it;it=EActor->NextInv()) {
          if (it->isType(T_WEAPON) || it->isType(T_BOW))
            if (it->QualityOK(WQ_BANE))
              return SHOULD_CAST_IT; 
          }
        return CAN_CAST_IT; 
        },
      EV_RATETARG {
        if (EItem->isType(T_WEAPON) && EItem->QualityOK(WQ_BANE))
          return NOTHING;
        return ABORT;
        },
      EV_MAGIC_HIT {
        if (ETarget->isType(T_WEAPON) && ETarget->QualityOK(WQ_BANE))
          ETarget->AddQuality(WQ_BANE,EActor->GetEffStatiVal(FAV_ENEMY,$"hatred"));
        return DONE;
        }; 
  }

Effect "Benevolence" : EA_GRANT
  { SC_THE; IS_A_BUFF(COST_1); Level: 1; Flags: EF_GOOD;
    xval: SKILL_BONUS; yval: SK_DIPLOMACY; pval: LEVEL_MIN5; }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_APPRAISE; pval: LEVEL_MIN5;
    Desc: "Casting this spell evokes an air of trustworthyness
      around you, exposing your fundamental goodness and
      encouraging other creatures to deal honestly and fairly
      with you, knowing you will do likewise. The caster thus
      receives a bonus to Diplomacy and Appraise equal to
      her caster level (minimum +5).";
    On Event MSG_STATINAME "Benevolence" / "Ben"; }

Effect "Malignance" : EA_GRANT
  { SC_THE; IS_A_BUFF(COST_1); Level: 1; Flags: EF_EVIL;
    xval: SKILL_BONUS; yval: SK_BLUFF; pval: LEVEL_MIN5; }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_INTIMIDATE; pval: LEVEL_MIN5;
    Desc: "Casting this spell evokes an air of hatefulness
      and malice around the caster, making her seem sinister
      and terrifying while obscuring her true intentions.
      The caster thus receives a bonus to Bluff and Intimidate
      equal to her caster level (minimum +5).";
    On Event MSG_STATINAME "Malignance" / "Mal"; }

Effect "Detect Blood" : EA_INFLICT
  { SC_DIV; SC_THA; IS_A_BUFF(COST_2X); 
    Level: 2; xval: DETECTING; 
    yval: MA_HAS_BLOOD; pval: 25d1 + (LEVEL_2PER1); 
    Desc: "Reveals all creatures that have blood, seen or unseen, within
    (25 + [caster level x 2]) squares of you."; 
    On Event MSG_STATINAME "DetBlood"; 
  }

Effect "Caustic Vitae" : EA_BLAST
  { SC_NEC; SC_THA; pval: (LEVEL_SCALED)d8; sval: REF PARTIAL; Level: 1; 
    aval: AR_BOLT; qval: Q_DIR | Q_TAR; Purpose: EP_ATTACK;
    Flags: EF_HALF_UNTYPED, EF_PERMANANT; 
    Base: SP_TRIVIAL; 
    Desc: "Casting this spell causes your own blood to burst from your
      veins and fly toward the target of your choice. When it strikes
      an opponent it does 1d8 points of acid damage per cast level (scaled
      at 10th level). A Reflex saving throw is allowed for half damage. Due
      to the sacrifice involved in casting this spell, half of the damage
      dealt cannot be resisted. Casting this spell carries a heavy toll:
      the caster takes one-fourth of the damage dealt as blood loss."; 
    On Event EV_EFFECT {
      int32 dmg ; 
      dmg = e.vDmg / 4; 
      ThrowDmg(EV_DAMAGE,AD_NORM,dmg,"casting caustic vitae",EActor,EActor);
      if (EActor->Flags & F_DELETE)
        return DONE;
      return NOTHING;
      };
  }

Priest / Sorcerer Spell "Entropic Shield" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(COST_1); Level: 1; 
    Flags: EF_DOMAIN; 
    xval: MISS_CHANCE; yval: MISS_RANGED; pval: 50;
    Purpose: EP_BUFF (VS_MISSILES);
    Desc: "Manipulates chance to cause all ranged attacks against
      you to have a 50% miss chance.";
    On Event EV_MAGIC_HIT "You feel lucky.",
            MSG_STATINAME "EntShield" / "EntS",
            EV_ELAPSED "You no longer feel as lucky."; }

Effect "Moment" : EA_INFLICT
  { SC_DIV; Base: SP_TRIVIAL; Cost: 2; Level: 1; 
    Flags: EF_SHOWNAME, EF_ONCEONLY, EF_DOMAIN, EF_DXLONG, EF_NOTBAD;
    xval: SKILL_BONUS; yval: -1; pval: +4; Purpose: EP_BUFF;
    Desc: "By discerning the most numeralogically perfect moment
      in which to perform a given action, you are able to gain a
      +4 circumstance bonus to the next skill roll you make."; }

Effect "Pain Touch" : EA_INFLICT
  { SC_NEC; Base: SP_TRIVIAL; Cost: 1; Level: 1; aval: AR_TOUCH; sval: FORT;
    Purpose: EP_ATTACK (VS_NECRO); cval: SHADOW; lval: LEVEL_MIN3;
    xval: ADJUST_PAIN; yval: A_AID; pval: -3; tval: MA_LIVING; 
    Flags: EF_LIM_MTYPE, EF_DLONG, EF_NOTBAD, EF_SHOWNAME, EF_CANCEL; 
    Desc: "Any living creature you touch is overcome with agony
      on a failed Fortitude save, suffering a -3 general penalty
      to all actions. You get a number of touches per casting
      equal to your priest level (minimum 3).";
    On Event MSG_CAST
      "Your hands glow with an angry red aura." /
      "The <EActor>'s hands glow with an angry red aura.",
      EV_MAGIC_HIT
      "You are wracked with pain!" /
      "The <EVictim> howls in agony!";
  }

Effect "Protection from Theft" : EA_INFLICT
  {
    SC_ABJ; IS_A_BUFF(2); Level: 1;
    xval: SAVE_BONUS; yval: SN_THEFT; pval: +4;
    Desc: "This spell protects the caster from having her property
      stolen, making her preternaturally alert and perceptive with
      regard to pickpockets -- in game terms, granting her a +4 bonus
      to saving throws against theft.";
  }

/* ============================================================= 
 *                   Level Two Priest Spells
 * =============================================================
Druid Spell "Blood Fury" : EA_INFLICT
Druid Spell "Alicorn Lance" : EA_BLAST
Druid Spell "Beast Claw" : EA_INFLICT
Druid Spell "Detect Elementals" : EA_INFLICT
Priest / Druid Spell "Heal Mount" : EA_GENERIC
Priest Spell "Align Weapon" : EA_GENERIC
Priest / Druid Spell "Aid" : EA_INFLICT
Priest  Spell "Draw upon Holy Might" : EA_INFLICT
Priest Spell "Calm Emotions" : EA_INFLICT
Priest  Spell "Chant" : EA_GENERIC
Priest  Spell "Consecrate" : EA_INFLICT
Priest  Spell "Desecrate" : EA_INFLICT  
Priest / Druid Spell "Cure Moderate Wounds" : EA_HEALING
Priest  Spell "Divine Silence" : EA_GENERIC
Priest  Spell "Enthrall" : EA_GENERIC
Priest Spell "Find Traps" : EA_INFLICT
Priest Spell "Holy Summoning II" : EA_SUMMON
Priest Spell "Inflict Moderate Wounds" : EA_BLAST
Priest  Spell "Shield Other" : EA_INFLICT
Priest  Spell "Spiritual Hammer" : EA_SUMMON
Druid  Spell "Barkskin" : EA_INFLICT
Druid Spell "Entangle" : EA_INFLICT
Druid Spell "Chill Metal" : EA_INFLICT
Druid Spell "Heat Metal" : EA_INFLICT
Druid Spell "Hold Beast" : EA_INFLICT
Druid Spell "Tree Stride" : EA_TRAVEL
Druid Spell "Rooting" : EA_INFLICT
Wizard / Druid  Spell "Flaming Sphere" : EA_SUMMON
Druid Spell "Flame Blade" : EA_GENERIC
Druid Spell "Soften Stone" : EA_TERRAFORM
Druid Spell "Stone Tell" : EA_GENERIC
Druid Spell "Verdant Aid" : EA_SUMMON
Druid Spell "Forestation" : EA_TERRAFORM
Druid Spell "Summon Nature's Ally II" : EA_SUMMON
Druid Spell "Produce Flame" : EA_CREATION
Druid Spell "Might of the Oaks" : EA_INFLICT
Druid Spell "Speed of the Wind" : EA_INFLICT
Druid Spell "Persistance of the Waves" : EA_INFLICT
Druid Spell "Creeping Cold" : EA_INFLICT
Wizard / Priest Spell "Miscast Magic" : EA_INFLICT
 */

Druid Spell "Detect Elementals" : EA_INFLICT
  { SC_DIV; IS_A_BUFF(COST_2); Level: 2; xval: DETECTING; yval: MA_ELEMENTAL; 
    pval: 25d1 + (LEVEL_2PER1);
    Desc: "Reveals all Elementals, seen or unseen, within (25 + [caster
    level x 2]) squares of you."; 
    On Event MSG_STATINAME "DetElem"; 
  }

// WW: ok, let's make an evil touch attack for the Blood guys
Effect "Sanguine Touch" : EA_BLAST
  { SC_THA; SC_NEC; Base: SP_TRIVIAL; Cost: 2; Level: 2; aval: AR_TOUCH;
    Purpose: EP_ATTACK (VS_GENERAL); cval: RED; lval: LEVEL_MIN10;
    sval: NOSAVE; xval: AD_NORM; pval: (LEVEL_SCALED)d6; tval: MA_HAS_BLOOD; 
    Flags: EF_NOTBAD, EF_LIM_MTYPE, EF_DLONG, EF_SHOWNAME, EF_CANCEL;  }
  and EA_BLAST
  { aval: AR_TOUCH; xval: AD_DRCO; pval: (LEVEL_SCALED)d2; 
    sval: FORT PARTIAL; tval: MA_HAS_BLOOD; }
  and EA_BLAST
  { aval: AR_TOUCH; xval: AD_BLEE; pval: (LEVEL_SCALED)d2; 
    sval: FORT PARTIAL; tval: MA_HAS_BLOOD;
    Desc: "Your hands glow with a crimson red aura and your touch
      has decidedly unpleasant effects on creatures with blood: their 
      blood explodes outward at your touch, damaging their internal organs
      and leaving gaping holes. On applicable victims your touch inflicts
      [Caster Level]d6 points of unblockable damage, drains [Caster
      Level]d2 points of Constitution and causes bleeding for [Caster
      Level]d2 rounds. The last two effects allow partial Fortitude saves.
      The Caster Level-based effects are scaled starting at 10th level. You
      gain one attack per level, minimum of 10."; 
    On Event MSG_CAST
      "Your hands glow with a blood red aura." /
      "The <EActor>'s hands glow with a blood red aura.";
  }

/* fjm: Allowed bonus damage on this one -- it's a low-damage
   spell that does piercing damage, which is easy to resist,
   AND it allows a save for half (used to be save for NONE!) */
Druid Spell "Alicorn Lance" : EA_BLAST
  { SC_EVO|SC_FORCE; Base: SP_MEDIUM; Cost: 5; Level: 2; xval: AD_PIERCE; 
    Purpose: EP_ATTACK (VS_GENERAL); cval: WHITE; Flags: EF_PARTIAL;
    pval: 3d6; sval: REF; qval: Q_DIR|Q_TAR|Q_LOC; aval: AR_BOLT; 
    Desc: "This spell creates a silver-hued, partially ethereal lance
    shaped in the form of an alicorn (a unicorn horn).  The spellcaster
    chooses a target and the alicorn lance instantaneously fires at it,
    inflicting 3d6 points of piercing damage, with a saving throw for half
    damage. Because the lance is partially ethereal, it counts as a ghost
    touch effect and strikes true against incorporeal creatures."; 
    On Event MSG_BLASTNAME "silvery lance";
  }

Druid Spell "Sunscorch" : EA_BLAST
  { SC_EVO|SC_LIGHT; Base: SP_EASY; Cost: 3; Level: 2; qval: Q_TAR;
    xval: AD_SUNL; pval: (LEVEL_EVERY3)d6; cval: YELLOW;
    Flags: EF_ATTACK; On Event MSG_BLASTNAME "flare of sunlight"; 
    Purpose: EP_ATTACK; }
and EA_INFLICT
  { xval: BLIND; sval: FORT; Flags: EF_DSHORT, EF_NO_BONUS_DMG; 
    Desc: "Creates a blinding hot flare of sunlight that inflicts 1d6
      points of sunlight damage for every 3 caster levels, starting at 1st,
      and blinds a target briefly if they fail a Fortitude save. An
      attack roll is required to hit with this spell, and undead suffer
      maximum damage."; 
    On Event EV_MAGIC_STRIKE {
      if (EVictim->isMType(MA_UNDEAD))
        e.MM |= MM_MAXIMIZE;
    };
  }

Druid Spell "Snowstrike" : EA_BLAST
  { SC_EVO; SC_COLD; SC_WATER; Base: SP_MEDIUM; Cost: 5; Level: 2; sval: REF partial;
    xval: AD_COLD; pval: (LEVEL_EVERY2)d4; Purpose: EP_ATTACK;
    aval: AR_BALL; qval: Q_DIR | Q_TAR; cval: COL_COLD; lval: 2;
    Desc: "Creates an explosive blast of snow that deals (caster level / 2)d4
    points of cold damage to all creatures within a 10 foot (1 square)
    radius. The caster and her allies are immune to the effect."; 
  }

Druid Spell "Rainstorm" : EA_INFLICT { 
    xval: NONDETECTION; yval: PER_SCENT|PER_BLIND; Flags: EF_DLONG; 
  } and EA_BLAST
  { SC_ARC|SC_WATER; IS_A_BUFF(COST_2X); 
    Level: 2; aval: AR_MFIELD;
    rval: FI_FOG | FI_MODIFIER | FI_OBVIOUS | FI_CONTINUAL; 
    lval: 4; xval: AD_SOAK; pval: 2d3; 
    Flags: EF_GLYPH_FOG, EF_CASTER_IMMUNE_BLAST; cval: blue; 
    Desc: "Conjures a bank of thunderclouds at ground level that burst
    forth with a supernatural torrent of rain. The clouds limit vision to
    10 feet. Wood Elves, second level Druids and other creatures with the
    Nature Sense ability can see through the clouds. The clouds have
    a radius of 40 feet (4 squares). All creatures within the rainstorm
    except the caster take 2d3 points of Soaking damage to all exposed
    equipment every round. The cannot be detected by Scent or Blindsight
    while the storm lasts."; 
    On Event EV_ISTARGET {
      if (EActor->HasAbility(CA_NATURE_SENSE) ||
          EActor->HasAbility(CA_BLINDSIGHT) ||
          EActor->HasAbility(CA_TREMORSENSE) ||
          EActor->HasAbility(CA_TELEPATHY) ||
          EActor->HasAbility(CA_SCENT) ||
          EActor->HasStati(PERCEPTION))
        return SHOULD_CAST_IT; 
      else
        return CAN_CAST_IT; 
    } ; 
    On Event MSG_CAST
      "A vast rainstorm appears!",
    EV_ELAPSED
      "The vast rainstorm disperses."; }

Druid Spell "Beast Claw" : EA_INFLICT
  { SC_THA; IS_A_BUFF(COST_2X); 
    Level: 2; qval: 0;
    xval: ADJUST; yval: A_STR; pval: 4; 
    Flags: EF_DEFENSIVE; 
    Desc: "This spell transforms the caster's arms into the claws of a
    mighty beast, giving the caster a +4 bonus to strength and the ability
    to rake an opponent for 2d4 (+ strength bonus) points of slashing
    damage.  The caster can attack twice per round with the beast claws.";
    On Event EV_ISTARGET {
      if (EActor->isMonster())
        if (((int32)(GetHandle(EActor))) % 5 != 3)
          return CANNOT_CAST_IT;
      if (!(EVictim->HasEffStati(TEMPLATE,$"clawed;template")))
         return SHOULD_CAST_IT;
      return CANNOT_CAST_IT; 
    };
  } and EA_GENERIC { 
    On Event EV_MAGIC_HIT {
      if (EVictim->HasAttk(A_CLAW))
        {
          EVictim->IDPrint("You already have a natural claw attack.",
            "The <hObj> already has a natural claw attack.", EVictim);
          return ABORT;
        }
      EVictim->GainTempStati(TEMPLATE,EActor,e.vDuration,SS_ENCH,
          0, 1, $"clawed;template", 
          e.vCasterLev + (e.MM & MM_FORTIFY ? 5:0));
      EVictim->GainTempStati(SUSPEND_ATTK,EActor,e.vDuration,SS_ENCH,
          A_PUNC, A_PUNC, $"clawed;template", 
          e.vCasterLev + (e.MM & MM_FORTIFY ? 5:0));
      EVictim->GainTempStati(SUSPEND_ATTK,EActor,e.vDuration,SS_ENCH,
          A_CLAW, A_CLAW, $"clawed;template", 
          e.vCasterLev + (e.MM & MM_FORTIFY ? 5:0));
      EVictim->SetImage();
      EVictim->CalcValues();
      };
  } 

Template "clawed;template" : TM_NATURE for MA_LAST /* hack */
  {
    Desc: "This spell transforms the caster's arms into the claws of a
    mighty beast, giving the caster a +4 bonus to strength and the ability
    to rake an opponent for 2d4 (+ strength bonus) points of slashing
    damage.  The caster can attack twice per round with the beast claws.";
    Str +0; 
    Attk: 
      A_RAKE for 2d4 AD_SLASH,
      A_RAKE for 2d4 AD_SLASH;
  } 


Priest / Druid Spell "Heal Mount" : EA_GENERIC
  { SC_THE; Base: SP_TRIVIAL; Cost: 5; Level: 2; 
    cval: GREEN; Purpose: EP_PLAYER_ONLY;
    Desc: "This spell Heals your mount (if you currently
    have one), as per the Priest spell Heal."; 
    On Event EV_MAGIC_HIT {
      hObj h; 
      h = EActor->GetStatiObj(MOUNTED);
      if (h != NULL) {
        EActor->IPrint("Your mount, <hObj>, is healed!",h);
        ThrowEff(EV_EFFECT,$"heal;spell",EActor,h,NULL,NULL); 
      } else {
        EActor->IPrint("You do not appear to have a mount");
      } 
    };
  }

/* -- CLERIC 2 -- */							 

#if 0
Priest Spell "Holy Weapons" : EA_GENERIC
  { SC_THE; IS_A_BUFF(COST_2); Level: 2; 
    Desc: "Temporarily enchants your non-missile weapons, making them Holy
    if you are good or Unholy if you are evil. Such weapons deal an
    addition 2d6 points of magic damage to creatures that oppose their
    moral axis."; 
    hObj it;
    int16 qual;
    On Event 
      EV_ISTARGET {
        if (EActor->isMType(MA_GOOD)) qual = WQ_HOLY;
        else if (EActor->isMType(MA_EVIL)) qual = WQ_UNHOLY;
        else return -1;
        for(it=EActor->FirstInv();it;it=EActor->NextInv()) {
          if (it->isType(T_WEAPON) || it->isType(T_BOW))
            if (it->QualityOK(qual))
              return SHOULD_CAST_IT; 
        }
        return CANNOT_CAST_IT; 
      } ,
      EV_MAGIC_STRIKE {
        if (EActor->isMType(MA_GOOD)) qual = WQ_HOLY;
        else if (EActor->isMType(MA_EVIL)) qual = WQ_UNHOLY;
        else return DONE;
        for(it=EActor->FirstInv();it;it=EActor->NextInv()) {
          if (it->isType(T_WEAPON) || it->isType(T_BOW))
            if (it->QualityOK(qual)) {
              it->GainTempStati(EXTRA_QUALITY,EActor,e.vDuration,SS_ENCH,qual,qual,$"holy weapons");
            } 
        }
      };
  }

Priest Spell "Lawful Weapons" : EA_GENERIC
  { SC_THE; IS_A_BUFF(COST_2); Level: 2; 
    Desc: "Temporarily enchants your non-missile weapons, making them
    Lawful if you are lawful or Chaotic if you are chaotic. Such weapons
    deal an addition 2d6 points of magic damage to creatures that oppose
    their moral axis."; 
    hObj it;
    int16 qual;
    On Event 
      EV_ISTARGET {
        if (EActor->isMType(MA_LAWFUL)) qual = WQ_LAWFUL;
        else if (EActor->isMType(MA_CHAOTIC)) qual = WQ_CHAOTIC;
        else return -1;
        for(it=EActor->FirstInv();it;it=EActor->NextInv()) {
          if (it->isType(T_WEAPON) || it->isType(T_BOW))
            if (it->QualityOK(qual))
              return SHOULD_CAST_IT; 
        }
        return CANNOT_CAST_IT; 
      } ,
      EV_MAGIC_STRIKE {
        if (EActor->isMType(MA_LAWFUL)) qual = WQ_LAWFUL;
        else if (EActor->isMType(MA_CHAOTIC)) qual = WQ_CHAOTIC;
        else return DONE;
        for(it=EActor->FirstInv();it;it=EActor->NextInv()) {
          if (it->isType(T_WEAPON) || it->isType(T_BOW))
            if (it->QualityOK(qual)) {
              it->GainTempStati(EXTRA_QUALITY,EActor,e.vDuration,SS_ENCH,qual,qual,$"holy weapons");
            } 
        }
      };
  }
#endif

Priest / Druid Spell "Aid" : EA_INFLICT
  { SC_THE; IS_A_BUFF(COST_2); Level: 2; qval: Q_TAR;
    xval: ADJUST_SAC; yval: A_AID; pval: +1; }
and EA_INFLICT
  { xval: ADJUST_SAC; yval: A_THP; pval: (LEVEL_EVERY4)d8; 
    Desc: "Grants the chosen subject a +1 bonus to hit and damage,
      as well as 1d8 temporary hit points for every four caster
      levels, starting with 1d8 at 3rd level."; 
    Constants:
      * SERVICE_SPELL_COST 75;
  }

Priest / Sorcerer Spell "Calm Emotions" : EA_INFLICT
  { SC_ENC; Base: SP_EASY; Cost: 4; Level: 2; Flags: EF_MENTAL, EF_DLONG;
    aval: AR_GLOBE; lval: 4; qval: Q_LOC | Q_TAR; cval: CYAN;
    xval: CHARMED; yval: CH_CALMED; sval: WILL; Purpose: EP_PLAYER_ONLY;
    Desc: "Causes hostile, intelligent creatures within a 40 foot
      radius globe who are not evil, have not been given a strong
      reason to attack you and are of lower CR then you to become
      friendly.";
    On Event EV_ISTARGET {
	  if (!EVictim->isHostileTo(EActor))
	    return CANNOT_CAST_IT;
	  if (EVictim->isPlayer())
	    return CANNOT_CAST_IT;
      if (EVictim->HasMFlag(M_UNIQUE) || EVictim->HasMFlag(M_EVIL))
        return CANNOT_CAST_IT;
      if (!EVictim->isMType(MA_SAPIENT))
        return CANNOT_CAST_IT;
      if (EVictim->ChallengeRating() > EActor->ChallengeRating())
        return CANNOT_CAST_IT;
      return CAN_CAST_IT; 
      };
  } 

Priest  Spell "Chant" : EA_GENERIC
  { SC_ENC; Base: SP_TRIVIAL; Cost: 4; Level: 2; 
    Flags: EF_MENTAL, EF_SOUND, EF_CANCEL;
    aval: AR_GLOBE; lval: 6; Purpose: EP_PLAYER_ONLY;
    On Event EV_EFFECT {
      EActor->RemoveStati(SINGING);
      EActor->GainPermStati(SINGING,NULL,SS_MISC,0,6,$"chant");
      DPrint(e,"You begin a deep, sonorous war chant.",
               "The <EActor> begins a reverbrant clerical chant.");
      },
    EV_MAGIC_HIT {
      if (EVictim->HasMFlag(M_DEAF))
        return DONE;
      if (EVictim->isFriendlyTo(EActor)) {
        EVictim->IPrint("You feel uplifted!");
        EVictim->GainPermStati(ADJUST_MOR,EActor,SS_SONG,A_AID,+1,$"chant");
        EVictim->GainPermStati(ADJUST_MOR,EActor,SS_SONG,A_DMG,+1,$"chant");
        }
      else if (EVictim->isHostileTo(EActor)) {
        EVictim->IPrint("You feel disheartened!");
        EVictim->GainPermStati(ADJUST_MOR,EActor,SS_SONG,A_AID,-1,$"chant");
        EVictim->GainPermStati(ADJUST_MOR,EActor,SS_SONG,A_DMG,-1,$"chant");
        }
      return DONE;
      };
    Desc: "Grants you and your allies (within 60 feet) a +1 morale bonus to
      hit, damage and saves, and conversely inflicts a -1 morale penalty on
      your enemies -- so long as you continue to chant.";
  }

Priest  Spell "Consecrate" : EA_INFLICT
  { SC_THE; Base: SP_EASY; Cost: 3; Level: 2; qval: Q_LOC;
    aval: AR_GLOBE; lval: 6; cval: WHITE; tval: MA_UNDEAD;
    xval: ADJUST_SAC; yval: A_AID; pval: -2; 
    Flags: EF_LIM_MTYPE, EF_DLONG, EF_GOOD; 
    Purpose: EP_COUNTER (VS_UNDEAD); 
    Desc: "Fills an area with holy energies, such that all undead
      therein suffer a -2 penalty to hit, damage and saves, and
      have their turn resistance lowered by 4, even below 0."; }
and EA_INFLICT
  { aval: AR_GLOBE; xval: EXTRA_ABILITY; yval: CA_TURN_RESISTANCE;
    pval: -4;
	On Event EV_MAGIC_HIT
	  "Holy energy weakens you!" /
	  "Holy energy weakens the <EVictim>!"; }

Effect "Death Knell" : EA_NOTIMP { }

Priest  Spell "Desecrate" : EA_INFLICT
  { SC_THE; IS_A_BUFF(COST_2); 
    Level: 2; qval: Q_LOC;
    aval: AR_GLOBE; lval: 6; cval: SHADOW; tval: MA_UNDEAD;
    xval: ADJUST_SAC; yval: A_AID; pval: +2; 
    Flags: EF_LIM_MTYPE, EF_EVIL; 
    Desc: "Fills an area with unholy energies, such that all undead
      therein suffer a +2 bonus to hit, damage and saves, and
      gain a +4 turn resistance that stack with any they might
      already have."; }
and EA_INFLICT
  { aval: AR_GLOBE; xval: EXTRA_ABILITY; yval: CA_TURN_RESISTANCE;
    pval: +4; 
	On Event EV_MAGIC_HIT
	  "Unholy energy strengthens you!" /
	  "Unholy energy strengthens the <EVictim>!"; }

Priest / Sorcerer / Druid Spell "Cure Moderate Wounds" : EA_HEALING
  { SC_THE; Base: SP_EASY; Cost: 0; Level: 2; qval: Q_TAR|Q_NEAR;
    xval: HEAL_HP; pval: 2d8 + LEVEL_MAX10; yval: 15; 
    Flags: EF_VARMANA, EF_LOSEMANA; Purpose: EP_FIX_TROUBLE (TROUBLE_INJURY);
    Desc: "Heals you of 2d8 + your level in hit points of damage, to a
      maximum of 2d8+10, with a hit point to mana ratio of 1.5 per 1. Healing
      spells disrupt unlife, inflicting twice the damage to an undead
      creature they would have healed in a living one.";
    Constants:
      * SERVICE_SPELL_COST 30;
  }

Priest / Sorcerer  Spell "Silence" : EA_GENERIC
  { SC_ARC; Base: SP_MEDIUM; Cost: 5; Level: 2; qval: Q_LOC;
    aval: AR_FIELD; rval: FI_SILENCE; cval: AZURE; lval: 4; 
    Purpose: EP_CURSE (VS_CASTING);
    Desc: "Creates a field of supernatural silence 40 feet in 
      radius, inside which spellcasters cannot produce the
      verbal components of their spells."; }

/* Priest Spell "Endurance" -- see wspells.irc */

Priest  / Sorcerer Spell "Enthrall" : EA_GENERIC
  { SC_ENC; Base: SP_EASY; Cost: 4; Level: 2; cval: CYAN;
    aval: AR_GLOBE; lval: 6; sval: WILL;
    tval: MA_LIVING; Purpose: EP_PLAYER_ONLY;
    Flags: EF_MENTAL, EF_SOUND, EF_CANCEL, EF_CASTER_IMMUNE;
    On Event EV_EFFECT {
      EActor->RemoveStati(SINGING);
      EActor->GainPermStati(SINGING,NULL,SS_MISC,0,6,$"enthrall");
      EActor->GainPermStati(TRAP_EVENT,EActor,SS_SONG,PRE(EV_STRIKE),0,$"enthrall");
      },
    EV_MAGIC_HIT {
      EVictim->GainPermStati(PARALYSIS,EActor,SS_SONG,0,0,$"enthrall");
      },
    META(PRE(EV_STRIKE)) {
      if (e.isAoO)
        return DONE;
      EActor->RemoveStati(SINGING);
      return NOTHING;
      };
    Desc: "Your performance -- spoken or sung -- holds all creatures within
      60 feet (6 squares) who fail a Will save spellbound (effectively
      paralyzed). If you attack or stop singing, however, the effect is 
	  broken.";
  }

Priest Spell "Find Traps" : EA_INFLICT
  { SC_DIV; IS_A_BUFF(COST_2); Level 2;
    xval: SKILL_BONUS; yval: SK_SEARCH; pval: LEVEL_1PER1;
    Desc: "You gain intuitive insight into the workings of traps and 
    hidden things. You gain an bonus equal to your caster
    level (maximum +10) on Search checks made while the spell is
    in effect. Note that find traps grants no ability to disable the traps
    that you may find."; }
    /*
  and EA_INFLICT 
  { xval: SKILL_BONUS; yval: SK_SEARCH; pval: LEVEL_1PER1; } 
  */


Priest Spell "Holy Summoning II" : EA_SUMMON
  { SC_WEA; Base: SP_MEDIUM; Cost: 5; Level: 2; qval: Q_LOC;
    Purpose: EP_SUMMON; rval: $"Holy Summons"; pval: 2; 
    Desc: "Summons an outsider of CR 2 to fight in the 
      caster's name.";  
    ALIENIST_CLAUSE(2) }


Priest Spell "Inflict Moderate Wounds" : EA_BLAST
  { SC_NEC; Base: SP_TRIVIAL; Cost: 3; Level: 2; aval: AR_TOUCH;
    xval: AD_NECR; pval: 2d8 + LEVEL_MAX10; cval: BROWN; 
    Flags: EF_CANCEL, EF_DLONG, EF_NOTBAD; Purpose: EP_ATTACK;
    On Event EV_CAST
      "Your hands glow with a black aura." /
      "The <EActor>'s hands glow with a black aura.",
     EV_MAGIC_HIT
      "Wounds appear on your body!" /
      "Wounds appear on the <EVictim>'s body!";
    Desc: "Inflicts 2d8 + caster level (maximum 1d8+10) points of necromantic
      damage on the next creature you touch.";
  }

Priest /Scroll Spell "Make Whole" : EA_GENERIC
  { SC_ARC; Cost: 15; Level: 2; Base: SP_EASY;
    pval: 100; qval: Q_INV;
    Flags: EF_AFFECTS_ITEMS, EF_LOSEMANA;
    Desc: "Repairs all damage to an item in the 
      caster's possession.";
    hObj it;
    On Event 
      EV_ISTARGET {
        for(it=EActor->FirstInv();it;it=EActor->NextInv()) {
            if (it->GetHP() < it->MaxHP())
              return SHOULD_CAST_IT; 
          }
        return CANNOT_CAST_IT; 
        },
      EV_MAGIC_STRIKE {
        if (EVictim->GetHP() < EVictim->MaxHP()) {
          EVictim->MendHP(e.vDmg * 10);
          if (EVictim->GetHP() >= EVictim->MaxHP())
            VPrint(e,"Your <hObj> has been fully restored.",NULL,EVictim);
          else
            VPrint(e,"Your <hObj> has been partially restored.",NULL,EVictim);
          }
      } ;
    Constants:
      * SERVICE_SPELL_COST 500;
  }

Priest Spell "Magic Stone" : EA_GENERIC
  {
    SC_THE|SC_EARTH; Base: SP_EASY; Cost: 15; Level: 2; qval: Q_INV;
    Flags: EF_PERSISTANT, EF_LOSEMANA, EF_AFFECTS_ITEMS,
      EF_ITEMS_ONLY; char ch;
    On Event EV_RATETARG {
      if (ETarget->isType(T_ITEM))
        if (ETarget->iID == $"stone" ||
            ETarget->iID == $"rock" ||
            ETarget->iID == $"sling stone")
          return NOTHING;
      return ABORT;
      },
    EV_EFFECT {
      ch = EActor->ChoicePrompt("Missile, Lore, Ration or Sentinel?", "mlrs", 'm');
      if (ch == -1)
        return ABORT;
      return NOTHING;
      },
    EV_MAGIC_HIT {
      hObj hA, hB;
      switch (ch)
        {
          case 'm':
            ETarget->GainTempStati(BOOST_PLUS,EActor,e.vDuration,SS_ENCH,1,
              max(1,min(5,e.vCasterLev / 3)), $"magic stone", e.vCasterLev);
            ETarget->GainTempStati(EXTRA_QUALITY,EActor,e.vDuration,SS_ENCH,
              WQ_THUNDERING,0, $"magic stone", e.vCasterLev);
            VPrint(e,"","The <EVictim> gives off a soft silvery glow.");
            return DONE;
          case 'l':
            ETarget->MakeKnown(0xFF);
            EActor->IPrint("That is an <hObj>.",ETarget);
            return DONE;
          case 'r':
            hA = ETarget->TakeOne();
            hA->Remove(true);
            hB = CreateItem($"edible stone");
            EActor->GainItem(hB, true);
            return DONE;
          case 's':
            hA = ETarget->TakeOne();
            hA->Remove(true);
            hB = CreateMonster($"stone sentinel");
            hB->PlaceAt(EMap, EActor->x, EActor->y);
            if (EActor->isPlayer())
              hB->MakeCompanion(EActor,PHD_MAGIC);
            hB->Initialize();
            return DONE;
        }
      return ERROR;
      };
    Desc: "Casting this spell allows a priest to briefly awaken
      the spirit of any one stone (or stack of stones) of
      hand-held size or smaller. This can have any one of
      the four following effects:\n
      __<10>Stone Bolt:<2> A mundane rock or sling bullet
      (or stack thereof), is transformed into a powerful
      magical missile: a +1 thundering weapon. The magical
      plus increases by one for every three caster levels
      the caster possesses.\n
      __<10>Stone Lore:<2> The caster speaks with the stone,
      learning its nature -- this form of the spell works to
      identify any magical stone, rock or sling bullet it is
      cast upon.\n
      __<10>Stone Ration:<2> This form of the magic renders
      the affected stone edible (by creatures that can normally
      subsist on vegetable matter). A priest can survive and
      even sustain a small group in times of privation in this
      manner, but in the long run eating stones has an adverse
      effect on one's health.\n
      __<10>Stone Sentinel:<2> This form of the casting briefly
      animates the rock, turning it into a tiny stone figure
      called a stone sentinel. Such a creature is very weak,
      being less than a foot tall, but is difficult to hit and
      may serve as a useful distraction in a time of need.";
  }

Item "edible stone" : T_FOOD
  {
    Image: brown '*'; 
    Mat: MAT_GRANITE; Weight: 15; hp: 10;
    Nutrition: 10; Flags: IT_NOGEN;
    Desc: "While this rock retains the texture of normal stone, it has
      been rendered edible and sustaining by a priest's magic, and can
      be eaten like a ration.";
    On Event EV_EAT {
      EActor->Abuse(A_CON,2);
      return NOTHING;
      };
  }

Priest / Scroll Spell "Negative Plane Protection" : EA_INFLICT
  { SC_THE; IS_A_BUFF(COST_2X); Level: 2; qval: Q_TAR;
    xval: TRAP_EVENT; yval: PRE(EV_DAMAGE); Flags: EF_GOOD, EF_STAPLE;
    Desc: "Creates a subdued aura of positive energy around
      the caster, deflecting the life-draining attacks of
      undead such as wights and wraiths. This spell protects
      against [2 + Cha mod] such attacks, causing them to
      drain only 1/4th the amount of experience that they
      normally would.";
    On Event META(PRE(EV_DAMAGE)) {
      if (e.DType == AD_DREX) {
        e.vDmg /= 4;
        APrint(e,"A warm golden flash blocks the negative energies!");
        EVictim->IncEffStatiMag(EFF_FLAG1,$"Negative Plane Protection",
                   SS_MISC, NULL, +1);
        if (EVictim->GetEffStatiMag(EFF_FLAG1,$"Negative Plane Protection") >
              max(0,EVictim->Mod(A_CHA)) + 1) {
          EVictim->RemoveEffStati($"Negative Plane Protection");
          APrint(e,"The golden aura fades away.");
          }
        }
      return NOTHING;
      },
    MSG_STATINAME "NegProt";
  }

/* Priest Spell "Resist Fire/Acid/Cold/Lightning" -- see wspells.irc */

Priest  Spell "Shield Other" : EA_INFLICT
  { SC_THA; Base: SP_TRIVIAL; Cost: 3; Level: 2; qval: Q_TAR;
    xval: TRAP_EVENT; yval: EVICTIM(EV_DAMAGE); tval: MA_LIVING;
    Flags: EF_LIM_MTYPE, EF_DLONG, EF_NOTBAD; Purpose: EP_PLAYER_ONLY;
    On Event META(EVICTIM(EV_DAMAGE)) {
      hObj sh;
      if (e.DType > AD_LAST_PHYSICAL)
        return NOTHING;
      e.vDmg /= 2;
      sh = EVictim->GetEffStatiObj(TRAP_EVENT,$"shield other");
      ThrowDmg(EV_DAMAGE,e.DType,e.vDmg,"sharing damage with an ally",EActor,sh);
      sh->IPrint("The sympathetic link transfers damage!");
      return DONE;
      };
    Desc: "Establishes a sympathetic link between the caster and a chosen
      target, such that any damage the target sustains is divided evenly
      between both.";
  }

Priest  Spell "Spiritual Hammer" : EA_SUMMON
  { SC_EVO; Base: SP_MEDIUM; Cost: 4; Level: 2; qval: Q_LOC; pval: 3; 
    rval: $"spiritual hammer;monster"; Purpose: EP_SUMMON; 
    Flags: EF_DLONG, EF_XSUMMON;
    Desc: "Summons a warhammer-shaped manifestation of force
      (approximately CR 3) to strike at your enemies."; }

/* ww: Wed Nov  5 18:17:36 PST 2003 -- my methods rate the original spiritual 
 * hammer as CR 1/4 -- it's pathetic. Holy Summoning II is 
 * always superior. Let's try to beef this guy up. This modified version
 * is about CR 3, which makes it stronger than HS2 in some cases ... but
 * it's also not immune to normal weapons. */
Monster "spiritual hammer;monster" : MA_CONSTRUCT
  { 
    Image: bright cyan GLYPH_WEAPON; Size: SZ_SMALL; Mana: 0;
    CR: 3; HD: 2; Def: 12; Hit: +4; Mov: 150%; Spd: 120%;
    Str 16, Dex 14, Con 0, Int 0, Wis 10, Cha 0;
    Arm: 2; 
    Attk: A_SLAM for 1d8+2 AD_BLUNT and 2d4 AD_STUN (DC 16);
          ABILITY(CA_KI_STRIKE,1);
          ABILITY(CA_BLINDSIGHT,9);
          ABILITY(CA_FLIGHT,6); 
    Immune: DF_MIND, DF_POIS, DF_SLEE, DF_PLYS, DF_STUN,
            DF_DISE, DF_NECR, DF_CRIT, DF_SUBD, DF_PSYC;
    Feats: FT_POWER_ATTACK;
    Flags: M_NOHANDS, M_NOLIMBS, M_NOHEAD, M_NOBODY, M_NOPOLY,
      M_NOGEN, M_NOGENO, M_MAGC, M_MFLYER, M_NEUTER,
	  M_NO_CORPSE; 
    Desc: "This warhammer-shaped manifestation of force
    was summoned by a priest."; 
  }

/* -- DRUID 2 -- */

/* It's not unreasonable to have this as a Wizard spell, but it's
 * intentionally not in any easy spellbooks. */
Effect "Blood Fury" : EA_INFLICT
  { SC_THE; SC_THA; IS_A_BUFF(COST_2); 
    Level: 2; qval: Q_TAR;
    xval: RAGING; pval: LEVEL_SCALED2; 
    Flags: EF_DOMAIN;
    Desc: "Excites the target into a terrible rage. The target gains a Rage
    bonus to its Strength and Constitution equal to half your level (scaled
    at 10) and a Rage bonus to Will saves equal to one fourth your level.
    At level 14 the target is immune to Confusion and at level 26 the target
    is immune to Stunning. The effect behaves like a Barbarian's Rage
    ability. Note that you cannot cast spells while raging."; 
    On Event EV_ISTARGET {
      if (!EVictim->isMType(MA_HAS_BLOOD)) return CANNOT_CAST_IT; 
      else return CAN_CAST_IT; 
    } ;
  }


Druid  Spell "Barkskin" : EA_INFLICT
  { SC_THA; IS_A_BUFF(COST_2X); Level: 2; 
    xval: ADJUST_INH; yval: A_ARM; pval: 3d1 + LEVEL_1PER5;
    Desc: "Gives you a natural armour rating of 3, plus one for
      every five caster levels above 1st."; 
    Constants:
      * SERVICE_SPELL_COST 50;
  }

Druid Spell "Chill Metal" : EA_INFLICT
  { SC_ARC|SC_COLD; SC_COLD; Base: SP_MEDIUM; Cost: 5; Level: 2; qval: Q_TAR;
    xval: TRAP_EVENT; yval: EV_TURN; Purpose: EP_CURSE | EP_ATTACK (VS_FIRE);
    Flags: EF_SHOWNAME;
    On Event MSG_STATINAME "Chill Metal" "CMet"; 
    On Event EV_MAGIC_HIT 
      "You feel a strange chill in your equipment!" /
      "The <EVictim>'s items look colder!",
  	EV_ELAPSED
	    "Your equipment no longer seems cold." /
	    "The <EActor>'s equipment stops freezing.",
    META(EV_TURN) {
      hObj it; 
      hObj killer;
      int32 r; 
      r = EActor->ResistLevel(AD_COLD);
      if (r == -1 || r >= 8) { e.Immune = true; return NOTHING; }
      for(it = EActor->FirstInv(); it && 
        !(EActor->isDead()) ; it = EActor->NextInv())
        if (it->GetParent() == GetHandle(EActor))
        { 
          if (it->isMetallic()) {
            if ((it->isCursed() || it->isType(T_ARMOUR) || it->isType(T_BOOTS)
                  || it->isType(T_CLOTHES)) && (it->IFlags & IF_WORN))
            {
              VPrint(e,"Your <hObj> sears your flesh!",
                  "The <EActor>'s <hObj> sears!",it);
              ThrowDmg(EV_DAMAGE,AD_COLD,2d4,
                  "freezing metal items",EActor,EActor);
            }
            else if ((it->IFlags & IF_WORN))
            {
              VPrint(e,"Your <hObj> sears your flesh!",
                  "The <EActor>'s <hObj> sears!",it);
              ThrowDmg(EV_DAMAGE,AD_COLD,1d4,
                  "freezing metal items",EActor,EActor);
            }
          }
        }
      if (EActor->isDead()) {
        killer = EActor->GetEffStatiObj(TRAP_EVENT,$"chill metal");
        if (killer)
          killer->KillXP(EActor);
        }
      return NOTHING;
      };
    Desc: "Chills all the metal items a target carries, causing cold damage
    and often inspiring non-immune targets to drop loose metal items. 
    Each round, metal armour, boots and clothes cause 2d4 points of cold
    damage. Other worn metal items (e.g., bracers, amulets, gauntlets,
    girdles) cause 1d4 points of cold damage. Note that this spell
    does not benefit from the Maximize Spell or Empower Spell metamagic
    feats.";
  }

Druid Spell "Heat Metal" : EA_INFLICT
  { SC_ARC|SC_FIRE; Base: SP_MEDIUM; Cost: 5; Level: 2; qval: Q_TAR;
    xval: TRAP_EVENT; yval: EV_TURN;
    Flags: EF_SHOWNAME;
    On Event MSG_STATINAME "Heat Metal" "HMet"; 
    Purpose: EP_CURSE | EP_ATTACK (VS_COLD) ;
    On Event EV_MAGIC_HIT 
      "You feel a strange warmth in your equipment!" /
      "The <EVictim>'s items look warmer!",
  	EV_ELAPSED
	    "Your equipment no longer seems hot." /
	    "The <EActor>'s equipment stops burning.",
    META(EV_TURN) {
      hObj it; 
      hObj killer;
      int32 r; 
      r = EActor->ResistLevel(AD_FIRE);
      if (r == -1 || r >= 8) { e.Immune = true; return NOTHING; }
      for(it = EActor->FirstInv(); it && 
        !(EActor->isDead()) ; it = EActor->NextInv())
        if (it->GetParent() == GetHandle(EActor))
        { 
          if (it->isMetallic()) {
            if ((it->isCursed() || it->isType(T_ARMOUR) || it->isType(T_BOOTS)
                  || it->isType(T_CLOTHES)) && (it->IFlags & IF_WORN))
            {
              VPrint(e,"Your <hObj> sears your flesh!",
                  "The <EActor>'s <hObj> sears!",it);
              ThrowDmg(EV_DAMAGE,AD_FIRE,2d4,
                  "burning metal items",EActor,EActor);
            }
            else if ((it->IFlags & IF_WORN))
            {
              VPrint(e,"Your <hObj> sears your flesh!",
                  "The <EActor>'s <hObj> sears!",it);
              ThrowDmg(EV_DAMAGE,AD_FIRE,1d4,
                  "burning metal items",EActor,EActor);
            }
          }
        }
      if (EActor->isDead()) {
        killer = EActor->GetEffStatiObj(TRAP_EVENT,$"heat metal");
        if (killer)
          killer->KillXP(EActor);
        }
      return NOTHING;
      };
    Desc: "Heats all the metal items a target carries, causing fire damage
    and often inspiring non-immune targets to drop loose metal items. 
    Each round, metal armour, boots and clothes cause 2d4 points of fire
    damage. Other worn metal items (e.g., bracers, amulets, gauntlets,
    girdles) cause 1d4 points of fire damage. Note that this spell
    does not benefit from the Maximize Spell or Empower Spell metamagic
    feats.";
  }

Druid Spell "Hold Beast" : EA_INFLICT
  { SC_ENC; Level: 2; Cost: 4; Base: SP_MEDIUM; qval: Q_TAR;
    xval: PARALYSIS; sval: FORT; Purpose: EP_CURSE (VS_MENTAL);
    Desc: "Paralyzes one chosen beast, provided they fail a Fortitude
      save.";
    On Event EV_ISTARGET {
      if (EVictim->isMType(MA_SAPIENT))
        return CANNOT_CAST_IT;
      if (EVictim->isMType(MA_ANIMAL) || EVictim->isMType(MA_BEAST))
        return SHOULD_CAST_IT;
      return CANNOT_CAST_IT;
      };
  }

Druid Spell "Tree Stride" : EA_TRAVEL
  { SC_WEA; Level: 2; Cost: 2; Base: SP_EASY;
	  xval: TRAVEL_TO_TARG;	Purpose: EP_ESCAPE;	pval: 30;
    Flags: EF_DEFENSIVE;
    Desc: "With this spell, a druid can utilize trees as a method of
      near-instantaneous travel -- if cast while standing beneath a
      tree, the druid can appear anywhere within 300 feet of her
      starting locale; otherwise, she steps out of a tree within 300
      feet of her starting location. If no trees are available within
      the spell's area, it simply fails.";
    On Event EV_MAGIC_HIT {
		  Rect r; uint16 xy, ta;
      e.isLoc = true;
      if (EActor->isPlayer() && (e.MM & MM_CONTROL)) {
  		  e.vRange = 30;
        if (!ETerm->EffectPrompt(e,Q_LOC,false,"Tree Stride Destination"))
				  return ABORT;
        if (!EMap->TreeAt(EActor->x,EActor->y))
          if (!EMap->TreeAt(e.EXVal,e.EYVal))
            { e.EXVal = -1; e.EYVal = -1; }
      } else {
      
        if (EMap->TreeAt(EActor->x,EActor->y))
          ta = 0;
        else
          ta = FOA_TREES_ONLY;
        
        r@x1 = max(1,EVictim->x - e.vRange);
        r@x2 = min(EMap->SizeX()-1,EVictim->x + e.vRange);
        r@y1 = max(1,EVictim->y - e.vRange);
        r@y2 = min(EMap->SizeY()-1,EVictim->y + e.vRange);
        
        if (!EMap->FindOpenAreas(r,ta))
          {
            e.EXVal = -1;
            e.EYVal = -1;
          }
        else
          {
            xy = EMap->GetOpenXY();
            e.EXVal = xy % 256;          
            e.EYVal = xy / 256;
          }
        }  
			return NOTHING;
			};
  }

    
Druid Spell "Rooting" : EA_INFLICT
  { SC_ENC|SC_EARTH; Level: 4; Cost: 6; Base: SP_TRIVIAL;
    xval: ADJUST_NAT; yval: A_ARM; pval: +10;
    Flags: EF_PERMANANT, EF_SHOWNAME, EF_DEFENSIVE, EF_NOTBAD;
    // Purpose: EP_BUFF (VS_MELEE); 
    Purpose: EP_PLAYER_ONLY; 
    On Event META(EV_MOVE), META(EV_JUMP) {
      EActor->RemoveEffStati($"Rooting");
      return NOTHING;
      },
    EV_EFFECT {
      if (EActor->isAerial() || EMap->TerrainAt(EActor->x,
            EActor->y)->TerrainHasFlag(TF_WATER))
        {
          EActor->IPrint("You must be standing on solid ground to use 
            <9>Rooting<7> properly.");
          return ABORT;
        }
      return NOTHING;
      },
    MSG_STATINAME "Rooted" / "Ro";

    Desc: "Casting this spell attunes the druid mystically to the
      earth or stone he is standing on, rooting him to the spot
      and bestowing the endurance of Therya itself. The druid gains
      a +10 natural bonus to his armour rating versus slashing,
      piercing and blunt damage, as well as immunity to knockdown,
      stunning, knockback, teleportation and critical hits. The
      effects last until the druid moves.";
  }
and EA_INFLICT
  { xval: IMMUNITY; yval: AD_KNOC; }   
and EA_INFLICT
  { xval: IMMUNITY; yval: AD_STUN; }   
and EA_INFLICT
  { xval: IMMUNITY; yval: AD_TRIP; }   
and EA_INFLICT
  { xval: IMMUNITY; yval: AD_CRIT; }
and EA_INFLICT
  { xval: ANCHORED; }
and EA_INFLICT
  { xval: TRAP_EVENT; yval: EV_MOVE; }   
and EA_INFLICT
  { xval: TRAP_EVENT; yval: EV_JUMP; }   

Wizard / Druid  Spell "Flaming Sphere" : EA_SUMMON
  { SC_EVO|SC_FIRE; Level: 2; Cost: 4; Base: SP_MEDIUM; qval: Q_LOC; pval: 3; 
    rval: $"flaming sphere;monster"; Flags: EF_DLONG, EF_XSUMMON;
    Desc: "Conjures a boulder-sized globe of fire that rolls
      around and burns your enemies (approximate CR 3)."; Purpose: EP_SUMMON; }

/* ww: Wed Nov  5 18:30:22 PST 2003 -- my methods indicate that the
 * original flaming sphere here was CR 1/4, making it vastly inferior to
 * Animal Summoning 2. Let's beef it up a bit. Now it has CR 3 -- slightly
 * stronger than AS2 in some cases, but predictable. */
Monster "flaming sphere;monster" : MA_CONSTRUCT
  { Image: red GLYPH_PILLAR; Size: SZ_MEDIUM; Mana: 0;
    CR: OPT_CR(3,3); HD: 3; Def: 8; Hit: +4; Mov: 150%; Spd: 150%;
    Str 12, Dex 14, Con 0, Int 0, Wis 10, Cha 0;
    Attk: A_RUBS for 2d6 AD_FIRE and 0d0 AD_TRIP (DC 18),
          A_AURA for 2d6 AD_FIRE;
          ABILITY(CA_KI_STRIKE,1);
          ABILITY(CA_WOODLAND_STRIDE,1);
          ABILITY(CA_BLINDSIGHT,9); 
    Immune: DF_MIND, DF_POIS, DF_SLEE, DF_PLYS, DF_STUN,
            DF_DISE, DF_NECR, DF_CRIT, DF_SUBD, DF_PSYC,
            DF_FIRE;
    Feats: FT_TRAMPLE, FT_POWER_ATTACK; 
    Flags: M_NOHANDS, M_NOLIMBS, M_NOHEAD, M_NOPOLY,
      M_NOGEN, M_NOGENO, M_MAGC, M_FIRE, M_MINDLESS,
      M_PSYCHO, M_NEUTER, M_NO_CORPSE; 
  }

Druid Spell "Flame Blade" : EA_GENERIC
  { SC_EVO|SC_FIRE; IS_A_BUFF(COST_2); Level: 2; Purpose: EP_BUFF (VS_MELEE);
    Desc: "This spell can be cast in one of two forms, both of which last for a
    full day:\n
    __<9>Conjure Flame Blade:<1> A 3-foot-long, blazing beam of red-hot fire springs 
    forth from your hand. You wield this bladelike beam as if it were a scimitar.
    The flame blade inflicts 3d8 points of fire damage otherwise has statistics
    identical to a scimitar - save that you do not receive a Strength bonus on the
    damage, since the blade is immaterial.\n
    __<9>Augment Existing Blade:<1> You augment any one weapon from the Short Blades
    or Long Blades group, granting it the Flaming weapon quality. A weapon that already
    has the flaming quality is granted the Burst quality instead.";
    On Event PRE(EV_EFFECT) {
      char ch;
      ch = EActor->ChoicePrompt("Augment or conjure?","ac",'c'); 
      if (ch == 'c')
        {
          RedirectEff(e,$"flame blade;conjure",EV_EFFECT);
          return DONE;
        }
      else
        {
          RedirectEff(e,$"flame blade;augment",EV_EFFECT);
          return DONE;
        }
      };
  }
  
Effect "flame blade;augment" : EA_GENERIC
  {
    qval: Q_INV; Flags: EF_DXLONG;
    On Event EV_ISTARGET {
      hObj it;
      for(it=EActor->FirstInv();it;it=EActor->NextInv()) {
        if (it->isGroup(WG_SBLADES) || it->isGroup(WG_LBLADES))
          if (it->QualityOK(WQ_FLAMING) || (it->QualityOK(WQ_BURST) &&
                it->HasQuality(WQ_FLAMING)))
            if (it->iID != $"flame blade;weapon")
              return SHOULD_CAST_IT; 
        }
      return CAN_CAST_IT; 
      },
    EV_RATETARG {
      if (EItem->isGroup(WG_SBLADES) || EItem->isGroup(WG_LBLADES))
        if (EItem->QualityOK(WQ_FLAMING) || (EItem->QualityOK(WQ_BURST) &&
              EItem->HasQuality(WQ_FLAMING)))
          if (EItem->iID != $"flame blade;weapon")
            return NOTHING;
      return ABORT;
      },  
    EV_MAGIC_STRIKE {
      if (ETarget->iID == $"flame blade;weapon")
        return DONE;
      if (ETarget->isGroup(WG_SBLADES) || ETarget->isGroup(WG_LBLADES)) {
        if (ETarget->QualityOK(WQ_FLAMING))
          ETarget->GainTempStati(EXTRA_QUALITY,EActor,e.vDuration,SS_ENCH,
            WQ_FLAMING,WQ_FLAMING,$"flame blade");
        else if (ETarget->HasQuality(WQ_FLAMING) && ETarget->QualityOK(WQ_BURST))
          ETarget->GainTempStati(EXTRA_QUALITY,EActor,e.vDuration,SS_ENCH,
            WQ_FLAMING,WQ_FLAMING,$"flame blade");
        }
      return DONE;
      };  
  }
  
Effect "flame blade;conjure" : EA_CREATION
  {
    xval: CREA_WIELD | CREA_TEMP; rval: $"flame blade;weapon"; 
    Flags: EF_DLONG;  
  }

Druid Spell "Soften Stone" : EA_TERRAFORM
  { SC_ARC|SC_EARTH; Base: SP_TRIVIAL; Cost: 3; Level: 2; qval: Q_LOC;
    rval: $"shallow mud"; Purpose: EP_PASSAGE; xval: TERRA_ROCK;
    Desc: "Turns one terrain square of stone (i.e., a dungeon wall) 
      into mud."; }

Druid Spell "Stone Tell" : EA_GENERIC
  { SC_DIV|SC_EARTH; Base: SP_HARD; Cost: 15; Level: 2; pval: 20d1 + (LEVEL_1PER1);
    Desc: "By communing with primordial spirits of rock, the caster
      is able to learn the layout of the solid stone within 200 feet
      plus 10 feet per caster level of her.";
    Purpose: EP_PLAYER_ONLY; 
    On Event EV_MAGIC_HIT {
      Rect r; int16 x, y; rID terID;

      if (!EVictim->isPlayer())
        return NOTHING;

      r@x1 = max(1,EVictim->x - e.vDmg);
      r@x2 = min(EMap->SizeX()-1,EVictim->x + e.vDmg);
      r@y1 = max(1,EVictim->y - e.vDmg);
      r@y2 = min(EMap->SizeY()-1,EVictim->y + e.vDmg);
      for (x=r@x1;x<=r@x2;x++)
        for (y=r@y1;y<=r@y2;y++)
          if (dist(x,y,EVictim->x,EVictim->y) <= e.vDmg)
            if (EMap->InBounds(x,y) && EMap->SolidAt(x,y))
              /* if (is_stone(EMap->TerrainAt(x,y)->Material)) */
                /* Assumption: Player #0 */  
                EMap->MarkAsSeen(0,x,y,0);
      EMap->VUpdate(EVictim->x,EVictim->y);
      return DONE;
    };
  }

/* HACKFIX */
#if 0
Druid Spell "Verdant Aid" : EA_SUMMON
  { SC_WEA; Base: SP_HARD; Cost: 4; Level: 2; qval: Q_LOC;
    Purpose: EP_SUMMON; xval: MA_PLANT; rval: $"generic summons"; pval: LEVEL_MAX10; 
    Desc: "Conjures plants with a challenge rating equal to your
      level (max 10) to fight on your behalf. Plants are generally neither
      particularly mobile nor particularly effective in combat. The
      advantages of this spell over other summoning spells are (1) it is
      easy to cast and (2) the effect scales with your level."; } 
#endif

Druid Spell "Forestation" : EA_TERRAFORM
  { SC_WEA; Base: SP_EASY; Cost: 4; Level: 2; qval: Q_LOC; 
    Purpose: EP_CURSE | EP_FOIL_PURSUIT | AIM_AT_ENEMY | EP_FIX_TROUBLE (TROUBLE_ENEMIES); /* Flags: EF_DLONG;  */
    xval: TERRA_FLOOR; rval: $"tree"; aval: AR_GLOBE; lval: 4;
    Desc: "Creates a grove of trees to spring up on open ground. The
      trees block normal sight, slightly hinder movement and can be used
      by any other spells that require trees or plants to be present."; 
    On Event MSG_CAST
      "A grove of trees appears!";
  }

Druid Spell "Summon Nature's Ally II" : EA_SUMMON
  { SC_WEA; Base: SP_MEDIUM; Cost: 4; Level: 2; qval: Q_LOC;
    Purpose: EP_SUMMON; rval: $"Nature's Ally"; pval: 2; 
    Desc: "Summons a natural creature of CR 2 to fight in the 
      caster's name.";  
    ALIENIST_CLAUSE(2) }

Item "produced flame" : T_WEAPON
  {
    Image: yellow '*';
    Mat:MAT_FORCE;
    SDmg:1d6;
    LDmg:1d6;
    Crit: x2; Threat: 2; Spd: +100%; Range: 10; 
    Acc: +5;  // magic missile never misses, and this is supposed to be a
              // ranged touch attack ...
    Group: WG_THROWN | WG_SIMPLE;
    Size: SZ_TINY; 
    Cost: OPT_COST(88,0); 
    Flags: WT_NO_STRENGTH , IT_NOGEN , 
           WT_FIRE_DAMAGE; 
    Desc: "Produced Flame is as bright as a torch and fits comfortably in
    the hand of a druid. It does not harm the bearer or the bearer's
    equipment. When thrown, a produced flame does damage and then
    disappears." ;
    On Event POST(EV_RATTACK) {
      if (GetHandle(EItem2) && EItem2->iID == $"produced flame")
        EItem2->Remove(true);
      return NOTHING;
      },
    PRE(EV_DROP) {
      EActor->IPrint("You dispel the produced flame.");
      EItem->Remove(true);
      return DONE;
      },
    EV_TURN {
      if (EActor->isType(T_ITEM) && 
           GetHandle(EActor->m) != NULL_OBJ)
        {
          EActor->IDPrint("","The produced flame gutters out.");
          EActor->Remove(true);
          return DONE;
        }
      return NOTHING;
      },
    PRE(EV_LOSEITEM), EV_ENTER {
      EItem->Remove(true);
      return DONE;
      },
    PRE(EV_INSERT) {
      EActor->IPrint("You can't put conjured flame into a container.");
      return ABORT;
      },
    PRE(EV_WIELD) {
      if (e.EParam != SL_READY && e.EParam != SL_WEAPON) {
        EActor->IPrint("You need to hold the flame in your hands, or it will
                          go out.");
        return ABORT;
        }
      return NOTHING;
      },
    EV_GETNAME {
      e.EParam |= NA_SINGLE;
      e.nCursed = "";
      e.nArticle = (e.EParam & NA_THE) ? "the " : "";
      e.nAppend += XPrint(" (<Num> shot<hText>, <Num> turn<hText>)",
         EActor->GetQuantity(), EActor->GetQuantity() == 1 ? "" : "s",
         EActor->GetStatiDur(SUMMONED), EActor->GetStatiDur(SUMMONED) == 1 ? "" : "s");
      return NOTHING;
      };
  }

Druid Spell "Might of the Oaks" : EA_INFLICT
  { SC_THA|SC_EARTH; IS_A_BUFF(COST_2); Level: 2; 
    xval: ADJUST; yval: A_STR; pval: +6; }
and EA_INFLICT
  { xval: ADJUST; yval: A_DEX; pval: -2; 
    Desc: "Grants you a +6 magic bonus to Strength, at the cost of
      accepting a -2 magic penalty to Dexterity. This spell can be
      cancelled at will with the Cancel Standing Ability command."; }

Druid Spell "Speed of the Wind" : EA_INFLICT
  { SC_THA|SC_AIR; IS_A_BUFF(COST_2); Level: 2; 
    xval: ADJUST; yval: A_DEX; pval: +6; }
and EA_INFLICT
  { xval: ADJUST; yval: A_CON; pval: -2; 
    Desc: "Grants you a +6 magic bonus to Dexterity, at the cost of
      accepting a -2 magic penalty to Constitution. This spell can be
      cancelled at will with the Cancel Standing Ability command."; }

Druid Spell "Persistance of the Waves" : EA_INFLICT
  { SC_THA|SC_WATER; IS_A_BUFF(COST_2); Level: 2; 
    xval: ADJUST; yval: A_CON; pval: +6; }
and EA_INFLICT
  { xval: ADJUST; yval: A_STR; pval: -2; 
    Desc: "Grants you a +6 magic bonus to Constitution, at the cost of
      accepting a -2 magic penalty to Strength. This spell can be
      cancelled at will with the Cancel Standing Ability command."; }

Druid Spell "Creeping Cold" : EA_INFLICT
  { SC_NEC|SC_COLD; Base: SP_MEDIUM; Cost: 4; Level: 2; qval: Q_TAR;
    xval: TRAP_EVENT; yval: EV_TURN; pval: 0;
    tval: MA_LIVING; Flags: EF_LIM_MTYPE, EF_PERMANANT;
    Purpose: EP_PLAYER_ONLY; // ww: can be removed when 'default' bug is fixed
    On Event META(EV_TURN) {
      hObj killer; int16 i, j, k, c;
   	  i = EActor->GetEffStatiVal(TRAP_EVENT,$"creeping cold");
      c = EActor->GetEffStatiCLev(TRAP_EVENT,$"creeping cold");
      EActor->SetEffStatiVal(TRAP_EVENT,$"creeping cold",i+1);
      switch(i)
        { /* j == number of dice already inflicted */
          case 0: j = 0; break;
          case 1: j = 1; break;
          case 2: j = 3; break;
          case 3: j = 6; break;
          case 4: j = 10; break;
          case 5: j = 15; break;
          case 6: j = 21; break;
          case 7: j = 28; break;
          case 8: j = 36; break;
          default: j = 45; break;
        }             
      k = min (c - j, i+1);      
      ThrowDmg(EV_DAMAGE,AD_COLD,(k)d8,"a creeping cold spell",EActor,EActor);
      DPrint(e,"You feel deathly cold!",
              "The <EActor> <hText>!",
              EActor->isDead() ? "shivers and dies" : 
                                 "looks pale and shivers");
      if (EActor->isDead()) {
        killer = EActor->GetEffStatiObj(TRAP_EVENT,$"creeping cold");
        if (killer)
          killer->KillXP(EActor);
        return NOTHING;
        }
      else if (k + j >= c) {
        EActor->IPrint("The chilling cold seems to have run its course.");
        EActor->RemoveEffStati($"creeping cold");
        }
      return NOTHING;
      },
    EV_MAGIC_HIT
      "You feel a strange chill set upon you." /
      "The <EVictim> shivers.";
    Desc: "This spell inflicts a total of 1d8 cold damage per caster level
      (no cap) over the course of several turns, increasing by one die
      every turn -- 1d8 in the first turn, then 2d8 in the second, then
      3d8 and so forth until all the dice are spent (or the magic is
      dispelled).";
  }

/* -- PALADIN 2 -- */

Effect "Zeal" : EA_GENERIC
  { SC_ABJ; Base: SP_MEDIUM; Cost: 7; Level: 2; sval: WILL + 10; qval: Q_TAR;
    Purpose: EP_BUFF | EP_FOIL_PURSUIT; Flags: EF_DEFENSIVE;
    On Event EV_MAGIC_HIT {
      /* SS_MISC cause sancutary can't be dispelled. */
      EActor->GainTempStati(TRAP_EVENT, EVictim, e.vDuration, SS_MISC,
        EVICTIM(EV_STRIKE),e.saveDC,$"zeal");
      EActor->GainTempStati(TRAP_EVENT, EVictim, e.vDuration, SS_MISC,
        EV_EFFECT,e.saveDC,$"zeal");
      EActor->GainTempStati(TRAP_EVENT, EVictim, e.vDuration, SS_MISC,
        EV_MAGIC_STRIKE,e.saveDC,$"zeal");
      EActor->GainTempStati(EFF_FLAG1, EVictim, e.vDuration, SS_MISC,
        0, 0, $"zeal");
      return DONE;
      },
    META(EVICTIM(EV_STRIKE)) {
      if (GetHandle(EActor) == EVictim->GetEffStatiObj(EFF_FLAG1,$"Zeal"))
        return NOTHING;
      if (EActor->SavingThrow(WILL,
          EVictim->GetEffStatiVal(TRAP_EVENT,$"zeal"),SA_MAGIC|SA_SPELLS))
        return NOTHING;
      if (e.AType == A_FIRE || e.AType == A_SPEL)
        return ABORT;
      /* Later: Seeing an opportunity, you find yourself... */
      DPrint(e,"You find yourself unable to strike!",
               "The <EActor> hesitates.");
      return DONE;
      },
    META(EV_STRIKE) {
      if (GetHandle(EVictim) == EActor->GetEffStatiObj(EFF_FLAG1,$"Zeal"))
        return NOTHING;
      EActor->RemoveEffStati($"zeal");
      return NOTHING;
      },
    META(EV_MAGIC_STRIKE) {
      if (GetHandle(EVictim) == EActor->GetEffStatiObj(EFF_FLAG1,$"Zeal"))
        return NOTHING;
      if (!e.isTrap)
        if (GetHandle(EActor) != GetHandle(EVictim))
          if (GetHandle(EVictim) != NULL && 
            EVictim->isCreature() && 
            EActor != NULL && 
            EActor->isCreature() && 
            EVictim->isHostileTo(EActor))
          EActor->RemoveEffStati($"zeal");  
      return NOTHING;
      },
    EV_MAGIC_HIT
      "You invoke a holy zeal." /
      "The <EActor> is surrounded by a brilliant golden aura.",
    EV_REMOVED
      "You feel less safe." /
      "The <EActor>'s golden aura fades.",
    EV_ISTARGET {
      if (EVictim->isMType(MA_EVIL))
        return SHOULD_CAST_IT;
      return CANNOT_CAST_IT;
      };
    Desc: "An offensive adaptation of the conventional priestly magic
      <9>sanctuary<1>, the Zeal spell allows a paladin to focus
      exclusively on a single target, who must be evil. If the paladin
      attacks any other target, the effect ceases -- the target is free
      to attack him in turn. However, any other creatures -- including
      allies of the target or his summoned creatures -- must succeed in
      a Will saving throw against this spell's DC in order to attack
      the paladin, just as with <9>sanctuary<1>.\n
      __The traditional origins of this spell harken back to the knightly
      tradition of fair single combat, and thus it finds great favour with
      the paladins who serve Erich.";
    Flags: EF_SHOWNAME, EF_DLONG;
  }


/* -- DOMAIN 2 -- */

0 Effect "Miscast Magic" : EA_INFLICT
  { SC_ENC; Base: SP_EASY; Cost: 4; Level: 2; qval: Q_TAR;
    sval: WILL; Purpose: EP_CURSE (VS_CASTING);
    xval: ADJUST; yval: A_MAG; pval: -8;
    Flags: EF_MENTAL;
    Desc: "Channels chaos to disrupt the formulae of magic, increasing 
      an enemy caster's spell failure chance by 40% if said caster fails
      a Will save."; }


/* ============================================================= 
 *                  Level Three Priest Spells
 * =============================================================
Druid Spell "Snakebite" : EA_INFLICT {
Wizard / Priest / Druid Spell "Mystic Lantern" : EA_CREATION
Priest  Spell "Bestow Curse" : EA_GENERIC
Priest Spell "Cause Blindness" : EA_INFLICT
Priest / Druid Spell "Cure Serious Wounds" : EA_HEALING
Priest / Druid / Potion Spell "Cure Disease" : EA_HEALING
Priest  Spell "Create Food and Water" : EA_CREATION
Priest  Spell "Glyph of Warding" : EA_TERRAFORM
Priest Spell "Holy Summoning III" : EA_SUMMON
Priest Spell "Inflict Serious Wounds" : EA_BLAST
Priest  Spell "Negative Plane Protection" : EA_INFLICT
Priest Spell "Magic Vestment" : EA_INFLICT
Priest / Druid Spell "Prayer" : EA_INFLICT
Priest / Druid / Potion Spell "Remove Curse" : EA_GENERIC
Druid Spell "Ironwood" : EA_GENERIC
Druid Spell "Blight Plants" : EA_BLAST
Druid Spell "Call Lightning" : EA_BLAST
Druid Spell "Dominate Animal" : EA_INFLICT
Druid  Spell "Earthmaw" : EA_BLAST
Druid  Spell "Meld into Stone" : EA_INFLICT
Druid Spell "Waterspout" : EA_BLAST
Druid Spell "Summon Nature's Ally III" : EA_SUMMON
 */

/* -- CLERIC 3 -- */

Wizard / Priest / Sorcerer / Druid Spell "Mystic Lantern" : EA_CREATION
  { SC_EVO|SC_LIGHT; Base: SP_TRIVIAL; Cost: 5; Level: 3; 
    xval: CREA_WIELD; rval: $"mystic lantern;item"; 
    Purpose: EP_PLAYER_ONLY; 
    Desc: "Creates a mote of magical light that functions like a divine
    lantern and provides illumination out to 80 feet (8 squares). The
    light mote travels with you and cannot be dropped or placed in a
    container.";
  }

Item "mystic lantern;item" : T_LIGHT
  { Image: yellow '{'; hp: 10;
    Desc: "This enchanted mote of magical light provides illumination
    out to 80 feet (8' squares)."; 
    Flags: IT_NOGEN;
    Mat: MAT_FORCE; Weight: 0; Lifespan: 9000; 
    Light Range: 8; 
    On Event 
    PRE(EV_DROP) {
      EActor->IPrint("You dispel the mystic lantern.");
      EItem->Remove(true); return DONE;
      },
    PRE(EV_LOSEITEM) { EItem->Remove(true); return DONE; },
    PRE(EV_INSERT) {
      EActor->IPrint("You can't put the mystic lantern into a container.");
      return ABORT;
      };
    }

Priest  Spell "Bestow Curse" : EA_GENERIC
  { SC_ENC; Base: SP_MEDIUM; Cost: 7; Level: 3; qval: Q_TAR; 
    Purpose: EP_CURSE;
    sval: WILL; tval: MA_SAPIENT; Flags: EF_LIM_MTYPE;
    Desc: "Lays a curse on a single sapient enemy that has 
      an equal chance of causing one of his items to become 
      cursed, reducing one of his ability scores by six, or 
      causing him a strange magical affliction.";
    On Event EV_MAGIC_HIT {
      int16 i,j; hObj h;
      if (ETarget == NULL_OBJ || !ETarget->isCreature())
        return ABORT;
      switch(random(8)) {

        case 0: case 1:
        case 2: case 3:
          h = EVictim->FirstInv();
          while(h != NULL_OBJ && h->isCursed()) 
            h = EVictim->NextInv();
          if (h) {
            h->IFlags |= IF_CURSED;
            h->IFlags &= ~IF_BLESSED;
            h->ReApply();
            VPrint(e,"Your <hObj> glows black.", "The <EVictim>'s <hObj> glows black.",h);
            return DONE;
            }
          /* Drop through to nail an attribute. */
        case 4: case 5:
        case 6: case 7:
          i = random(EVictim->isCharacter() ? 7 : 6);
          if (!EVictim->HasStati(ADJUST_LUCK,i)) {
            ETarget->GainPermStati(ADJUST_LUCK,NULL,SS_CURS,i,-6,$"bestow curse");
            EVictim->IPrint("You feel afflicted!");
            }
          else
            EVictim->IPrint("You feel afflicted, but it passes.");
          return DONE;
        /*case 8:
          Later, chance of polymorphitis, teleportitis, disease, hallu, etc. */
        }
    };
  }

Priest / Sorcerer Spell "Cause Blindness" : EA_INFLICT
  { SC_THA; Base: SP_EASY; Cost: 6; Level: 3; qval: Q_TAR;
    xval: BLIND; sval: FORT; Purpose: EP_CURSE; Flags: EF_DLONG;
    Desc: "Blinds the target creature, assuming that they fail a
      Fortitude save."; }

Priest / Sorcerer / Druid Spell "Cure Serious Wounds" : EA_HEALING
  { SC_THE; Base: SP_EASY; Cost: 0; Level: 3; qval: Q_TAR|Q_NEAR;
    xval: HEAL_HP; pval: 3d8 + LEVEL_MAX15; yval: 20; 
    Flags: EF_VARMANA, EF_LOSEMANA; Purpose: EP_FIX_TROUBLE (TROUBLE_INJURY);
    Desc: "Heals you of 3d8 + your level in hit points of damage, to a
      maximum of 3d8+15, with a hit point to mana ratio of 2 per 1. Healing
      spells disrupt unlife, inflicting twice the damage to an undead
      creature they would have healed in a living one.";
    Constants:
      * SERVICE_SPELL_COST 50;
  }

// ww: this used to have a really low success rate ... but when you do need
// this thing, you won't have time to wait around for a second casting! and
// it's not like the potion version is all that rare ...
Priest / Druid / Potion / Scroll Spell "Cure Disease" : EA_HEALING
  { SC_THE; Base: SP_TRIVIAL; Cost: 12; Level: 3; qval: Q_TAR|Q_NEAR;
    xval: HEAL_MALADY; yval: DISEASED; Flags: EF_STAPLE;
    Purpose: EP_FIX_TROUBLE (TROUBLE_DISEASE);
    Desc: "Removes all diseases, natural or magical, from 
      one subject."; 
    Constants:
      * SERVICE_SPELL_COST 250;  
  }

Priest / Scroll Spell "Create Food and Water" : EA_CREATION
  { SC_ARC|SC_WATER; Base: SP_HARD; Cost: 8; Level: 3; 
    Purpose: EP_FIX_TROUBLE (TROUBLE_HUNGER);
    xval: CREA_WIELD; rval: $"food ration"; 
    On Event MSG_CAST
      "A portion of food appears before you." /
      "A portion of food appears before the <EActor>.";
	  Desc: "This spell can be cast in one of two forms, as follows:\n
	    __<9>Create Food:<1> Casting this version of the spell creates a
	    single food ration suitable as a sizable meal for a human-sized
	    creature. The ration is permanent and nonmagical once created.\n
	    __<9>Create Water:<1> This version of the spell calls into 
	    existance a pool of water 30 feet (3 squares) in radius, creating
	    any indentation necessary to hold the water without altering or
	    damaging any of the surronding stonework. Once created, the water
	    is permanent and non-magical.";
	  On Event PRE(EV_EFFECT) {
      char ch;
      ch = EActor->ChoicePrompt("Create food or water?","fw",'f'); 
      if (ch == 'w')
        {
          RedirectEff(e,$"create water",EV_EFFECT);
          return DONE;
        }
      return NOTHING;
      };
    Constants:
      * SERVICE_SPELL_COST 15;	
	}

Druid Spell "Create Water" : EA_TERRAFORM
  { SC_ARC|SC_WATER; Base: SP_MEDIUM; Cost: 5; Level: 3; qval: Q_LOC;
    xval: TERRA_OPEN; rval: $"deep water"; aval: AR_GLOBE;
    lval: 3; cval: BLUE; Purpose: 
      EP_FOIL_PURSUIT | EP_CURSE | AIM_AT_ENEMY;
    
    /* HACKFIX */ Purpose: EP_PLAYER_ONLY;
    
    Flags: EF_PERMANANT;
    Desc: "Creates a pool of deep water 30 feet (3 squares) in
      radius."; 
    On Event MSG_CAST
      "Water rises up from dry earth!"; }

/* Priest Spell "Detect Objects" -- see wspells.irc */

/* Priest Spell "Dispel Magic" -- see wspells.irc */

/* I wanted to make this more distinct from the Bull's
   Strength, etc. spells, so I made it into a kind of
   emergency 'oh god, I'm dying' ass-kicking spell with
   a cost. */
Priest  Spell "Draw upon Holy Might" : EA_INFLICT
  { SC_THA; Base: SP_MEDIUM; Cost: 8; Level: 3;  
    xval: ADJUST_SAC; yval: A_STR; pval: 2d6;
    Desc: "Invoking the name of your diety, you gain tremendous
      prowess -- a 2d6 sacred bonus to Strength, Dexterity and
      Stamina -- at the cost of 3 Fatigue points and 100 XP. The
      effects last for a comparitively short duration."; 
    On Event EV_MAGIC_HIT
      "You draw upon your god's holy might!";
  }
and EA_INFLICT
  { xval: ADJUST_SAC; yval: A_CON; pval: 2d6; }
and EA_INFLICT
  { xval: ADJUST_SAC; yval: A_DEX; pval: 2d6;
    Flags: EF_DEFENSIVE;
    On Event EV_EFFECT {
      if (!EActor->LoseFatigue(3,true))
        return ABORT;
      if (EActor->isCharacter())
        EActor->LoseXP(100);
      return NOTHING;
      };
  }


Priest  Spell "Glyph of Warding" : EA_TERRAFORM
  { SC_ARC; Base: SP_TRIVIAL; Cost 6; Level: 3; qval: Q_LOC;
    xval: TERRA_FLOOR; Purpose: EP_PLAYER_ONLY; 
    rval: $"strange rune"; sval: REF; pval: (LEVEL_SCALED2)d8;
    Desc: "Turns one chosen floor square into a rune that explodes
      for 1d8 damage per two levels (max 5d8) when stepped on.";
    On Event MSG_CAST
      "A strange rune materializes on the ground."; }

Priest Spell "Holy Summoning III" : EA_SUMMON
  { SC_WEA; Base: SP_MEDIUM; Cost: 7; Level: 3; qval: Q_LOC;
    Purpose: EP_SUMMON; rval: $"Holy Summons"; pval: 3; 
    Desc: "Summons an outsider of CR 3 to fight in the 
      caster's name.";  
    ALIENIST_CLAUSE(3) }


/* Priest Spell "Magic Circle vs. Evil" -- see wspells.irc */

#if 0
Priest Spell "Imbue with Spell Ability" : EA_INFLICT
  { SC_THE; IS_A_BUFF(COST_3X); Level: 3; aval: Q_TAR;
    xval: EXTRA_ABILITY; yval: CA_SPELLCASTING; pval: LEVEL_EVERY2;
    Purpose: EP_BUFF;
    On Event EV_ISTARGET {
      if (EVictim->HasAbility(CA_SPELLCASTING))
        return CANNOT_CAST_IT;
      if (!EVictim->isMType(MA_SAPIENT))
        return CANNOT_CAST_IT;
      if (EActor->isMType(MA_GOOD) && EVictim->isMType(MA_EVIL))
        return CANNOT_CAST_IT;
      if (EActor->isMType(MA_EVIL) && EVictim->isMType(MA_GOOD))
        return CANNOT_CAST_IT;
      if (EActor->isMType(MA_LAWFUL) && EVictim->isMType(MA_CHAOTIC))
        return CANNOT_CAST_IT;        
      if (EActor->isMType(MA_CHAOTIC) && EVictim->isMType(MA_LAWFUL))
        return CANNOT_CAST_IT;
      if (!EVictim->isFriendlyTo(EActor))
        return CANNOT_CAST_IT;
      if (EVictim->isPlayer())
        return CANNOT_CAST_IT;
      return SHOULD_CAST_IT;
      },
    POST(EV_MAGIC_HIT) {
      /* Bardic so creature doesn't need a holy symbol! */
      EVictim->GainTempStati(SPELL_ACCESS,NULL,e.vDuration,
        SS_ENCH,SP_BARDIC,e.vDmg,$"priest",e.vCasterLev);
      };
    Desc: "Using this spell, a priest can appoint another intelligent
      creature whose alignment does not conflict with his own (i.e.,
      lawful vs. chaotic, good vs. evil) as his proxy in relation to
      his god, allowing the selected creature a limited ability to
      wield divine magic. The recipient gains divine spellcasting 
      ability with access to the priest spell list at a class level
      equal to half the priest's own, rounding up. The creature gains
      no Hit Dice, Domains, granted powers or any other priest class
      features -- just the ability to cast divine spells. The beneficiary
      does not require a holy symbol to make use of this gift.";
  }
#endif   
        
Priest Spell "Inflict Serious Wounds" : EA_BLAST
  { SC_NEC; Base: SP_TRIVIAL; Cost: 5; Level: 3; aval: AR_TOUCH;
    xval: AD_NECR; pval: 3d8 + LEVEL_MAX15; cval: BROWN;
    Flags: EF_CANCEL, EF_DLONG, EF_NOTBAD; Purpose: EP_ATTACK;
    On Event EV_CAST
      "Your hands glow with a black aura." /
      "The <EActor>'s hands glow with a black aura.",
     EV_MAGIC_HIT
      "Wounds appear on your body!" /
      "Wounds appear on the <EVictim>'s body!";
    Desc: "Inflicts 3d8 + caster level (maximum 3d8+15) points of necromantic
      damage on the next creature you touch.";
  }

/* Priest Spell "Magic Circle vs. Evil" -- see wspells.irc */

Priest  Spell "Spiritual Fortitude" : EA_INFLICT
  { SC_THA; IS_A_BUFF(COST_3); Level: 3; qval: Q_TAR;
    xval: SUSTAIN; yval: A_AID; pval: +2; 
    Purpose: EP_BUFF | EP_COUNTER (VS_NECRO); 
	On Event MSG_STATINAME "SpFort"; }
and EA_INFLICT
  { xval: SAVE_BONUS; yval: SN_DEATH; pval: +4;
    Desc: "Grants a physical resistance to magic that warps or
      withers the body or mind, sustaining all your attributes 
      (by +2) and giving you a +4 bonus on saving throws against 
      death."; }

Priest Spell "Magic Vestment" : EA_GENERIC
  { SC_WEA; IS_A_BUFF(COST_3); Level: 3; qval: Q_INV; 
    Desc: "Casting this spell temporarily enchants a single chosen suit
      of armour with a magical bonus of +1 per three caster
      levels, to a maximum of +5 at 15th. This bonus does 
      not stack with any other magical bonus the armour may have."; 
    hObj it;
    On Event 
      EV_ISTARGET {
        if (ETarget->isType(T_ARMOUR))
          if (ETarget->GetQuantity() == 1)
            return CAN_CAST_IT;
        if (ETarget->isMonster())
          if (ETarget->InSlot(SL_ARMOUR) != NULL_OBJ)
            if (ETarget->InSlot(SL_ARMOUR)->GetPlus() < 
                 max(1,min(5,EActor->CasterLev() / 3)))
              return SHOULD_CAST_IT;
        return CANNOT_CAST_IT; 
        },
      EV_RATETARG {
        if (EItem->isType(T_ARMOUR))
          return NOTHING;
        return ABORT;
        },
      PRE(EV_EFFECT) {
        if (EActor->isMonster())
          SetETarget(e,EActor->InSlot(SL_ARMOUR));
        return NOTHING;
        },
      EV_MAGIC_STRIKE {
        ETarget->GainTempStati(BOOST_PLUS,EActor,e.vDuration,SS_ENCH,1,
          max(1,min(5,e.vCasterLev / 3)), $"magic vestment", e.vCasterLev);
        VPrint(e,"","The <EVictim> gives off a soft silvery glow.");
        return DONE;
        }; 
    Constants:
      * SERVICE_SPELL_COST 100;
  }

Priest / Druid Spell "Prayer" : EA_INFLICT
  { SC_THE; IS_A_BUFF(COST_3); Level: 3; cval: WHITE;
    aval: AR_GLOBE; lval: 6; tval: MA_ALLIES;
    xval: ADJUST_SAC; yval: A_AID; pval: +2;
    Flags: EF_LIM_MTYPE; 
    Desc: "Grants you and all your allies within 60 feet (6 squares)
      a +2 sacred bonus to attack rolls, damage and saving throws.";
    On Event EV_MAGIC_HIT
      "You feel righteous.",
    EV_ELAPSED
      "The righteous feeling fades.";
  }


Priest / Scroll Spell "Remove Curse" : EA_GENERIC
  { SC_ABJ; Base: SP_EASY; Cost: 50; Level: 3; qval: Q_INV | Q_TAR;
    Flags: EF_LOSEMANA, EF_STAPLE, EF_AFFECTS_ITEMS;
    Purpose: EP_PLAYER_ONLY;
    Desc: "Casting this spell lifts a curse from a single chosen
      item or individual. The caster's caster level plus Charisma modifier
      must equal or exceed the curse's level for the spell to succeed.\n
      __Curses include the effects of a cursed item that cannot be removed
      or the effects of spells like <9>bestow curse<1> or <9>mark of justice<1>.
      A -6 luck penalty to an attribute is a <9>bestow curse<1> effect.
      Other attribute damage, poisoning, diseases and experience drain do not count
      as curses -- though some curse effects do reduce attributes.";
    On Event EV_MAGIC_HIT {	
      if (ETarget->isCreature())
        {
          
          if (ETarget->HighSourceCLev(SS_CURS) > (e.vCasterLev + EActor->Mod(A_CHA)))
            {
              ETarget->IPrint("Your body glows with an angry red radiance.");
              return DONE;
            }
          ETarget->RemoveStatiSource(SS_CURS);
          VPrint(e,"Your body glows with a soft blue light.",
                   "The <EVictim>'s body glows with a soft blue light.");
          return DONE;     
        }
      
      ETarget->MakeKnown(KN_CURSE);
      if (!(ETarget->IFlags & IF_CURSED))
        {
          DPrint(e,"Your <ETarget> glows with a soft blue light.",NULL);
          return DONE;
        }
      if (ETarget->ItemLevel() > (e.vCasterLev + EActor->Mod(A_CHA)))
        DPrint(e,"Your <ETarget> glows with an angry red radiance.",NULL);
      else {
        ETarget->IFlags &= ~IF_CURSED;
        DPrint(e,"Your <ETarget> glows with a soft blue light.",NULL);
        }
      },
      EV_RATETARG {
        if (ETarget->isType(T_ITEM))
          if (!(ETarget->isCursed() && ETarget->isKnown(KN_CURSE)))
            return ABORT;
        return NOTHING;
      };
    Constants:
      * SERVICE_SPELL_COST 350;
  }
  
Priest Spell "Ring of Blades" : EA_INFLICT
  {
    SC_ARC; IS_A_BUFF(COST_3X); Level: 3; 
    Desc: "Casting this spell, you conjure a ring of spinning blades
      around your body; these blades move with you, striking any
      creature within 5 feet of you once each turn to inflict [1d6 +
      caster level] points of slashing damage. They take you no time
      to direct or utilize, and you can take actions normally while
      they fly around you, but beware -- they strike allies as readily
      as enemies.\n
      __Huge size and larger creatures cannot make effective use of
      this spell.";
    xval: TRAP_EVENT; yval: EV_TURN;
    On Event META(EV_TURN) {
      int8 dir; hObj hTarg, oVic;
      if (EActor->isDead())
        return NOTHING;
      for (dir=0;dir!=8;dir++)
        if (EMap->InBounds(EActor->x + DirX(dir), EActor->y + DirY(dir)))
          for (hTarg=EMap->FCreatureAt(EActor->x + DirX(dir), EActor->y + DirY(dir));
                hTarg;hTarg=EMap->NCreatureAt(EActor->x + DirX(dir), EActor->y + DirY(dir)))
            if (GetHandle(EActor) != hTarg)
              {
                oVic = GetHandle(EVictim);
                SetEVictim(e,hTarg);
                TPrint(e,"Your blades strike the <EVictim>!",
                        "The ring of flying blades circling the <EActor> "
                        "slashes you!", "The ring of flying blades circling "
                        "the <EActor> slashes the <EVictim>!");
                ThrowDmg(EV_DAMAGE,AD_SLASH,1d6+EActor->CasterLev(),"a ring of flying blades",
                          EActor, EVictim);
                SetEVictim(e,oVic);
              } 
      return NOTHING;
      };
  }

/* -- DRUID 3 -- */

Druid Spell "Blight Plants" : EA_BLAST
  { SC_NEC; Base: SP_EASY; Cost: 5; Level: 3; aval: AR_GLOBE; lval: 6;
    xval: AD_NECR; pval: (LEVEL_2PER1)d8; tval: MA_PLANT;
    Purpose: EP_ATTACK; Flags: EF_LIM_MTYPE;
    Desc: "Withers and destroys plant creatures within 60 feet
      (6 squares) of the caster, inflicting 2d8 points of necromantic
      damage per caster level (no die cap).";
    On Event EV_MAGIC_HIT
      "You feel your life being eaten away!" /
      "The <EVictim> withers!";
  }

/* This will get changed to only work outdoors in storms, as soon as
   there actually *is* a wilderness screen to use it on. For now, its
   such a druidic staple that I figured I'd be nice... */
Druid Spell "Call Lightning" : EA_BLAST
  { SC_EVO; Base: SP_MEDIUM; Cost: 6; Level: 3; qval: Q_TAR;
    xval: AD_ELEC; pval: (LEVEL_1PER1)d5; Purpose: EP_ATTACK;
    Desc: "Calls lightning down to smite a target of your choice for
      1d5 points of damage per caster level.";
    On Event MSG_BLASTNAME "stroke of lightning"; }

Druid Spell "Dominate Animal" : EA_INFLICT
  { SC_ENC; Base: SP_EASY; Cost: 5; Level: 3; sval: WILL;
    Purpose: EP_CURSE (VS_MENTAL); tval: MA_ANIMAL; 
    xval: CHARMED; yval: CH_DOMINATE; qval: Q_TAR;
    Flags: EF_DLONG, EF_MENTAL, EF_LIM_MTYPE; 
    Desc: "Causes a single true animal (not a beast or monster)
      to follow you, fight and even die at your behalf."; }

Druid  Spell "Earthmaw" : EA_BLAST
  { SC_ARC|SC_EARTH; Base: SP_EASY; Cost: 6; Level: 3; qval: Q_TAR;
    xval: AD_BLUNT; pval:(LEVEL_SCALED)d4;
    Flags: EF_ATTACK; Purpose: EP_ATTACK;
    Desc: "Causes the earth or stone floor beneath a victim's
      feet to animate, biting them for 1d4 points of damage per
      caster level, if the druid succeeds in a ranged attack
      roll against them. If the attack roll scores an unmodified
      19 or 20, the victim will also become stuck, partly buried
      beneath the ground.";
    On Event
      PRE(EV_STRIKE) {
        e.vThreat = 19;
        },
      EV_MAGIC_HIT {
        if (e.isCrit) {
          VPrint(e, "The ground splits open and devours you!",
                    "The ground splits open and devours; the <EVictim>!");
          ThrowDmg(EV_DAMAGE,AD_STUK,-1,"Earthmaw",EActor,EVictim);
          }
        else
          VPrint(e, "The ground splits open and bites you!",
                    "The ground splits open and bites the <EVictim>!");
        return NOMSG;
        },                  
      EV_MISS
        "The ground splits open, but misses the <EVictim>." /
        "The ground splits open, but misses you." /
        "The ground splits open, but misses the <EVictim>.";
  }
  
// I know that Ironwood is normally a sixth level spell that turns wood
// into iron ... but for the purposes of Incursion (where no wood armour
// occurs ...) we'll make it a 2nd level spell that turns iron into wood. 
// Thus the wandering druid can find a suit of +3 chainmail and fashion it
// into ironwood, or make her scimitar resistant to Chill Metal. 
Druid Spell "Ironwood;spell" : EA_GENERIC 
  {
    IS_A_BUFF(COST_3X); SC_ARC; Level: 3; Flags: EF_PERMANANT;
    Desc: "This magical spell transmutes an item made from iron into
    ironwood.  Ironwood is a magical substance created by druids
    from iron. While becoming natural wood in almost every way,
    ironwood is as strong, heavy, and resistant to fire as steel. Spells or
    abilities that affect metal or iron (such as rusting or the Heat Metal
    spell) do not function on ironwood. Spells that affect wood do affect
    ironwood, although ironwood does not burn. Ironwood items are freely
    usable by druids because ironwood armour does not interfere with their
    primal spellcasting."; 
    hObj it; qval: Q_INV;
    On Event EV_ISTARGET {
      for(it=EActor->FirstInv();it;it=EActor->NextInv()) {
        if (it->QualityOK(IQ_IRONWOOD))
          return SHOULD_CAST_IT; 
      }
      return CANNOT_CAST_IT; 
      },
    EV_RATETARG {
      if (ETarget->isMetallic() && ETarget->QualityOK(IQ_IRONWOOD))
        return NOTHING;
      return ABORT;
      },  
    EV_MAGIC_STRIKE {
      if (ETarget->isMetallic() && ETarget->QualityOK(IQ_IRONWOOD))
        ETarget->GainTempStati(EXTRA_QUALITY,EActor,e.vDuration,SS_ENCH,
            IQ_IRONWOOD,IQ_IRONWOOD,$"ironwood;spell", e.vCasterLev);
      return DONE;
    }; 
  }


Druid  Spell "Meld into Stone" : EA_INFLICT
  { SC_ARC|SC_EARTH; IS_A_BUFF(COST_3X); Level: 3; 
    Purpose: EP_BUFF | EP_PASSAGE; 
    xval: EXTRA_ABILITY; yval: CA_EARTHMELD; pval: 1;
    Desc: "Allows you to meld into and travel through solid
      stone in the same manner that a xorn or xaren does."; 
    On Event EV_REMOVED {
      EActor->PlaceNear(EActor->x,EActor->y);
      return NOTHING;
      };
  }

Druid Spell "Waterspout" : EA_BLAST
  { SC_ARC|SC_WATER; Base: SP_MEDIUM; Cost: 4; Level: 3; qval: Q_LOC;
    aval: AR_GLOBE; lval: 3; cval: SKYBLUE;
    xval: AD_BLUNT; pval: (LEVEL_SCALED)d6; 
    sval: REF partial; Purpose: EP_ATTACK;
    Flags: EF_CASTER_IMMUNE;
    Desc: "You create an upward blast of water from a lake or river,
      striking nearby creatures with terrible force. Creatures in the
      area suffer 1d6 points of blunt damage per caster level (Reflex
      halves; scaled after 10th), are automatically knocked prone if
      they are size Large or smaller, and are also stunned for 1d4+1
      rounds if they fail the saving throw.";
    On Event POST(EV_MAGIC_HIT) {
      if (EVictim->isDead())
        return NOTHING;
      if (EVictim->GetAttr(A_SIZ) <= SZ_LARGE && !e.isEvaded)
        ThrowDmg(EV_DAMAGE,AD_TRIP,-1,"waterspout",EActor,EVictim); 
      if (!e.Resist)
        EVictim->GainTempStati(STUNNED,NULL,1d4+1,SS_MISC);
      ThrowDmg(EV_DAMAGE,AD_SOAK,e.vDmg,"a waterspout",EActor,EVictim);
      return NOTHING;
      },
    EV_ISTARGET {
      /* Incorporeal creatures are not affected */
      if (EVictim->onPlane() != EActor->onPlane())
        return CANNOT_CAST_IT;
      /* Amorphious creatures are also immune */
      if (EVictim->HasMFlag(M_AMORPH))
        return CANNOT_CAST_IT;
      /* Need to be in or over the water */
      if (!EMap->TerrainAt(EVictim->x,EVictim->y)->TerrainHasFlag(TF_WATER))
        return CANNOT_CAST_IT;
      return SHOULD_CAST_IT;
      },
    EV_EFFECT {
      if (e.isLoc) /* Paranoia */
        if (!EMap->TerrainAt(e.EXVal,e.EYVal)->TerrainHasFlag(TF_WATER))
          {
            EActor->IPrint("The <9>waterspout<7> spell can only be 
              centered on a large, pre-existing body of water.");
            return ABORT;
          }
      APrint(e,"The water jets outward with terrible force!");

      return NOTHING;
      },
    MSG_BLASTNAME "waterspout";
  }

Druid Spell "Summon Nature's Ally III" : EA_SUMMON
  { SC_WEA; Base: SP_MEDIUM; Cost: 6; Level: 3; qval: Q_LOC;
    Purpose: EP_SUMMON; rval: $"Nature's Ally"; pval: 3; 
    Desc: "Summons a natural creature of CR 3 to fight in the 
      caster's name.";  
    ALIENIST_CLAUSE(3) }

/* Copied directly from Phantom Steed, with changes to the
   description and a poison-bite attack. */

0 Effect "Spectral Spider" : EA_GENERIC
  { SC_WEA; IS_A_BUFF(COST_3); Level: 3; 
      Desc: "Summons a quasi-real spider-like creature that the caster begins
    to ride. The spider can be ridden by you quite rapidly (half again as
    fast as a warhorse or warpony). It can also magically traverse
    dangerous terrain (e.g., icy floors, brimstone). It also has a bite
    attack, injecting giant spider venom."; 
    On Event EV_ISTARGET {
      if (EActor->HasStati(MOUNTED) ||
          EActor->SkillLevel(SK_RIDE) <= 0 ||
          !EActor->HasMFlag(M_HUMANOID) ||
          EActor->HasMFlag(M_NOLIMBS) ||
          EActor->GetAttr(A_SIZ) < SZ_SMALL ||
          EActor->GetAttr(A_SIZ) > SZ_MEDIUM)
        return CANNOT_CAST_IT; 
      return SHOULD_CAST_IT; 
    }, EV_MAGIC_HIT {
      hObj hMount;
      rID rval;

        if (EActor->GetAttr(A_SIZ) <= SZ_SMALL)
          rval = $"spectral spider;mon"; 
        else
          rval = $"small spectral spider;mon"; 

      hMount = CreateMonster(rval); 

      hMount = CreateMonster(rval); 
      if (EActor->onPlane() != PHASE_MATERIAL) {
        hMount->GainPermStati(PHASED,hMount,SS_MISC,EActor->onPlane(),0,
            $"mount");
      } 

      SetSilence();
      hMount->PartyID = EActor->PartyID;
      Throw(EV_MOUNT,EActor,hMount);
      hMount->CalcValues();
      UnsetSilence();
      hMount->Initialize();
      hMount->Reveal(true);

      DPrint(e,"A phantom mount appears under you!", "A phantom mount appears under the <EActor>!");
      return NOTHING;
    } ;
  }

Monster "spectral spider;mon" : MA_SPIDER, MA_OUTSIDER, MA_CONSTRUCT
  {
    Image: grey 's'; Size: SZ_LARGE; 
    CR: OPT_CR(2,1); HD: 3; Hit: 0; Def: 14; Mov: 250%; Spd: 100%;
    Str 15, Dex 20, Con 15, Int 2, Wis 12, Cha 6; Arm: 10; 
    Attk: A_BITE for 1d6 AD_PIERCE
                 and AD_POIS (DC 16);
    Poison: $"giant spider venom";
    ABILITY(CA_WOODLAND_STRIDE,6);
    Feats: SK_LISTEN, SK_SPOT, SK_JUMP;
    Flags: M_NEUTER, M_NATURAL, M_HERBI, M_NOHANDS, M_MOUNTABLE, M_NOGEN;
    Immune: DF_MIND, DF_POIS, DF_SLEE, DF_PLYS, DF_STUK, DF_STUN,
            DF_DISE, DF_NECR, DF_CRIT, DF_SUBD;
  }

Monster "small spectral spider;mon" : MA_QUADRUPED, MA_OUTSIDER, MA_CONSTRUCT
  {
    Image: grey 's'; Size: SZ_MEDIUM; 
    CR: OPT_CR(2,1); HD: 3; Hit: 0; Def: 14; Mov: 250%; Spd: 100%;
    Str 15, Dex 20, Con 15, Int 2, Wis 12, Cha 6; Arm: 10; 
    Attk: A_BITE for 1d6 AD_PIERCE
                 and AD_POIS (DC 16);
    Poison: $"giant spider venom";
    ABILITY(CA_WOODLAND_STRIDE,6);
    Feats: SK_LISTEN, SK_SPOT, SK_JUMP;
    Flags: M_NEUTER, M_NATURAL, M_HERBI, M_NOHANDS, M_MOUNTABLE, M_NOGEN;
    Immune: DF_MIND, DF_POIS, DF_SLEE, DF_PLYS, DF_STUK, DF_STUN,
            DF_DISE, DF_NECR, DF_CRIT, DF_SUBD;
  }

/* We don't use IS_A_BUFF here because we don't want
   EV_SHOWNAME. */
Effect "Armour of Darkness" : EA_GRANT
  {
    SC_THE; Cost: 30; Base: SP_BUFF; Level: 3; sval: FORT+10;
    xval: TRAP_EVENT; yval: POST(EVICTIM(EV_HIT)); 
    Flags: EF_EVIL, EF_LOSEMANA, EF_NOTBAD, EF_PERSISTANT, EF_CANCEL;
    Desc: "Casting this spell congeals the pure spiritual
      matter of evil around your body into a suit of black
      chainmail as smooth as silk. This armour gives you a
      slashing rating of 7, piercing of 5 and blunt of 3,
      and is considered to have a +4 magical enchantment.
      Additionally, whenever anyone strikes you, they are
      drained of life energy just as if striking a wraith,
      losing 2d10x50 XP. A Fortitude saving throw negates
      the drain.";
    On Event PRE(EV_MAGIC_HIT) {
      hObj it; int16 t;
      if (EActor->InSlot(SL_ARMOUR))
        {
          EActor->IPrint("You are already wearing armour. You must
            take it off to cast this spell.");
          return ABORT;
        }
      it = CreateItem($"armour of darkness;item");
      it->SetInherentPlus(4);
      it->GainTempStati(SUMMONED,EActor,-2,SS_ENCH,0,0,
         $"Armour of Darkness", e.vCasterLev);
      it->AddQuality(IQ_FEATHERLIGHT);
      t = EActor->Timeout;
      if (ThrowVal(EV_WIELD,SL_ARMOUR,EActor,NULL,it) != DONE)
        {
          it->Remove(true);
          return ABORT;
        }
      EActor->Timeout = t;
      e.vDmg = e.saveDC;
      return NOTHING;
      },
    META(EVICTIM(POST(EV_HIT))) {
      if (e.AType == A_FIRE ||
          e.AType == A_HURL ||
          e.AType == A_SPEL)
        return NOTHING;
      if (EActor->SavingThrow(FORT,EVictim->GetEffStatiVal(TRAP_EVENT,
           $"Armour of Darkness"), SA_MAGIC|SA_SPELLS|SA_EVIL|SA_NECRO))
        {
          TPrint(e,"You resist the effects of the <EVictim>'s armour.", 
                   "The <EActor> resists the effects of your armour.",
                   "");
          return NOTHING;
        }
      TPrint(e,"The <EVictim>'s black armour saps your life!",
               "Your black armour saps the <EActor>'s life!",
               "The <EActor> looks deathly pale.");
      ThrowDmg(EV_DAMAGE,AD_DREX,2d10, XPrint(
        "touching an <hObj>'s Armour of Darkness", EVictim), EVictim,EActor);
      return NOTHING;
      },
    EV_REMOVED {
      if (EActor->isCreature())
        if (EActor->InSlot(SL_ARMOUR) != NULL_OBJ)
          if (EActor->InSlot(SL_ARMOUR)->iID == $"Armour of Darkness;item")
            EActor->InSlot(SL_ARMOUR)->Remove(true);
      return NOTHING;
      },
    MSG_CAST 
      "Glistening black chainmail forms over your body!" /
      "Glistening black chainmail forms over the <EActor>'s body!";
  }

Item "Armour of Darkness;item" : T_ARMOUR
  {
    Image: cyan GLYPH_MARMOUR; Cost: 150;
    Mat: MAT_IRON; Weight: 400;
    Arm: Slash 7, Pierce 5, Blunt 3;
    Coverage: 10; Penalty: -7;
    Group: WG_MARMOUR; Flags: IT_NOGEN;
    Desc: "While this armour appears to be glistening black chainmail
      made with incredibly fine links at first glance, it is in fact
      a magical conjuration formed from the pure spiritual matter of
      evil. Armour of Darkness is created by priests that have access
      to the Evil domain.";
    On Event PRE(EV_DROP), PRE(EV_REMOVE) {
      EActor->IPrint("You dispel the conjured armour.");
      EItem->GetStatiObj(SUMMONED)->RemoveEffStati($"Armour of Darkness");
      EItem->Remove(true);
      return DONE;
      },
    PRE(EV_PLACE) {
      APrint(e,"The glistening black chainmail dissolves into nothing.");
      EActor->GetStatiObj(SUMMONED)->RemoveEffStati($"Armour of Darkness");
      EActor->Remove(true);
      return ABORT;
      },
    PRE(EV_LOSEITEM) {
      APrint(e,"The glistening black chainmail dissolves into nothing.");
      EItem->GetStatiObj(SUMMONED)->RemoveEffStati($"Armour of Darkness");
      EItem->Remove(true);
      return DONE;
      },
    EV_GETNAME {
      if (EActor->Owner() != NULL_OBJ)
        {
          e.nCursed = "";
          e.nAppend += XPrint(" (DC <Num>)",
             EActor->Owner()->GetEffStatiVal(TRAP_EVENT,$"Armour of Darkness"));
        }
      return NOTHING;
      };

  }

Effect "Bolts of Glory" : EA_GENERIC
  { SC_THE; Cost: 15; Base: SP_EASY; Level: 3; sval: WILL+10;
    Desc: "Casting this spell allows the priest to produce
      bolts of pure spiritual goodness, hurling them at
      foes like missiles. The caster gains one such bolt
      immediately when the spell is cast, as well as
      another bolt every turn until she has thrown a
      number equal to her caster level or cancelled the
      spell. The bolts inflict 1d8 points of holy damage
      (which only affects evil creatures) per odd caster level,
      and cause fear in inherently evil creatures if a Will 
      saving throw is failed. Hitting a target with a bolt of 
      glory requires a ranged attack roll.";
    On Event META(EV_TURN) {
      e.eID = $"Bolt of Glory";
      if (!ETerm->EffectPrompt(e,Q_TAR,false,"Target Bolt of Glory:"))
        {
          e.eID = (rID) 0;
          return NOTHING;
        }
      e.eID = (rID) 0;
      if (!GetHandle(EVictim))
        return NOTHING;
      e.vCasterLev = EActor->CasterLev();
      e.MM = EActor->GetEffStatiMag(EFF_FLAG1,$"Bolts of Glory") +
             EActor->GetEffStatiMag(EFF_FLAG2,$"Bolts of Glory") * 0xFFFF;
      RedirectEff(e,$"Bolt of Glory",EV_EFFECT);
      return NOTHING;
      },
    EV_MAGIC_HIT {
      EActor->GainTempStati(EFF_FLAG1,NULL,e.vDuration,SS_ENCH,
        e.MM & 0xFFFF,0,$"Bolts of Glory",e.vCasterLev);
      EActor->GainTempStati(EFF_FLAG2,NULL,e.vDuration,SS_ENCH,
        (e.MM & 0xFFFF0000) << 16,0,$"Bolts of Glory",e.vCasterLev);
      EActor->GainTempStati(TRAP_EVENT,NULL,e.vDuration,SS_ENCH,
        EV_TURN,0,$"Bolts of Glory",e.vCasterLev);
      return NOTHING;
      },
    POST(EV_MAGIC_HIT) {
      RedirectEff(e,$"Bolts of Glory",META(EV_TURN));
      return NOTHING;
      };
    Flags: EF_CANCEL, EF_LOSEMANA;
  }

Effect "Bolt of Glory" : EA_BLAST
  { xval: AD_HOLY; pval: (LEVEL_EVERY2)d8;
    aval: AR_BOLT; cval: WHITE; Flags: EF_GOOD, EF_ATTACK;
    On Event POST(EV_MAGIC_HIT) {
      if (!e.Resist && EVictim->isMType(MA_EVIL) && 
             EVictim->HasMFlag(M_IALIGN))
        {
          EVictim->GainTempStati(AFRAID,NULL,3d6,SS_ATTK,FEAR_PANIC);
          EVictim->StatiMessage(AFRAID,FEAR_PANIC);
        }
      return NOTHING;
      };
  }
  
/* The cold iron bit is hard-coded -- unfortunately, we can't do
   in in script yet, but after the revision... */
Effect "Iron Sword" : EA_INFLICT
  {
    SC_THE; IS_A_BUFF(COST_3); Level: 3;
    Desc: "It is a result of ancient covenants between the ur-gods
      of light and darkness that certain substances and symbols
      are anathema to some creatures. It is fitting, then, that
      clerics of Law can call upon these things and strengthen
      that ancient contract.\n
      __When a priest casts this spell, she gains several related
      benefits. When she wields a silver weapon, the material
      bonus against lycanthropes and devils increases from +2/+2 to
      +5/+5; she gains a similar benefit from using wrought iron
      against elves and demons, raising the bonus damage from +2d6
      to +5d6. A thrown flask of holy water does
      7d6 points of damage rather than 3d6. If she makes the
      Knowledge (Theology) check to incorporate opposing elements
      into a Banishment spell, the save DC increases by +5 instead
      of +2.";
    xval: TRAP_EVENT; yval: EV_STRIKE;
    On Event META(EV_STRIKE) {
      hObj it;
      if (e.AType == A_FIRE || e.AType == A_HURL)
        it = GetHandle(EItem2);
      else
        it = GetHandle(EItem);
      if (it == NULL_OBJ)
        return NOTHING;
      if (it->Material() == MAT_SILVER && (EVictim->isMType(MA_DEVIL)
           || EVictim->isMType(MA_LYCANTHROPE)))
        {
          e.vHit += 3; e.bDmg += 3;
          e.strHit = Replace(e.strHit, "+2 silver", "+5 silver");
          e.strDmg = Replace(e.strDmg, "+2 silver", "+5 silver");
        }
      /*else if (it->Material() == MAT_WROUGHT && (EVictim->isMType(MA_ELF)
           || EVictim->isMType(MA_DEMON)))
        {
          e.xDmg += 3d6;
          e.strXDmg = Replace(e.strXDmg, "+2d6 iron", "+5d6 iron");
        }*/
      return NOTHING;
      };
  }

/* Add cases for holy water and banishment in-code. */

/* ============================================================= 
 *                  Level Four Priest Spells
 * =============================================================
Priest / Druid Spell "Cure Critical Wounds" : EA_HEALING
Priest Spell "Holy Sword" : EA_GENERIC
Priest / Druid Spell "Death Ward" : EA_INFLICT
Priest Spell "Dispel Fatigue" : EA_GENERIC
Priest Spell "Divine Power" : EA_INFLICT
Priest / Druid Spell "Free Action;spell" : EA_INFLICT
Priest Spell "Holy Summoning IV" : EA_SUMMON
Priest Spell "Inflict Critical Wounds" : EA_BLAST
Priest / Druid Spell "Invocation" : EA_INFLICT
Priest / Druid Spell "Neutralize Poison" : EA_INFLICT
Priest / Druid / Potion Spell "Restoration" : EA_HEALING
Priest  Spell "Searing Light" : EA_BLAST
Priest Spell "Spell Defense" : EA_INFLICT
Druid Spell "Whirlpool" : EA_TERRAFORM
Druid Spell "Air Walk" : EA_INFLICT
Druid Spell "Antiplant Shell" : EA_GENERIC
Druid Spell "Repel Vermin" : EA_GENERIC
Druid Spell "Summon Nature's Ally IV" : EA_SUMMON
Druid Spell "Natural Erosion" : EA_BLAST
Druid  Spell "Dire Regression" : EA_GENERIC
Druid  Spell "Giant Vermin" : EA_SUMMON
Druid  Spell "Thornwrack" : EA_INFLICT
Druid Spell "Spike Growth" : EA_TERRAFORM
Priest Spell "Lesser Aspect of Divinity" : EA_INFLICT
Priest Spell "Holy Smite" : EA_BLAST
Priest Spell "Unholy Blight" : EA_BLAST
Priest Spell "Order's Wrath" : EA_BLAST
Priest Spell "Chaos Hammer" : EA_BLAST
 */

Priest / Wizard Spell "Abjure" : EA_GENERIC
  { SC_ABJ; Cost: 12; Level: 4; qval: Q_LOC|Q_TAR;
    cval: SKYBLUE; aval: AR_GLOBE; lval: 6; sval: WILL;
    Desc: "Casting this spell forces summoned creatures to return to
      their own plane of existance. It affects all creatures within
      a 60-foot radius burst centered on a point of the caster's choice.
      Summoned creatures are entitled to a Will saving throw to avoid
      the spell's effects, but the save DC has a +8 bonus for a given
      creature if that creature was summoned by the caster herself.
      Note that the spell is not discretionary and will send friendly
      summons home as easily as enemy ones.";
    Flags: EF_CASTER_IMMUNE; Purpose: EP_ATTACK;
    On Event EV_ISTARGET {
      if (EVictim->HasStati(SUMMONED))
        return SHOULD_CAST_IT;
      return CANNOT_CAST_IT;
      },
    EV_CALC_EFFECT {
      if (GetHandle(EVictim) != NULL_OBJ)
        if (EVictim->GetStatiObj(SUMMONED) == GetHandle(EActor))
          e.saveDC += 8;
      return NOTHING;
      },
    EV_MAGIC_HIT {
      APrint(e,"The <EVictim> vanishes.");
      ThrowDmg(EV_DEATH,AD_NORM,0,"abjuration",EActor,EVictim);
      };
  }

Effect "Holy Sword" : EA_GENERIC
  { SC_THE; IS_A_BUFF(COST_4); Level: 4; qval: Q_INV;
    Desc: "This spell allows you to channel holy power into a non-cursed 
      melee weapon in the long blades or short blades weapon groups. One 
      such weapon acts as a +5 holy smiting weapon (+5 enhancement bonus on 
      attack and damage rolls, extra 2d6 damage against evil opponents, 
      special bonuses when smiting).";
    On Event EV_ISTARGET {
      hObj it;
      for(it=EActor->FirstInv();it;it=EActor->NextInv()) 
        if (it->isType(T_WEAPON) && it->isGroup(WG_LBLADES|WG_SBLADES))
          if (!(it->IFlags & IF_CURSED) && 
              (it->GetPlus() < 5 || it->QualityOK(WQ_HOLY) ||
               it->QualityOK(WQ_SMITING)))
            return SHOULD_CAST_IT; 
      }, 
    EV_RATETARG {
      if (EItem->isType(T_WEAPON) && EItem->isGroup(WG_LBLADES|WG_SBLADES))
        if (!(EItem->IFlags & IF_CURSED) && 
             (EItem->GetPlus() < 5 || EItem->QualityOK(WQ_HOLY) ||
             EItem->QualityOK(WQ_SMITING)))
          return NOTHING;
      return ABORT;
      },
    EV_MAGIC_HIT {
      if (ETarget->isType(T_WEAPON) && ETarget->isGroup(WG_LBLADES|WG_SBLADES))
        if (!(ETarget->IFlags & IF_CURSED) &&
            (ETarget->GetPlus() < 5 || ETarget->QualityOK(WQ_HOLY) ||
             ETarget->QualityOK(WQ_SMITING))) {
          ETarget->GainTempStati(BOOST_PLUS,EActor,e.vDuration,SS_ENCH,5,5,$"holy sword");
          ETarget->GainTempStati(EXTRA_QUALITY,EActor,e.vDuration,SS_ENCH,WQ_HOLY,WQ_HOLY,$"holy sword");
          ETarget->GainTempStati(EXTRA_QUALITY,EActor,e.vDuration,SS_ENCH,WQ_SMITING,WQ_SMITING,$"holy sword");
          }
      return DONE; 
      }; 
  } 

/* -- CLERIC 4 -- */

Priest / Sorcerer / Druid Spell "Cure Critical Wounds" : EA_HEALING
  { SC_THE; Base: SP_EASY; Cost: 0; Level: 4; qval: Q_TAR|Q_NEAR;
    xval: HEAL_HP; pval: 3d8 + LEVEL_MAX20; yval: 30; 
    Flags: EF_VARMANA, EF_LOSEMANA; Purpose: EP_FIX_TROUBLE (TROUBLE_INJURY);
    Desc: "Heals you of 4d8 + your level in hit points of damage, to a
      maximum of 4d8+20, with a hit point to mana ratio of 3 per 1. Healing
      spells disrupt unlife, inflicting twice the damage to an undead
      creature they would have healed in a living one.";
    Constants:
      * SERVICE_SPELL_COST 75;
  } 

Priest / Druid Spell "Death Ward" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(COST_4); Level: 4; qval: Q_TAR;
    xval: IMMUNITY; yval: AD_NECR; Purpose: EP_BUFF | EP_COUNTER (VS_NECRO);
    Desc: "Renders a target of your choice immune to death effects
      and necromantic (but not poison) damage. Death effects include
      <9>finger of death<1>, <9>power word: kill<1>, <9>wail of the
      banshee<1>, <9>phantasmal killer<1>, <9>slay living<1>,
      <9>destruction<1>, <9>implosion<1>, <9>death knell<1> and the 
      killing component of <9>holy word<7>, <9>blasphemy<7>, 
      <9>dictum<7> and <9>word of chaos<7>. Certain special attacks 
      are also death effects, such as the unearthly beauty of a nymph 
      or the death touch of a priest with the Death domain."; 
    Constants:
      * SERVICE_SPELL_COST 250;

  }

/* Priest Spell "Dimensional Anchor" -- see wspells.irc */

/* Priest Spell "Dismissal" -- see wspells.irc */

Priest / Sorcerer Spell "Dispel Fatigue" : EA_GENERIC
  { SC_THE; Base: SP_TRIVIAL; Cost: 12; Level: 4; 
    pval: 1d4+(LEVEL_1PER2); Flags: EF_LOSEMANA;
    Purpose: EP_FIX_TROUBLE (TROUBLE_FATIGUE);
    On Event EV_MAGIC_HIT {
      int16 oFP; oFP = EVictim->cFP;
      EVictim->cFP = min(oFP+e.vDmg,EVictim->GetAttr(A_FAT));
      if (oFP != EVictim->cFP) {
        e.isSomething = true;
        if (EVictim->cFP == EVictim->GetAttr(A_FAT))
          EVictim->IPrint("You feel fully revitalized!");
        else
          EVictim->IPrint("You feel revitalized!");
        }
      return DONE;
      };
    Desc: "Casting this spell revitalizes the caster, granting them
      1d4 fatigue points, plus one per two levels, up to a maximum
      of their normal maximum fatigue points.";
  }

Priest Spell "Divine Power" : EA_INFLICT
  { SC_THA; Cost: 17; Level: 4; 
    Flags: EF_LOSEMANA, EF_SHOWNAME, EF_NOTBAD;
    Desc: "Casting this spell imbues you with great combat prowess
      for a brief period of time, giving you a sacred bonus to 
      hit sufficient to raise you Base Attack Bonus to that of a 
      warrior of similar character level, a sacred bonus to 
      Strength sufficient to give you a Strength score of 18 (not 
      counting any bonuses other than inherent ones) and 2 temporary
      hit points per caster level. If your Strength is already 18,
      you gain the benefit of the Power Attack feat as well; if you
      already have this feat and 18+ Strength, you gain Knock Prone 
      instead."; 
	On Event MSG_STATINAME "DivPow";
  xval: ADJUST_SAC; yval: A_HIT_ARCHERY; }
and EA_INFLICT
  { xval: ADJUST_SAC; yval: A_HIT_BRAWL; }
and EA_INFLICT
  { xval: ADJUST_SAC; yval: A_HIT_MELEE; }
and EA_INFLICT
  { xval: ADJUST_SAC; yval: A_HIT_THROWN; }
and EA_INFLICT
  { xval: ADJUST_SAC; yval: A_HIT_OFFHAND; 
    On Event EV_CALC_EFFECT {
      switch (e.efNum) {
        case 0: SetPVal(e,EActor->TotalLevel() - EActor->GetBAB(S_ARCHERY)); break;
        case 1: SetPVal(e,EActor->TotalLevel() - EActor->GetBAB(S_BRAWL)); break;
        case 2: SetPVal(e,EActor->TotalLevel() - EActor->GetBAB(S_MELEE)); break;
        case 3: SetPVal(e,EActor->TotalLevel() - EActor->GetBAB(S_THROWN)); break;
        case 4: SetPVal(e,EActor->TotalLevel() - EActor->GetBAB(S_MELEE)); break;
        }
      return NOTHING;
      },
    POST(EV_MAGIC_HIT) {
      if (EActor->IAttr(A_STR) >= 18 && EActor->HasFeat(FT_POWER_ATTACK))
        EActor->GainTempStati(EXTRA_FEAT,EActor,e.vDuration,SS_ENCH,
                              FT_KNOCK_PRONE,0,$"Divine Power", e.vCasterLev);
      else if (EActor->IAttr(A_STR) >= 18)
        EActor->GainTempStati(EXTRA_FEAT,EActor,e.vDuration,SS_ENCH,
                              FT_KNOCK_PRONE,0,$"Divine Power", e.vCasterLev);
      else
        EActor->GainTempStati(ADJUST_SAC,EActor,e.vDuration,SS_ENCH,
                              A_STR,18 - EActor->IAttr(A_STR),$"Divine Power", e.vCasterLev);
      return DONE;
      };
  }
and EA_INFLICT
  { xval: ADJUST_SAC; yval: A_THP; pval: LEVEL_2PER1; 
    On Event POST(EV_EFFECT)
      "You feel mighty!" / "";
  }

Priest Spell "Ethereal Jaunt" : EA_INFLICT
  {
    SC_WEA; Level: 4; Cost: 50; Base: SP_HARD;
    Desc: "Casting this spell shifts the caster (and all of her
      equipment) into the ethereal plane for a very brief period
      of time. While ethereal, the caster is incorporeal and
      invisible with regard to creatures on the material plane, 
      but can interact physically with other ethereal creatures.";
    xval: PHASED; yval: PHASE_ETHERIAL; 
    Flags: EF_CANCEL, EF_SHOWNAME; 
    On Event EV_MAGIC_HIT
      "You cross into the ethereal plane.",
    EV_REMOVED
      "You return to the material plane.";
  }


Priest / Druid / Sorcerer Spell "Free Action;spell" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(COST_4); Level: 4; qval: Q_TAR;
    Desc: "Renders the target creature immune to paralysis, petrification,
      slowing, entangling, and to any effects which limit of constrain his 
      movement, such as webs.";
    xval: IMMUNITY; yval: AD_PLYS; 
  } and EA_INFLICT { xval: IMMUNITY; yval: AD_STUK; } 
    and EA_INFLICT { xval: IMMUNITY; yval: AD_SLOW; } 
    and EA_INFLICT { xval: IMMUNITY; yval: AD_STON; 
    Constants:
      * SERVICE_SPELL_COST 450;    
    } 

Priest Spell "Holy Summoning IV" : EA_SUMMON
  { SC_WEA; Base: SP_MEDIUM; Cost: 9; Level: 4; qval: Q_LOC;
    Purpose: EP_SUMMON; rval: $"Holy Summons"; pval: 4; 
    Desc: "Summons an outsider of CR 4 to fight in the 
      caster's name.";  
    ALIENIST_CLAUSE(4) }


Priest Spell "Inflict Critical Wounds" : EA_BLAST
  { SC_NEC; Base: SP_TRIVIAL; Cost: 7; Level: 4; aval: AR_TOUCH;
    xval: AD_NECR; pval: 4d8 + LEVEL_MAX20; cval: BROWN;
    Flags: EF_CANCEL; Purpose: EP_ATTACK;
    On Event EV_CAST
      "Your hands glow with a black aura." /
      "The <EActor>'s hands glow with a black aura.",
     EV_MAGIC_HIT
      "Wounds appear on your body!" /
      "Wounds appear on the <EVictim>'s body!";
    Desc: "Inflicts 4d8 + caster level (maximum 4d8+20) points of necromantic
      damage on the next creature you touch.";
  }

Priest / Druid Spell "Invocation" : EA_INFLICT
  { SC_THE; IS_A_BUFF(COST_4); Level: 4; 
    aval: AR_GLOBE; lval: 6; tval: MA_ALLIES;
    xval: ADJUST_SAC; yval: A_AID; pval: +3;
    Flags: EF_LIM_MTYPE; 
    Desc: "Grants you and all your allies within 60 feet (6 squares)
      a +3 sacred bonus to attack rolls, damage and saving throws.";
  }

// ww: antitoxins cover this potion effect
Priest / Druid / Scroll Spell "Neutralize Poison" : EA_INFLICT
  { SC_THE; Base: SP_TRIVIAL; Cost: 7; Level: 4; qval: Q_TAR;
    Desc: "Purges all toxins from the subject's body, preventing
      any further damage, and additionally giving the subject a
      +5 bonus to save versus poisons for a number of rounds
      following the casting equal to the caster level.";
    xval: SAVE_BONUS; yval: SN_POISON; pval: +5;
    Purpose: EP_FIX_TROUBLE (TROUBLE_POISON); Flags: EF_STAPLE;
  }
and EA_HEALING
  { xval: HEAL_MALADY; yval: POISONED; 
    Constants:
      * SERVICE_SPELL_COST 300;
  }
  
/* You'd think this should be Druid, huh? It's for clerics
   because it duplicates a classic Judeo-Christian miracle,
   which is more priest imagery then druidic. */
Priest Spell "Part Water" : EA_TERRAFORM
  { SC_ARC|SC_WATER; Base: SP_HARD; Cost: 14; Level: 4; 
    qval: Q_DIR|Q_LOC; aval: AR_BEAM; cval: WHITE; lval: 6;
    /* Later, this should be altered to be the floor terrain
       of the region type, and some more checks should be
       performed, etc. */
    xval: TERRA_WATER; rval: $"floor";
    On Event EV_CALC_EFFECT {
      if (GetHandle(EActor) == NULL_OBJ)
        return NOTHING;
      e.vRange = 6 + EActor->Mod(A_WIS);
      return NOTHING;
      },
    PRE(EV_EFFECT) {
      if (ResourceHasFlag(EMap->TerrainAt(EActor->x, EActor->y), TF_WATER))
        {
          EActor->IPrint("You need to be standing on dry 
            land to cast Part Water.");
          return ABORT;
        }
      return NOTHING;
      };
    Desc: "Causes all water to part in a ten-foot wide path in
      front of you, stretching out to a range of 60 feet, plus
        10 feet per point of your Wisdom bonus, revealing dry
        land beneath the water.";
  }
  
Priest / Druid / Potion Spell "Restoration" : EA_HEALING
  { SC_THE; Base: SP_EASY; Cost: 20; Level: 4; qval: Q_TAR;
    xval: HEAL_ATTR | HEAL_XP; pval: (LEVEL_1PER1)d6;
    Desc: "Heals damage to ability scores from poisons or
      undead attacks, and similairly restores experience
      points lost due to necromantic effects."; Flags: EF_STAPLE; }

Priest  Spell "Searing Light" : EA_BLAST
  { SC_EVO|SC_LIGHT; Base: SP_EASY; Cost: 7; Level: 4; qval: Q_DIR;
    xval: AD_SUNL; pval: (LEVEL_SCALED2)d8; tval: MA_LIVING;
    Flags: EF_ATTACK, EF_LIM_MTYPE; aval: AR_BEAM; cval: YELLOW;
    Purpose: EP_ATTACK; On Event MSG_BLASTNAME "ray of searing light";
    Desc: "Projects a blast of searing light that, with a ranged
      attack roll, inflicts 1d8 / 2 levels (max 5d8) to living
      creatures, 1d6/level (max 10d6) to undead, and 1d6 / 2 levels
      (max 5d6) to constructs. The blast will also dispel areas of magical
      darkness it comes in contact with, including <9>globe of
      shadow<1>, <9>deeper darkness<1> and <9>animate shadows<1>."; }
and EA_BLAST
  { xval: AD_SUNL; pval: (LEVEL_SCALED)d6; tval: MA_UNDEAD;
    Flags: EF_ATTACK, EF_LIM_MTYPE; aval: AR_BEAM; }
and EA_BLAST
  { xval: AD_SUNL; pval: (LEVEL_SCALED2)d6; tval: MA_CONSTRUCT;
    Flags: EF_ATTACK, EF_LIM_MTYPE; aval: AR_BEAM; 
    On Event EV_MAGIC_XY {
      if (EMap->DispelField(e.EXVal,e.EYVal,0,$"Globe of Shadow",0) ||
          EMap->DispelField(e.EXVal,e.EYVal,0,$"Animate Shadows",0) ||
          EMap->DispelField(e.EXVal,e.EYVal,0,$"Deeper Darkness",0))
        APrint(e,"The radiance tears away the magical darkness!");
      return NOTHING;
      };
  }

/* This is a little bit different from the PHB version. It's permanent
   so you don't have to recast it every morning, selecting spells from
   a HUGE list. You get CL/2 instead of CL/4 because total immunity is
   a lot more important in a roguelike then in tabletop, and there's a
   lot of different spells in Incursion, and monster casters are quite
   unpredictable. */
Priest / Scroll Spell "Spell Immunity" : EA_GENERIC
  { SC_ABJ; Base: SP_TRIVIAL; Cost: 0; Level: 4;
    Flags: EF_VARMANA; Purpose: EP_PLAYER_ONLY;
    Desc: "Casting this spell grant you complete and permanent
      immunity to a single spell of your choice of a level lower
      than or equal to 6. This costs you a number of points of
      mana equal to ([(Spell Level + 1) / 2] x 5) permanently.";
    On Event EV_CRITERIA {
      if ( e.eID->HasSource(AI_WIZARDRY) ||
           e.eID->HasSource(AI_THEURGY) ||
           e.eID->HasSource(AI_DRUIDIC) ||
           e.eID->HasSource(AI_SORCERY) )
        if (e.eID->Level <= 6)
          return 1;
      return 0;
      },
    EV_EFFECT {
      int16 spNum; rID spID;
      
      if (EActor->CountEffStati(EFF_FLAG1,$"Spell Immunity") >
           e.vCasterLev / 2)
        {
          EActor->IPrint("You are already immune to one spell for every two
            caster levels you possess.");
          return ABORT;
        }
      
      spID = ETerm->ChooseResource(
        "Select a Spell", T_TEFFECT, $"Spell Immunity");
        
      if (spID == ((rID)-1))
        return ABORT;
        
      if (EActor->cMana() < spID->Level*2)
        {
          EActor->IPrint("You don't have enough mana left!");
          return ABORT;
        }
      
      spNum = theGame->SpellNum(spID);
      
      if (EActor->HasEffStati(EFF_FLAG1,$"Spell Immunity",spNum))
        {
          EActor->IPrint("You're already immune to that spell.");
          return ABORT;
        }
      
      if (!EActor->yn(XPrint("Confirm immunize to <Res>?",spID),true))
        return ABORT;
      
      EActor->GainPermStati(EFF_FLAG1,NULL,SS_MISC,
                            spNum,0,$"Spell Immunity");
     
      if (!EActor->HasEffStati(TRAP_EVENT,$"Spell Immunity"))
        {
          EActor->GainPermStati(TRAP_EVENT,NULL,SS_MISC,
                      EVICTIM(EV_MAGIC_STRIKE),0,$"Spell Immunity");
          EActor->GainPermStati(ADJUST_INH,NULL,SS_MISC,
                                A_MAN,-(spID->Level+1)/2,$"Spell Immunity");        
        }  
      else {
        EActor->IncEffStatiMag(ADJUST_INH,$"Spell Immunity",
                               SS_MISC,NULL,-(spID->Level+1)/2);
        EActor->CalcValues();
        }
        
        
      EActor->IPrint("You feel safe.");
      return DONE;
      },
    META(EVICTIM(EV_MAGIC_STRIKE)) {
      int16 n;
      n = theGame->SpellNum(e.eID);
      if (EVictim->HasEffStati(EFF_FLAG1,$"Spell Immunity",n))
        {
          e.Immune = true;
          return DONE;
        }
      return NOTHING;
      };
  }


/* -- DRUID 4 -- */

Druid Spell "Whirlpool" : EA_TERRAFORM
  { SC_ARC|SC_WATER; Base: SP_HARD; Cost: 8; Level: 4; qval: Q_LOC;
    xval: TERRA_OPEN; rval: $"turbulent water"; aval: AR_GLOBE;
    lval: 4; cval: BLUE; Purpose: 
      EP_FOIL_PURSUIT | EP_CURSE | AIM_AT_ENEMY;
    Flags: EF_PERMANANT;
    /* HACKFIX */ Purpose: EP_PLAYER_ONLY;
    Desc: "Creates a pool of deep, turbulent water 40 feet (4 squares) in
      radius. A swim check (DC 20) is required to make progress in such
      water."; 
    On Event MSG_CAST
      "Water rises up from dry earth!"; }

Druid Spell "Air Walk" : EA_INFLICT
  { SC_THA|SC_AIR; IS_A_BUFF(COST_4); Level: 4; 
    xval: EXTRA_ABILITY; yval: CA_FLIGHT; pval: 6; 
    Desc: "The subject can tread on air as if walking on solid ground. This
    allows the subject to avoid ground-based traps, water, pits and chasms."; 
  }

Druid Spell "Antiplant Shell" : EA_GENERIC
  { SC_ABJ; IS_A_BUFF(COST_4); Level: 4; 
    aval: AR_MFIELD;
    rval: FI_BLOCKER; tval: MA_PLANT; lval: 3; cval: RED;
    Flags: EF_LIM_MTYPE, EF_NO_PRESS;
    Desc: "Evokes a 30 foot (3 square) radius globe around you
      into which plant creatures may not enter."; }

Druid / Sorcerer Spell "Repel Vermin" : EA_GENERIC
  { SC_ABJ; IS_A_BUFF(COST_4); Level: 4; 
    aval: AR_MFIELD;
    rval: FI_BLOCKER; tval: MA_VERMIN; lval: 3; cval: RED;
    Flags: EF_LIM_MTYPE, EF_NO_PRESS; 
    Desc: "Evokes a 30 foot (3 square) radius globe around you
      into which vermin (spiders, snakes, insects, etc.) may not enter."; }

Druid Spell "Summon Nature's Ally IV" : EA_SUMMON
  { SC_WEA; Base: SP_MEDIUM; Cost: 8; Level: 4; qval: Q_LOC;
    Purpose: EP_SUMMON; rval: $"Nature's Ally"; pval: 4; 
    Desc: "Summons a natural creature of CR 4 to fight in the 
      caster's name.";  
    ALIENIST_CLAUSE(4) }

Druid Spell "Control Plant" : EA_INFLICT
  { SC_ENC; Base: SP_TRIVIAL; Cost: 8; Level: 4; sval: WILL;
    Purpose: EP_CURSE (VS_MENTAL); tval: MA_PLANT; 
    xval: CHARMED; yval: CH_DOMINATE; 
    Flags: EF_DLONG, EF_MENTAL, EF_LIM_MTYPE; 
    Desc: "Causes a single plant creature to follow you (if it
      can move), fight and even die at your behalf."; 
  }

Druid Spell "Natural Erosion" : EA_BLAST
  { 
    SC_ARC|SC_WATER; Base: SP_TRIVIAL; Cost: 7; Level 4; aval: AR_BEAM;
    cval: COL_MAGIC; qval: Q_TAR|Q_LOC|Q_DIR|Q_EQU; sval: REF partial; 
    Purpose: EP_CURSE | AIM_AT_ENEMY; 
    xval: AD_RUST; pval: 4d10; 
    hObj it;
    On Event EV_ISTARGET {
      for(it=EVictim->FirstInv();it;it=EVictim->NextInv()) 
        if (it->GetParent() == EVictim)
          if (it->Hardness(AD_RUST) != -1 ||
              it->Hardness(AD_SOAK) != -1 ||
              it->Hardness(AD_DCAY) != -1)
            return SHOULD_CAST_IT; 
      return CAN_CAST_IT;
    } ;
    Desc: "This spell calls down the natural force of time to smite those
    who depend too much on artificial equipment. Every exposed item
    carried by everyone hit by this beam suffers 4d10 points of rusting
    damage, 4d10 points of soaking damage, and 4d10 points of organic
    decay.";
  } and EA_BLAST {
    xval: AD_SOAK; pval: 4d10; aval: AR_BEAM; 
  } and EA_BLAST {
    xval: AD_DCAY; pval: 4d10; aval: AR_BEAM; 
  } 

Druid  Spell "Dire Regression" : EA_GENERIC
  { SC_THA; Base: SP_EASY; Cost: 50; Level: 4; qval: Q_TAR;
    Flags: EF_DXLONG, EF_NOTBAD; Purpose: EP_BUFF;
    On Event EV_ISTARGET {
      if (!EVictim->isPlayer() && EVictim->CanAddTemplate($"dire"))
        return SHOULD_CAST_IT;
      else 
        return CANNOT_CAST_IT; 
    } ,
    EV_MAGIC_HIT {
      VPrint(e,NULL,
        "A primal spark fires in the <EVictim>'s eyes, and it grows...");
      EVictim->AddTemplate($"dire");
    };
    Desc: "Regresses a normal animal to its primordial form, giving it the
    Dire template permanantly. Dire animals have a vaguely prehistoric
    look. They are stronger, tougher and larger than their mundane
    counterparts. Dire animals gain one size level, +4 strength, +2
    dexterity, +2 constitution, a +3 natural armour bonus, +4 to hit and +4
    hit dice. They become immune to fear. These bonuses are template
    bonuses. This spell does not work on players.";
    Constants:
      * SERVICE_SPELL_COST 1200;
  }

Druid  Spell "Giant Vermin" : EA_SUMMON
  { SC_WEA; Base: SP_MEDIUM; Cost: 8; Level: 4; qval: Q_LOC;
    Purpose: EP_SUMMON; xval: MA_VERMIN; rval: $"mass summons"; pval: 6; 
    Desc: "Conjures giant insects worth CR 6 in total to fight
      on your behalf."; }

Druid  Spell "Thornwrack" : EA_INFLICT
  { SC_THA; Base: SP_MEDIUM; Cost: 7; Level: 4; qval: Q_TAR;
    xval: TRAP_EVENT; yval: EV_TURN; tval: MA_LIVING;
    Flags: EF_LIM_MTYPE, EF_SHOWNAME; sval: FORT;
    Purpose: EP_ATTACK;
    On Event META(EV_TURN) {
      hObj killer;
      ThrowDmg(EV_DAMAGE,AD_NORM,1d8,XPrint("thorns growing out of <his:hObj> body",EActor)
                ,EActor,EActor);
      if (EActor->isDead())
  	    DPrint(e,"Thorns grow out of your body!", 
                 "Thorns grow out of the <EActor>'s body, killing <him:EActor>!");
      else
  	    DPrint(e,"Thorns grow out of your body!", 
                 "Thorns grow out of the <EActor>'s body!");
      if (EActor->isDead()) {
        killer = EActor->GetEffStatiObj(TRAP_EVENT,$"thornwrack");
        if (killer)
          killer->KillXP(EActor);
        }
      return NOTHING;
      };
    Desc: "Causes thorns to grow out of a victim's flesh, inflicting a -4
      penalty to attack rolls and saves due to agony, and causing 1d8 points
      of damage each round for the duration. A Fortitude save negates the
      effect.";
    On Event EV_MAGIC_HIT 
      "You scream in agony as thorns begin to grow out of your flesh!" /
      "The <EVictim> screams in agony as thorns begin to grow out of <his:EVictim> flesh!",
     EV_ELAPSED
      "Fortunately, the thorn growth seems to be finished.",
     EV_REMOVED
      "The thorns stop growing.";
  }
and EA_INFLICT
  { xval: ADJUST_CIRC; yval: A_AID; pval: -4; sval: FORT; }

Druid Spell "Spike Growth" : EA_TERRAFORM
  { SC_ARC|SC_EARTH; Base: SP_EASY; Cost: 8; Level: 4; qval: Q_LOC;
    aval: AR_GLOBE; lval: 6; rval: $"bed of spikes"; sval: NOSAVE;
    xval: TERRA_FLOOR; Purpose: EP_CURSE | EP_FOIL_PURSUIT;
    Desc: "Causes spikes to grow out of the ground in a 60
      foot (6 square) radius, inflicting 1d8 points of damage
      per 10 feet on any creatures walking across them, as
      well as inhibiting their movement."; }


Effect "Lesser Aspect of Divinity" : EA_INFLICT
  { SC_THE; IS_A_BUFF(COST_4); Level: 4; 
    xval: ADJUST; yval: A_CHA; pval: 1d4+1; 
    Desc: "Causes you to take on some of the qualities of a
      celestial being: you gain an enhancement bonus of 1d4+1
      to your Charisma score, darkvision, a +2 bonus to saving
      throws against disease and poison, and acid, cold and 
      electricity resistance of 5 + half your caster level."; }
and EA_INFLICT
  { xval: RESIST; yval: AD_COLD; pval: 5d1 + (LEVEL_1PER2); }
and EA_INFLICT
  { xval: RESIST; yval: AD_ELEC; pval: 5d1 + (LEVEL_1PER2); }
and EA_INFLICT
  { xval: RESIST; yval: AD_ACID; pval: 5d1 + (LEVEL_1PER2); }
and EA_INFLICT
  { xval: EXTRA_ABILITY; yval: CA_INFRAVISION; pval: 6; }
and EA_INFLICT
  { xval: SAVE_BONUS; yval: SN_POISON; pval: 2; }
and EA_INFLICT
  { xval: SAVE_BONUS; yval: SN_DISEASE; pval: 2;
    On Event MSG_CAST
      "You take on the aspect of an angel of vengeance!" /
      "The <EActor> takes on the aspect of an angel of vengeance!"; }

Effect "Holy Smite" : EA_BLAST
  { SC_EVO; Base: SP_MEDIUM; Cost: 8; Level: 4; aval: AR_GLOBE;
    cval: WHITE;  qval: Q_LOC;
    xval: AD_HOLY; pval: (LEVEL_SCALED2)d8; lval: 6;
    Purpose: EP_ATTACK; On Event EV_MAGIC_HIT
      "You are smote by holy power!" /
      "The <EVictim> is smote by holy power!";
    Desc: "Calls down holy power to smite evil creatures,
      inflicting 1d8 points of holy damage per two caster
      levels and blinding evil creatures who fail a Fortitude
      save for 1d4 rounds."; }
and EA_INFLICT
  { xval: BLIND; tval: MA_EVIL; sval: FORT; aval: AR_GLOBE;
    Flags: EF_GOOD, EF_LIM_MTYPE, EF_DSHORT; lval: 6; }

Effect "Unholy Blight" : EA_BLAST
  { SC_EVO; Base: SP_MEDIUM; Cost: 8; Level: 4; aval: AR_GLOBE;
    cval: SHADOW;  qval: Q_LOC;
    Purpose: EP_ATTACK; On Event EV_MAGIC_HIT
      "You are defiled by evil energies!" /
      "The <EVictim> is defiled by evil energies!";
    xval: AD_EVIL; pval: (LEVEL_SCALED2)d8; lval: 6;
    Desc: "Calls forth a cloud of greasy malevolance,
      inflicting 1d8 points of evil damage per two caster
      levels and sickening (-2 to hit, damage and saving
      throws) good creatures who fail a Fortitude save 
      for 1d4 rounds."; }
and EA_INFLICT
  { xval: ADJUST_CIRC; tval: MA_GOOD; sval: FORT; aval: AR_GLOBE;
    lval: 6; xval: A_AID; pval: -2;
    Flags: EF_EVIL, EF_LIM_MTYPE, EF_DSHORT, EF_SHOWNAME; 
    On Event MSG_STATINAME "Sickened" "Sick"; }

Effect "Order's Wrath" : EA_BLAST
  { SC_EVO; Base: SP_MEDIUM; Cost: 8; Level: 4; aval: AR_GLOBE;
    cval: EMERALD; qval: Q_LOC;
    Purpose: EP_ATTACK; On Event EV_MAGIC_HIT
      "You are struck by the judgement of law!" /
      "The <EVictim> is struck by the judgement of law!";
    xval: AD_LAWF; pval: (LEVEL_SCALED2)d8; lval: 6;
    Desc: "Calls a matrix of aligned energies to strike against 
      chaos, inflicting 1d8 points of lawful damage per two caster
      levels and stunning chaotic creatures who fail a Fortitude
      save for 1d4 rounds."; }
and EA_INFLICT
  { xval: STUNNED; tval: MA_CHAOTIC; sval: FORT; aval: AR_GLOBE;
    Flags: EF_LAWFUL, EF_LIM_MTYPE, EF_DSHORT; lval: 6; }

Effect "Chaos Hammer" : EA_BLAST
  { SC_EVO; Base: SP_MEDIUM; Cost: 8; Level: 4; aval: AR_GLOBE;
    cval: MAGENTA; qval: Q_LOC;
    Purpose: EP_ATTACK; On Event EV_MAGIC_HIT
      "You are struck by primordial chaos!" /
      "The <EVictim> is struck by primordial chaos!";
    xval: AD_CHAO; pval: (LEVEL_SCALED2)d8; lval: 6;
    Desc: "Unleashes a burst of primordial chaos to strike against 
      law, inflicting 1d8 points of chaotic damage per two caster
      levels and confusing lawful creatures who fail a Fortitude
      save for 1d4 rounds."; }
and EA_INFLICT
  { xval: CONFUSED; tval: MA_LAWFUL; sval: FORT; aval: AR_GLOBE;
    Flags: EF_CHAOTIC, EF_LIM_MTYPE, EF_DSHORT; lval: 6; }



/* ============================================================= 
 *                  Level Five Priest Spells
 * =============================================================
Priest Spell "Infernal Blood" : EA_GENERIC
Priest Spell "Inflict Light Wounds, Mass" : EA_BLAST
Priest Spell "Spell Resistance" : EA_INFLICT
Priest Spell "Dispel Evil" : EA_GENERIC
Priest Spell "Dispel Chaos" : EA_GENERIC
Priest Spell "Dispel Law" : EA_GENERIC
Priest Spell "Disrupting Weapon" : EA_GENERIC
Priest / Druid  Spell "Insect Plague" : EA_BLAST
Priest / Druid  Spell	"Flame Strike" : EA_BLAST
Priest  Spell "Divine Agility" : EA_INFLICT
Priest Spell "Slay Living" : EA_DRAIN
Priest Spell "Holy Summoning V" : EA_SUMMON
Priest Spell "Righteous Might" : EA_INFLICT
Druid Spell "Turnclaw" : EA_INFLICT
Druid Spell "Summon Nature's Ally V" : EA_SUMMON
Druid Spell "Corrupt Animal" : EA_GENERIC
Druid Spell "Animal Growth" : EA_INFLICT        // WW: SRD
Druid / Wizard Spell "Baleful Polymorph" : EA_POLYMORPH
Druid Spell "Call Lightning Storm" : EA_BLAST
Druid Spell "Commune With Nature" : EA_GENERIC
Druid Spell "Wall of Thorns" : EA_TERRAFORM
 */

Effect "Infernal Blood" : EA_GENERIC
  { SC_THE; SC_THA; IS_A_BUFF(COST_5); 
    Level: 5; qval: Q_TAR;
    Desc: "Infuses the blood of the target with the blood of demons. The
    target gains the benefit of the Half-Fiend template: +4 Natural Armour,
    +4 Strength, +4 Dexterity, +2 Constitution, +4 Intelligence, +2
    Charisma, the Outsider type, resistance to Acid, Cold, Fire and
    Electricity, and immunity to Poison."; 
    On Event EV_ISTARGET {
      if (EVictim->CanAddTemplate($"half-fiend"))
        return SHOULD_CAST_IT;
      else
        return CANNOT_CAST_IT; 
    } ;
    On Event EV_MAGIC_STRIKE {
      if (!EVictim->CanAddTemplate($"half-fiend"))
        return ABORT; 
      EVictim->GainTempStati(TEMPLATE,EActor,e.vDuration,
        SS_ENCH, 0, 0, $"half-fiend", e.vCasterLev + (e.MM & MM_FORTIFY ?
        5:0));
      EVictim->SetImage();
      EVictim->CalcValues();
      return DONE; 
    } ;
  }


Priest Spell "Inflict Light Wounds, Mass" : EA_BLAST
  { SC_NEC; Base: SP_TRIVIAL; Cost: 1; Level: 5; aval: AR_BALL; lval: 3;
    xval: AD_NECR; pval: 1d8 + LEVEL_1PER1; cval: BROWN;
    Flags: EF_CASTER_IMMUNE; Purpose: EP_ATTACK | AIM_AT_ENEMY;
    On Event EV_MAGIC_HIT
      "Wounds appear on your body!" /
      "Wounds appear on the <EVictim>'s body!";
    Desc: "Inflicts 1d8 + caster level points of necromantic
      damage on all creatures within a ball of radius 30 feet."; 
  }

Priest / Sorcerer Spell "Magic Resistance" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(COST_4); 
    Level: 4; 
    xval: ADJUST; yval: A_MR; pval: LEVEL_5PER1;
    Desc: "Grants you a +5~ bonus to your magic resistance per caster level."; 
    }

Priest Spell "Dispel Evil" : EA_GENERIC
  { SC_ABJ; Base: SP_MEDIUM; Cost: 16; Level: 5; sval: WILL + 10;
    Desc: "Casting this spell empowers you to drive away evil influences
      with a touch. It has a tripartate effect:\n
      __<9>1._<1>You gain a +4 deflection bonus to DC against attacks by
      evil creatures, which increases to +6 against <9>inherently<1>
      evil creatures.\n
      __<9>2._<1>You are empowered with a touch attack which can banish
      evil outsiders of Challenge Rating equal to or lower than your
      caster level, provided they fail a Will save. You get one touch
      for every 3 caster levels.\n 
      __<9>3._<1>If an evil outsider resists your banishment, or you touch
      an evil creature not subject to the second effect, they are subject
      to a <9>dispel magic<1> effect with a +10 bonus to the caster level
      check.\n
      __One casting of this spell gives you one touch for every two full
      caster levels you possess.";
    Purpose: EP_BUFF; Flags: EF_GOOD;
    xval: TRAP_EVENT; yval: EVICTIM(EV_STRIKE);
    On Event META(EVICTIM(EV_STRIKE)) 
      {
        int16 bonus, curr;
        if (EActor->isMType(MA_EVIL))
          {
            bonus = EActor->HasMFlag(M_IALIGN) ? 6 : 4;
            curr = EVictim->HighStatiMag(ADJUST_DEFL,A_DEF);
            if (bonus > curr)
              {
                e.strDef += XPrint(" +%d DispEv",bonus - curr);
                e.vDef   += bonus - curr;
              }
          }
        return NOTHING; 
      };
  }
and EA_GENERIC
  { aval: AR_TOUCH; lval: LEVEL_1PER2;
    On Event EV_MAGIC_HIT
      {
        if (e.efNum == 1)
          {
            if (EVictim->isMType(MA_EVIL) && 
                  EVictim->isMType(MA_OUTSIDER))
              if (!EVictim->SavingThrow(WILL,e.saveDC,
                             SA_MAGIC|SA_SPELLS))
                {
                  VPrint(e,"You feel a strong urge to leave this plane!",
                            "The <EVictim> feels an urge to leave this plane!");
                  ThrowDmg(EV_DEATH,AD_NORM,0,"banishment",EActor,EVictim);
                  return DONE;
                }
            if (EVictim->isMType(MA_EVIL))
              {
                e.vCasterLev += 10;
                RedirectEff(e,$"dispel magic",EV_MAGIC_HIT);
                e.vCasterLev -= 10;
              }
            return DONE;
          }
        return NOTHING;
      };
  }
  
  
Priest Spell "Disrupting Weapon" : EA_GENERIC
  { SC_THE; IS_A_BUFF(COST_5); Level: 5; qval: Q_INV;
    Desc: "Imbues one of your blunt, non-missile weapons to become deadly
    to the undead. Any undead struck by such a weapon must make a Will save
    or be destroyed."; 
    Purpose: EP_BUFF; 
    On Event 
      EV_ISTARGET {
        hObj it;
        for(it=EActor->FirstInv();it;it=EActor->NextInv()) {
          if (it->isType(T_WEAPON) || it->isType(T_BOW))
            if (it->QualityOK(WQ_DISRUPTION))
              return SHOULD_CAST_IT; 
        }
        return CAN_CAST_IT; 
      },
      EV_RATETARG {
        if (!EItem->QualityOK(WQ_DISRUPTION))
          return ABORT;
        return NOTHING;
      },  
      EV_MAGIC_STRIKE {
        if (ETarget->isType(T_WEAPON))
          if (ETarget->QualityOK(WQ_DISRUPTION))
            ETarget->GainTempStati(EXTRA_QUALITY,EActor,e.vDuration,SS_ENCH,
              WQ_DISRUPTION,WQ_DISRUPTION,$"disrupting weapon"); 
      }; 
  }

Priest / Druid  Spell "Insect Plague" : EA_BLAST
  { SC_THA; Base: SP_MEDIUM; Cost: 9; Level: 5; aval: AR_FIELD;
    rval: FI_FOG | FI_MODIFIER | FI_OBVIOUS | FI_CONTINUAL | FI_BAD; lval: 9;
    xval: AD_NORM; pval: 1d8; qval: Q_LOC; tval: 40;
    Flags: EF_LIM_LEVEL, EF_GLYPH_INSECTS; cval: BROWN; }
and EA_GRANT
  { xval: ADJUST_CIRC; yval: A_MAG; pval: -15; aval: AR_FIELD;
    tval: 40; Purpose: EP_CURSE | EP_COUNTER (VS_CASTING); }
and EA_GRANT
  { xval: AFRAID; tval: LEVEL_1PER2; 
    Desc: "Conjures a huge cloud of flying, biting bugs that
      limits visibility to 10 feet, inflicts 1d8 points of damage
      to all within per round, severely impedes concentrating
      on spellcasting (-75%) and cause all creatures of whose
      CR is half the caster's level or less to become frightened
      and flee.";
    On Event MSG_CAST
      "A vast cloud of insects appears!",
    EV_ELAPSED
      "The cloud of insects disperses."; }

Priest / Druid  Spell	"Flame Strike" : EA_BLAST
  { SC_EVO|SC_FIRE; Base: SP_MEDIUM; Cost: 15; Level: 5; qval: Q_TAR|Q_LOC; sval: REF;
    cval: RED; 
    xval: AD_FIRE; pval: (LEVEL_SCALED)d6; 
    Flags: EF_PARTIAL, EF_HALF_UNTYPED, EF_CASTER_IMMUNE, EF_NO_BONUS_DMG,
           EF_COMMON;
    aval: AR_BALL; lval: 1; 
    Purpose: EP_ATTACK;
    On Event MSG_BLASTNAME "pillar of flame";
    Desc: "Calls down a pillar of divine fire to strike a chosen target for
    1d8 points of damage per caster level, scaled after 9th. A Reflex save 
    halves the damage, but only half the damage the spell inflicts is fire 
    damage -- the other half is raw divine power and cannot be resisted. The 
    column has a radius of one square and the caster is immune to the damage.";
  }

Priest  Spell "Divine Agility" : EA_INFLICT
  { SC_THA; IS_A_BUFF(COST_5); Level: 5; qval: Q_TAR;
    Purpose: EP_BUFF | AIM_AT_SELF | AIM_AT_ALLY;
	  xval: ADJUST_INS; yval: A_DEF; pval: +4; }
and EA_INFLICT
  { xval: ADJUST_INS; yval: A_SAV_REF; pval: +4; }
and EA_INFLICT
  { xval: ADJUST; yval: A_MOV; pval: +5; }
and EA_INFLICT
  { xval: EXTRA_FEAT; yval: FT_SPRING_ATTACK; }
and EA_INFLICT
  { xval: EXTRA_ABILITY; yval: CA_EVASION; pval: 1; 
  Desc: "Grants a subject of your choice supernatural agility,
        bestowing on them a +4 insight bonus to both Defense Class
          and Reflex saves, a +25~ bonus to their movement rate, the
          Spring Attack feat and the Evasion ability.";
        On Event MSG_STATINAME "Divine Agility" / "DivAgi"; 
    Constants:
      * SERVICE_SPELL_COST 1000;
  }
  
AI_SCROLL / Priest Spell "Hallow" : EA_GENERIC
  {
    SC_THE; SC_ARC; Level: 5; Cost: 80; Base: SP_HARD;
    Flags: EF_LOSEMANA;
    Desc: "Casting this spell creates an altar to the caster's
      diety in the same square the caster currently occupies.
      Doing this requires a sacrifice of the caster's own
      spiritual energies, costing her 750 XP.";
    On Event EV_MAGIC_HIT {
      hObj hAltar;
      if (!EActor->isCharacter())
        return ABORT;
      if (!EActor->GodID || (EActor->getGodFlags(EActor->GodID) &
            (GS_ANATHEMA|GS_FORSAKEN)))
        { EActor->IPrint("You have no god to deticate an altar to.");
          return ABORT; }
      if (EMap->FallAt(EActor->x,EActor->y) || EMap->SolidAt(EActor->x,EActor->y)
          || ResourceHasFlag(EMap->TerrainAt(EActor->x,EActor->y),TF_WATER))
        { EActor->IPrint("You can only create an altar on solid ground.");
          return ABORT; }
      if (EMap->FFeatureAt(EActor->x, EActor->y))
        { EActor->IPrint("You need more open space for an altar.");
          return ABORT; }
      hAltar = CreateFeature($"altar");
      hAltar->GainPermStati(MY_GOD, NULL_OBJ, SS_MISC, 0, 0, EActor->GodID);
      hAltar->PlaceAt(EMap, EActor->x, EActor->y);
      if (EActor->isCharacter())
        EActor->LoseXP(750);
      APrint(e,"An altar to <Res> rises up from the floor!", EActor->GodID);
      return DONE;
      };
  }

Priest Spell "Slay Living" : EA_DRAIN
  { SC_NEC; Base: SP_TRIVIAL; Cost: 9; Level: 5; aval: AR_TOUCH;
	  lval: 1; xval: AD_NECR; pval: 3d6+(LEVEL_1PER1);
    Purpose: EP_ATTACK;
		Flags: EF_DEATH, EF_LIM_MTYPE, EF_SHOWNAME; tval: MA_LIVING;
		On Event EV_MAGIC_HIT {
		  if (!EVictim->SavingThrow(FORT,e.saveDC,SA_DEATH|SA_NECRO|SA_SPELLS|SA_MAGIC))
			  {
				  ReThrow(EV_DEATH,e);
					return DONE;
				}
			return NOTHING;
			};
		Desc: "Lets you kill a living creature with a touch, or inflict [3d6 + 
		  caster level] points of damage if they succeed in a Fortitude saving 
			throw.";
    On Event MSG_CAST
      "Your hands glow with a black aura." /
      "The <EActor>'s hands glow with a black aura.";
	}

Priest Spell "Holy Summoning V" : EA_SUMMON
  { SC_WEA; Base: SP_MEDIUM; Cost: 11; Level: 5; qval: Q_LOC;
    Purpose: EP_SUMMON; rval: $"Holy Summons"; pval: 5; 
    Desc: "Summons an outsider of CR 5 to fight in the 
      caster's name.";  
    ALIENIST_CLAUSE(5) }
      
Priest Spell "Righteous Might" : EA_INFLICT
  { SC_THA; Cost: 20; Level: 5; Purpose: EP_BUFF;
    Desc: "Your height immediately doubles and your weight increases by a
      factor of eight. This increase changes your size category to the next
      larger one, and you gain a +4 size bonus to strength and a +2 size
      bonus to constitution. You also gain a bonus to your natural armour rating
      equal to 3 plus 1 for every 5 caster levels, and a +5 circumstance bonus
      to the Intimidate skill. When this spell expires, you lose two fatigue 
      points.";
    Flags: EF_SHOWNAME, EF_LOSEMANA, EF_CANCEL; 
    On Event MSG_STATINAME "RMight";
    xval: ADJUST_SIZE; yval: A_STR; pval: +4; }
and EA_INFLICT
  { xval: ADJUST_SIZE; yval: A_CON; pval: +2; }
and EA_INFLICT
  { xval: ADJUST; yval: A_SIZ; pval: +1; }
and EA_INFLICT
  { xval: ADJUST_NAT; yval: A_ARM; pval: 3d1 + LEVEL_1PER5;
    On Event EV_MAGIC_HIT
      "You grow huge, and feel a righteous power come upon you." /
      "The <EVictim> grows enormous, and is surrounded by an aura of righteousness!",
	  EV_REMOVED {
	    EActor->IDPrint("You feel the righetous might leave you.",
	                    "The <EActor> shrinks back to normal size.");
	    EActor->LoseFatigue(2,false);  
	    return NOTHING;
	    };
  }
and EA_INFLICT
  { xval: SKILL_BONUS; yval: SK_INTIMIDATE; pval: +5; }

/* -- DRUID 5 -- */

Druid Spell "Turnclaw" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(COST_5X); Level: 5; 
    xval: TRAP_EVENT; yval: EVICTIM(EV_DAMAGE);	pval: (LEVEL_1PER1)d6; 
    Flags: EF_SHOWVAL;	
    On Event META(EVICTIM(EV_DAMAGE)) {
      int16 buff;
      if (e.AType != A_CLAW || (e.DType != AD_SLASH && 
            e.DType != AD_PIERCE && e.DType != AD_BLUNT))
        return NOTHING;
      buff = EVictim->GetEffStatiVal(TRAP_EVENT,$"Turnclaw");
      if (e.vDmg < buff) {
        EVictim->SetEffStatiVal(TRAP_EVENT,$"Turnclaw",buff - e.vDmg);
        e.Immune = true;
        return DONE;
      } else {
        EVictim->RemoveEffStati($"Turnclaw",EV_REMOVED);
        if (e.vDmg == buff) {
          e.Immune = true;
          return DONE;
        }
        e.vDmg -= buff;
        return NOTHING;
      }
    },
       MSG_STATINAME "Turnclaw",
       EV_MAGIC_HIT {
         e.vDmg = min(126, e.vDmg);
         return NOTHING;
       };
Desc: "Turns aside the claw attacks of animals, humanoids and monsters
        alike, shielding the caster from the first [1d6 / caster level] points 
        of damage that would normally be taken from such attacks.";
  }

Druid Spell "Summon Nature's Ally V" : EA_SUMMON
  { SC_WEA; Base: SP_MEDIUM; Cost: 10; Level: 5; qval: Q_LOC;
    Purpose: EP_SUMMON; rval: $"Nature's Ally"; pval: 5; 
    Desc: "Summons a natural creature of CR 5 to fight in the 
      caster's name.";  
    ALIENIST_CLAUSE(5) }

Druid Spell "Corrupt Animal" : EA_GENERIC
  { SC_THA; Base: SP_EASY; Cost: 50; Level: 5; qval: Q_TAR;
    Flags: EF_DXLONG, EF_NOTBAD; Purpose: EP_BUFF;
    On Event EV_ISTARGET {
      if (!EVictim->isPlayer() && EVictim->CanAddTemplate($"corrupted"))
        return SHOULD_CAST_IT;
      else 
        return CANNOT_CAST_IT; 
    } ,
    EV_MAGIC_HIT {
      VPrint(e,NULL,
        "A corrupt spark fires in the <EVictim>'s eyes, and it grows...");
      EVictim->AddTemplate($"corrupted");
    };
    Desc: "This spell is typically only used by grey druids and demonic
    forces. It twists an aminal's association with nature and permanently
    gives it an abberant ability to manipulate natural magics and cast
    druidic spells. The animal gains +6 wisdom, +6 intelligence, +2 con, +4
    to hit and +4 hit dice. It gains the combat casting and defensive spell
    feats, as well as the woodland stride ability and the ability to cast
    spells as a third-level druid. These bonuses are template bonuses. 
    This spell does not work on players."; 
  }

Druid Spell "Animal Growth" : EA_INFLICT        // WW: SRD
  { SC_THE; IS_A_BUFF(COST_5); Level: 5; 
    Purpose: EP_BUFF;
    xval: ADJUST_CIRC; yval: A_SIZ; pval: +1; 
    Desc: "This spell causes an animal or beast to grow to twice its normal
    size and eight times its current weight. This alteration increases the
    target's size category by +1, its strength by +8, its constitution by
    +4, its dexterity by -2, its natural armour by +12 and its saving throws
    by +4.  All of these bonuses are Circumstance Bonuses."; 
    On Event
    EV_ISTARGET {
      if (EVictim->isMType(MA_ANIMAL) || EVictim->isMType(MA_BEAST))
        return SHOULD_CAST_IT;
      return CANNOT_CAST_IT;
    };
  } 
  and EA_INFLICT { xval: ADJUST_CIRC; yval: A_STR; pval: +8; }
  and EA_INFLICT { xval: ADJUST_CIRC; yval: A_CON; pval: +4; }
  and EA_INFLICT { xval: ADJUST_CIRC; yval: A_SAV; pval: +4; }
  and EA_INFLICT { xval: ADJUST_CIRC; yval: A_ARM; pval: +12; }
  and EA_INFLICT { xval: ADJUST_CIRC; yval: A_DEX; pval: -2; }

Druid / Wizard Spell "Baleful Polymorph" : EA_POLYMORPH
  { SC_THA; Base: SP_HARD; Cost: 10; Level: 5; sval: FORT; qval: Q_TAR; 
    Flags: EF_DXLONG; Purpose: EP_CURSE; rval: $"giant rat"; 
    Desc: "Changes one target creature into a giant rat, provided that
    it fails its fortitude save."; 
    // ww: later, do that there where on a will save you lose yourself
    // in the new form ...
  }

/*
Druid Spell "Call Lightning Storm" : EA_BLAST
  { SC_EVO; Base: SP_MEDIUM; Cost: 10; Level: 5; qval: Q_TAR;
    xval: AD_ELEC; pval: (LEVEL_1PER1)d9; Purpose: EP_ATTACK;
    Desc: "Calls lightning down to smite a target of your choice for
      1d9 points of damage per caster level.";
    // ww: in the SRD, CLS does 5d6 to CL's 3d6. Our SL did
    // Ld5 = 3L damage on average, this one does 1Ld9 = 5L
    On Event MSG_BLASTNAME "storm of lightning"; }
*/

Druid Spell "Commune With Nature" : EA_GENERIC
  { SC_DIV; Base: SP_EASY; Cost: 50; Level: 5; Purpose: EP_PLAYER_ONLY; 
    Desc: "By communing with primordial spirits of nature, the caster
      is able to learn the layout of the level around her."; 
    On Event EV_MAGIC_HIT {
      Rect r; int16 x, y; rID terID;

      if (!EVictim->isPlayer())
        return NOTHING;

      r@x1 = 1;
      r@x2 = EMap->SizeX()-1;
      r@y1 = 1;
      r@y2 = EMap->SizeY()-1; 
      for (x=r@x1;x<=r@x2;x++)
        for (y=r@y1;y<=r@y2;y++)
          if (EMap->InBounds(x,y))
            /* Assumption: Player #0 */  
            EMap->MarkAsSeen(0,x,y,0);
      EMap->VUpdate(EVictim->x,EVictim->y);
      return DONE;
    };
  }

Druid Spell "Wall of Thorns" : EA_TERRAFORM
  { SC_ARC; Base: SP_EASY; Cost: 10; Level: 5; qval: Q_TAR; sval: NOSAVE;
    aval: AR_GLOBE; lval: 2; rval: $"thorn wall"; 
    xval: TERRA_OPEN; 
    Purpose: EP_CURSE|EP_FOIL_PURSUIT|EP_ESCAPE|EP_BARRIER | AIM_AT_ENEMY;
    Desc: "Conjures a solid barrier composed of thick shrubbery
      interwoven with razor-sharp, thorny vines. The wall of thorns
      fills an area with diameter 50 feet (5 squares). Any creature
      attempting to move through it must make an Escape Artist check
      (DC 30). If successful it moves at 15% normal speed and takes
      25 points of slashing damage."; }

Druid Spell "Control Winds" : EA_NOTIMP
  { SC_ARC|SC_AIR; Base: SP_MEDIUM; Cost: 10; Level: 5;
    Desc: "__Using this spell, a druid can evoke one of
      five distinct possible effects:\n
      __<9>Zone of Wind:<1> The druid creates an
      area 6 squares in radius where winds thrash
      at terrible velocity. This makes the use of
      bows impossible and grants a -6 penalty to
      all thrown weapons. It extinguishes torches,
      prevents the entry of swarms into the area
      and requires spellcasters to make a Concentration
      check (DC 10 + twice your caster level) in
      order to cast spells.\n
      __<9>Hold Vapour:<1> The spell can be used
      to paralyze any air elementals or similar
      gaseous creatures such as vampiric mists or
      mages using <9>gaseous form<1>. This
      affects all creatures within 60 feet of
      the casting druid.\n
      __<9>Still Air:<1> This effect negates the
      Zone of Wind version above, destroys a wind
      wall and prevents anyone from using the
      <9>gust of wind<1> spell inside its area.\n
      __<9>Wind Shield:<1> This version summons a
      corona of howling winds around the caster,
      granting her a +4 circumstance to AC and
      a Sound Resistance of 8.\n
      __<9>Hold Ship:<1> This version of the Control
      Wind spell can be used to paralyze any ship-
      based moving encounter on the overland screen
      for one hour per caster level.";
  }

Effect "Raise Dead" : EA_NOTIMP { }

/* -- DOMAIN 5 -- */

Effect "Music of the Spheres" : EA_INFLICT
  {
    SC_EVO; Base : SP_EASY; Cost: 12; Level: 5; 
    Desc: "Casting this spell allows the priest to produce music
      of such unearthly beauty that all creatures hostile to her
      of CR 5 or lower must stand transfixed in mute awe for 1d4 
      rounds. Additionally, creatures of any CR
      whose alignment opposes the priest's god's ethos suffer 1d4
      points of sonic damage per caster level, and are debilitated
      in a manner specific to the diety. Maeve's priestesses make
      alien, discordant music which smites and confuses lawfuls,
      Mara's children produce tones which cause intense sadness,
      <9>slow<1>ing evil creatures, and Essiah's joyful ballad
      causes evil creatures to be nauseated. Other casters stun
      targets who oppose them on the good/evil spectrum. A Will 
      save negates the debilitation but not the damage.\n
      __The music affects all creatures within 80 feet of the
      caster, and the priest and her allies are immune. Allies
      who are bards or casters can even add to the effect in a
      cooperative manner, forming a choir. A bardic ally adds
      half her bardic music level to the effect's caster level,
      while a priestly ally adds half her caster level.";
    aval: AR_GLOBE; cval: MAGENTA; Purpose: EP_PLAYER_ONLY;
    xval: PARALYSIS; yval: PARA_HYPNOTIZED; sval: WILL;
    Flags: EF_BLIND_PROMPT, EF_ALLIES_IMMUNE, EF_CASTER_IMMUNE;
    int16 targ, dtype;
    On Event PRE(EV_EFFECT) {
      hObj cr;
      if (EActor->isCharacter() && EActor->GodID == $"Maeve")
        { targ = MA_LAWFUL; dtype = AD_CONF; }
      else if (EActor->isCharacter() && EActor->GodID == $"Mara")
        { targ = MA_EVIL; dtype = AD_SLOW; }
      else if (EActor->isCharacter() && EActor->GodID == $"Essiah")
        { targ = MA_EVIL; dtype = AD_NAUS; }
      else
        { targ = EActor->isMType(MA_EVIL) ? MA_GOOD : MA_EVIL;
          dtype = AD_STUN; }
      /*
      for (cr=EActor->FirstAlly();cr;cr=EActor->NextAlly())
        if (EActor->DistFrom(cr) <= 8 && !cr->HasStati(PARALYSIS) &&
             !cr->HasStati(STUNNED) && !cr->HasStati(NAUSEA) &&
             !cr->HasStati(CONFUSED) && !cr->HasStati(ASLEEP))
          {
            if (cr->HasAbility(CA_BARDIC_MUSIC))
              e.vCasterLev += cr->AbilityLevel(CA_BARDIC_MUSIC);
            else if (cr->HasAbility(CA_SPELLCASTING) && cr->HasStati(
                       SPELL_ACCESS,SP_DIVINE))
              e.vCasterLev += cr->CasterLev();
            cr->IDPrint("You lend your voice to the unearthly choir!",
              "The <hObj> lends <his:hObj> voice to the unearthly choir!",
              cr, cr);
          }
      */
      return NOTHING;
      },  
    EV_ISTARGET {
      if (e.efNum == 0)
        return (EVictim->isHostileTo(EActor)  &&
          EVictim->ChallengeRating() <= 5) ?
          SHOULD_CAST_IT : CANNOT_CAST_IT;
      else if (e.efNum == 1)
        return EVictim->isMType(targ) ?
          SHOULD_CAST_IT : CANNOT_CAST_IT;
      },
    MSG_CAST
      "You evoke a crescendo of music of unearthly beauty!" /
      "The <EActor> evokes a crescendo of music of unearthly beauty!",
    MSG_BLASTNAME
      "unearthly music";
  }
and EA_BLAST
  { 
    xval: AD_SONI; pval: (LEVEL)d4; sval: WILL+10;
    On Event POST(EV_MAGIC_HIT)
      {
        if (e.efNum == 1)
          ThrowDmg(EV_DAMAGE,dtype,e.vDuration,"",EActor,EVictim);
        return NOTHING;
      };
  }


Effect "Mark of Justice" : EA_INFLICT
  {
    SC_ENC; Cost: 10; Level: 5; sval: WILL+10; 
    lval: 1; aval: AR_TOUCH; Purpose: EP_CURSE;
    Flags: EF_CURSE, EF_LAWFUL, EF_PERMANANT;    
    Desc: "This spell can be cast in one of two forms;
      both forms are channeled through a touch attack
      that causes a tattoo-like mark to appear on the
      touched creature's body, visible only to creatures
      who can see invisible or ethereal creatures. The
      caster receives only one touch, but there is no
      saving throw to resist the placement of the mark.
      The mark is a curse and can be removed using a
      <9>remove curse<1> spell. Neither version of this
      spell affects Lawful creatures, or creatures who
      cannot understand law due to not being sapient.\n
      __<9>Mark of Transgression:<1> This version of the
      spell marks the subject creature as an inveterate
      criminal, and causes any lawful creatures who perceive
      him to be automatically hostile to him. There is no
      saving throw involved in this version of the spell.\n
      __<9>Mark of Punishment:<1> This more corrective
      version of the Mark causes the subject to suffer
      gradually-increasing Constitution damage whenever
      they commit an unlawful act (defined in the current
      version of the game as striking a lawful creature).
      A Will saving throw negates this effect, but a
      seperate save must be made for each unlawful act,
      and a successful save only prevents damage for that
      act, not breaks the whole spell.\n
      __In addition to the effects of a specific Mark,
      a priest who places a Mark of Justice can always
      perceive the creature that it was placed on, even
      if walls or other barriers seperate them, as if
      that creature were the subject of a detection spell.";
    On Event PRE(EV_EFFECT) {
      char ch;
      ch = EActor->ChoicePrompt("Transgression or Punishment?", "tp",
        1d2 == 1 ? 't' : 'p');
      if (ch == 'p')
        {
          RedirectEff(e,$"Mark of Punishment",EV_EFFECT);
          return DONE;
        }
      return NOTHING;
      },
    EV_ISTARGET {
      if (EVictim->isMType(MA_LAWFUL) ||
            !EVictim->isMType(MA_SAPIENT))
        return CANNOT_CAST_IT;
      return SHOULD_CAST_IT;
      },
    POST(EV_MAGIC_HIT) {
      hObj cr;
      for (cr=EMap->FirstThing();cr;cr=EMap->NextThing())
        if (cr->isCreature() && cr->Perceives(EVictim))
          if (cr->onPlane() == PHASE_ETHERIAL ||
              cr->HasStati(SEE_INVIS) || cr->HasMFlag(M_SEE_INVIS))
            {
              if (cr == GetHandle(EVictim))
                cr->IPrint("A runic mark appears on your body!");
              else
                cr->IPrint("An runic mark appears on the <hObj>'s body!",
                      EVictim);
            }
      EVictim->IPrint("You feel persecuted.");
      EActor->IPrint("You have marked the <hObj>.", EVictim);
      EVictim->GainPermStati(TRACKING,EActor,SS_MISC,0,200);
      return NOTHING;
      },
    EV_REMOVED {
      if (e.vObj != NULL_OBJ)
        e.vObj->RemoveStati(TRACKING,SS_MISC,-1,-1,EActor);
      return NOTHING;
      },
    MSG_CAST
      "Your hands glow with a deep vermillion aura!" /
      "The <EActor>'s hands glow with a deep vermillion aura!";
    xval: ENEMY_TO; yval: MA_LAWFUL; 
  }
  
Effect "Mark of Punishment" : EA_INFLICT
  {
    SC_ENC; Cost: 10; Level: 5; sval: WILL+10; 
    lval: 1; aval: AR_TOUCH; Purpose: EP_CURSE;
    xval: TRAP_EVENT; yval: POST(EV_STRIKE);
    Flags: EF_CURSE, EF_LAWFUL, EF_PERMANANT;  
    On Event EV_ISTARGET {
      if (EVictim->isMType(MA_LAWFUL) ||
            !EVictim->isMType(MA_SAPIENT))
        return CANNOT_CAST_IT;
      return SHOULD_CAST_IT;
      },
    POST(EV_MAGIC_HIT) {
      hObj cr;
      for (cr=EMap->FirstThing();cr;cr=EMap->NextThing())
        if (cr->isCreature() && cr->Perceives(EVictim))
          if (cr->onPlane() == PHASE_ETHERIAL || 
              cr->HasStati(SEE_INVIS) || cr->HasMFlag(M_SEE_INVIS))
            {
              if (cr == GetHandle(EVictim))
                cr->IPrint("A runic mark appears on your body!");
              else
                cr->IPrint("An runic mark appears on the <hObj>'s body!",
                      EVictim);
            }
      EVictim->IPrint("You feel persecuted.");
      EActor->IPrint("You have marked the <hObj>.", EVictim);
      EVictim->GainPermStati(TRACKING,EActor,SS_MISC,0,200);
      return NOTHING;
      },
    EV_REMOVED {
      if (e.vObj != NULL_OBJ)
        e.vObj->RemoveStati(TRACKING,SS_MISC,-1,-1,EActor);
      return NOTHING;
      },
    MSG_CAST
      "Your hands glow with a deep vermillion aura!" /
      "The <EActor>'s hands glow with a deep vermillion aura!",
    META(POST(EV_STRIKE)) {
      if (EVictim->isMType(MA_LAWFUL))
        if (!EVictim->SavingThrow(WILL,EVictim->GetEffStatiVal(
               TRAP_EVENT,$"Mark of Punishment"),SA_MAGIC|SA_ENCH|SA_SPELLS))
          {
            EActor->IDPrint("Lawful power smites you!",
                            "Lawful power smites the <hObj>!", EActor);
            ThrowDmg(EV_DAMAGE,AD_DACO,1d2,"a Mark of Justice",
              EVictim->GetEffStatiObj(TRAP_EVENT,$"Mark of Punishment"), 
                EVictim);
          }
      return NOTHING;
      },
    PRE(EV_MAGIC_HIT) {
      e.vDmg = e.saveDC;
      return NOTHING;
      };
  }

Effect "Conjure Oozes" : EA_SUMMON
  { SC_WEA; Base: SP_MEDIUM; Cost: 30; Level: 5; qval: Q_LOC;
    Purpose: EP_SUMMON; xval: MA_OOZE; rval: $"mass summons";  
    Flags: EF_PERSISTANT;
    On Event EV_CALC_EFFECT {
      e.vDmg = 3 + (e.vCasterLev + 1) / 2;
      return NOTHING;
      },
    EV_EFFECT {
      if (!EActor->LoseFatigue(1,true))
        return ABORT;
      return NOTHING;
      };
    Desc: "Summons multiple oozes equalling a total CR of half your caster
      level (rounding up) + 3, which will remain as your companions for the 
      rest of the day. Casting this spell costs 1 Fatigue point."; }

    
/* ============================================================= 
 *                  Level Five Priest Spells
 * =============================================================
Druid / Priest Spell "Antilife Shell" : EA_GENERIC
Druid Spell "Fire Seeds;spell" : EA_CREATION
Druid Spell "Summon Nature's Ally VI" : EA_SUMMON
Druid Spell "Find the Path" : EA_INFLICT
Wizard / Priest Spell "Banishment" : EA_GENERIC
Priest Spell "Heal;spell" : EA_HEALING
Priest Spell "Harm" : EA_BLAST
 Wizard / Priest / Druid Spell "Dispel Magic, Greater" : EA_DISPEL
Priest Spell "Holy Summoning VI" : EA_SUMMON
Wizard / Priest Spell "Undeath to Death" : EA_BLAST
Priest  Spell "Glyph of Warding, Greater" : EA_TERRAFORM
Priest Spell "Righteous Wrath of the Faithful" : EA_INFLICT
Priest Spell "Unceasing Vigilance of the Holy Sentinel" : EA_INFLICT

 */

Druid / Priest Spell "Antilife Shell" : EA_GENERIC
  { SC_ABJ; IS_A_BUFF(COST_6); 
    Level: 6; aval: AR_MFIELD;
    rval: FI_BLOCKER; tval: MA_LIVING; lval: 3; cval: RED;
    Flags: EF_LIM_MTYPE, EF_NO_PRESS;  
    Desc: "Evokes a 30 foot (3 square) radius globe around you
      into which living creatures may not enter."; }

Druid Spell "Fire Seeds;spell" : EA_CREATION
  { SC_EVO; Base: SP_TRIVIAL; Cost: 12; Level: 6; 
    xval: CREA_WIELD | CREA_TEMP | CREA_MANY; rval: $"fire seeds"; 
    yval: 4; // make how many? 
    Purpose: EP_BUFF (VS_MELEE); Flags: EF_DLONG; 
    pval: +15; // divided by 3 when making a magical item plus
    Desc: "Creates four fire seeds that count as +5 weapons and can be
    thrown to inflict 5d6+5 points of fire damage each."; 
    // ww: we're doing the "acorn grenades" from the SRD
    hObj it;
    On Event EV_ISTARGET {
      for(it=EActor->FirstInv();it;it=EActor->NextInv()) 
        if (it->iID == $"produced flame" || it->iID == $"fire seeds")
          return CAN_CAST_IT; 
      return SHOULD_CAST_IT; 
    };
    }

Item "fire seeds" : T_WEAPON
  {
    Image: yellow '*';
    Mat:MAT_FORCE;
    SDmg:5d6;
    LDmg:5d6;
    Crit: x2; Threat: 2; Spd: +100%; Range: 10; 
    Acc: +10; // magic missile never misses, and this is supposed to be a
              // ranged touch attack ...
    Group: WG_THROWN | WG_SIMPLE;
    Size: SZ_TINY; 
    Cost: OPT_COST(88,0); 
    Flags: WT_NO_STRENGTH , IT_NOGEN , WT_NO_MELEE,
           WT_FIRE_DAMAGE; 
    Desc: "Fire Seeds are magically enchanted acorns that burst into
    intense flame when thrown. They cannot be used as melee weapons."; 
    On Event POST(EV_RATTACK) {
      if (GetHandle(EItem2) && EItem2->iID == $"fire seeds")
        EItem2->Remove(true);
      return NOTHING;
      },
    PRE(EV_DROP) {
      EActor->IPrint("You dispel the fire seeds.");
      EItem->Remove(true);
      return DONE;
      },
    PRE(EV_LOSEITEM) {
      EItem->Remove(true);
      return DONE;
      },
    PRE(EV_INSERT) {
      EActor->IPrint("You can't put fire seeds into a container.");
      return ABORT;
      },
    EV_GETNAME {
      e.EParam |= NA_SINGLE;
      e.nCursed = "";
      e.nArticle = (e.EParam & NA_THE) ? "the " : "";
      e.nAppend += XPrint(" (<Num> shot<hText>, <Num> turn<hText>)",
         EActor->GetQuantity(), EActor->GetQuantity() == 1 ? "" : "s",
         EActor->GetStatiDur(SUMMONED), EActor->GetStatiDur(SUMMONED) == 1 ? "" : "s");
      return NOTHING;
      };
  }

Druid Spell "Summon Nature's Ally VI" : EA_SUMMON
  { SC_WEA; Base: SP_MEDIUM; Cost: 12; Level: 6; qval: Q_LOC;
    Purpose: EP_SUMMON; rval: $"Nature's Ally"; pval: 6; 
    Desc: "Summons a natural creature of CR 6 to fight in the 
      caster's name.";  
    ALIENIST_CLAUSE(6) }

/*
Druid Spell "Find the Path" : EA_INFLICT
  { SC_DIV; IS_A_BUFF(COST_6); Level: 6; 
    xval: ADJUST; yval: A_MOV; pval: +50; Purpose: EP_BUFF | EP_ESCAPE;
    On Event MSG_STATINAME "FindPath"; 
    Desc: "This spell provides an enhancement bonus of 250~ to your 
           movement rate."; 
  }
*/

/* -- Priest 6 -- */

Priest Spell "Animate Objects" : EA_GENERIC
  {
    SC_ARC; Base: SP_MEDIUM; Cost: 15; Level: 6; sval: REF + 10;
    aval: AR_GLOBE; lval: 6; cval: PINK; Purpose: EP_SUMMON;
    Flags: EF_AFFECTS_ITEMS, EF_CASTER_IMMUNE, EF_DLONG;
    Desc: "Casting this spell causes all unattended, inanimate 
      objects within 60 feet of the caster to animate, fighting
      in his defense as if they were living allies. Creatures
      may make a Reflex saving throw to prevent whatever they
      hold in their hands from tearing free and animating, but
      worn objects do not animate.";
    On Event EV_MAGIC_HIT {
      hObj hItem, hAnim; rID animID; int16 tx, ty;
      if (!(EVictim->isCreature() || EVictim->isType(T_ITEM)))
        return NOTHING;
      
      tx = ETarget->x;
      ty = ETarget->y;
      
      if (EVictim->isCreature())
        {
          hItem = EVictim->FirstInv();
          
          if (!hItem)
            return NOTHING;
          
          /* Animating corpses is the domain of Necromancy; let's
             not step on the necromancer's thematic toes. */
          if (hItem->isType(T_CORPSE))
            return NOTHING;
          
          /* For now, don't animate worn armour. */
          if (hItem->isType(T_ARMOUR))
            return NOTHING;
            
          if (EVictim->SavingThrow(REF,e.saveDC,SA_SPELLS|SA_MAGIC))
            {
              VPrint(e,"Your <hObj> animates and begins to twist around,
                but you keep a firm grip on it and the effect ceases.",
                "The <EVictim>'s <hObj> animates and begins to twist
                around, but <he:EVictim> keeps a firm grip on it and the "
                "effect ceases.", hItem);
              return NOTHING;
            }
          VPrint(e,"Your <hObj> animates and twists out of your grasp!",
                   "The <EVictim>'s <hObj> animates and twists out of 
                    <his:EVictim> grasp!", hItem);
        }
      else
        {
          hItem = GetHandle(ETarget);
          
          /* Animating corpses is the domain of Necromancy; let's
             not step on the necromancer's thematic toes. */
          if (hItem->isType(T_CORPSE))
            return NOTHING;
         
          APrint(e,"The <hObj> animates!", hItem);
        }
      
      switch(hItem->Size(NULL))
        {
          case SZ_MINISCULE:
            animID = $"miniscule animated object";
           break;
          case SZ_TINY:
            animID = $"tiny animated object";
           break;
          case SZ_SMALL:
            animID = $"small animated object";
           break;
          case SZ_MEDIUM:
            animID = $"medium animated object";
           break;
          case SZ_LARGE:
            animID = $"large animated object";
           break;
          case SZ_HUGE:
            animID = $"huge animated object";
           break;
          case SZ_GARGANTUAN:
            animID = $"gargantuan animated object";
           break;
          case SZ_COLLOSAL:
            animID = $"collosal animated object";
           break;          default:
            return NOTHING;
        }
        
      EMap->thEnGenMonSummXY($"exact monster", animID, 
        EN_CREATOR|EN_SINGLE, 36, 0, EActor, tx, ty);
      
      hAnim = EMap->GetEncounterCreature(0);
      if (hAnim == NULL_OBJ)
        {
          APrint(e,"[ Animate Objects failed! ]");
          return DONE;
        }
      hAnim->GainTempStati(TRANSFORMED,hItem,e.vDuration,SS_ENCH);
      hItem->Remove(false);
      return DONE;
      },
    EV_MAGIC_XY {
      /* Remove pillars, entangle people standing in an area of
         hanging vines, etc. */
      return NOTHING;
      };
  }

#define ANIMATED_OBJECT_STUFF                                        \
    ABILITY(CA_INFRAVISION,6);                                       \
	Immune: DF_MIND, DF_POIS, DF_SLEE, DF_PLYS, DF_STUN,               \
            DF_DISE, DF_NECR, DF_CRIT, DF_SUBD;                      \
    Flags: M_MINDLESS, M_DEAF, M_NEUTER, M_PSYCHO,                   \
           M_HOSTILE, M_NOGEN;                                       \
    Desc: "This animated object has been produced by a priest's "    \
      "<9>animate objects<7> spell, or by a similar power possessed "\
      "by a different creature.";                                    \
    On Event PRE(EVICTIM(EV_DAMAGE))                                 \
      {                                                              \
        hObj hItem, hAnim; int16 percent;                            \
        /* Send damage the animated object takes directly to its     \
           actual Item object, and adjust cHP accordingly */         \
        if (e.DType <= AD_LAST_PHYSICAL)                             \
          {                                                          \
            hItem = EVictim->GetStatiObj(TRANSFORMED);               \
            hAnim = GetHandle(EVictim);                              \
            SetETarget(e,hItem);                                     \
            ReThrow(EV_DAMAGE,e);                                    \
            SetETarget(e,hAnim);                                     \
            if (hItem->isDead())                                     \
              hAnim->Remove(true);                                   \
            else {                                                   \
              percent = (hItem->GetHP() * 100) / hItem->MaxHP();     \
              hAnim->cHP = max(1,(hAnim->mHP * percent) / 100);      \
              }                                                      \
            return DONE;                                             \
          }                                                          \
        return NOTHING;                                              \
      },                                                             \
    PRE(EV_STRIKE) {                                                 \
      hObj hItem2;                                                   \
      hItem2 = EActor->GetStatiObj(TRANSFORMED);                     \
      if (hItem2->isType(T_WEAPON))                                  \
        {                                                            \
          e.AType = A_SWNG;                                          \
          SetEItem(e,hItem2);                                        \
        }                                                            \
      return NOTHING;                                                \
      },                                                             \
    EV_INITIALIZE, EV_TURN {                                         \
      if (EActor->GetStatiObj(TRANSFORMED) != NULL_OBJ)              \
        EActor->Image = EActor->GetStatiObj(TRANSFORMED)->Image;     \
      return NOTHING;                                                \
      };                                                             \

Monster "miniscule animated object" : MA_CONSTRUCT
  { Image: bright red 'X'; Size: SZ_MINISCULE; 
    CR: 1; HD: 1; Hit: +4; Def: 10; Mov: 125%; Spd: 150%;
    Str 3, Dex 14, Wis 1, Cha 1;
    Attk: A_SLAM for 1d1 AD_BLUNT;
    ANIMATED_OBJECT_STUFF }  

Monster "tiny animated object" : MA_CONSTRUCT
  { Image: bright red 'X'; Size: SZ_TINY; 
    CR: 1; HD: 1; Hit: +4; Def: 10; Mov: 125%; Spd: 150%;
    Str 6, Dex 14, Wis 1, Cha 1;
    Attk: A_SLAM for 1d2 AD_BLUNT;
    ANIMATED_OBJECT_STUFF }  

Monster "small animated object" : MA_CONSTRUCT
  { Image: bright red 'X'; Size: SZ_SMALL; 
    CR: 1; HD: 1; Hit: +4; Def: 10; Mov: 125%; Spd: 150%;
    Str 10, Dex 14, Wis 1, Cha 1;
    Attk: A_SLAM for 1d4 AD_BLUNT;
    ANIMATED_OBJECT_STUFF }      

Monster "medium animated object" : MA_CONSTRUCT
  { Image: bright red 'X'; Size: SZ_MEDIUM; 
    CR: 2; HD: 2; Hit: +2; Def: 10; Mov: 100%; Spd: 150%;
    Str 12, Dex 12, Wis 1, Cha 1;
    Attk: A_SLAM for 1d6 AD_BLUNT;
    ANIMATED_OBJECT_STUFF }      

Monster "large animated object" : MA_CONSTRUCT
  { Image: bright red 'X'; Size: SZ_MEDIUM; 
    CR: 3; HD: 4; Hit: +4; Def: 10; Mov: 100%; Spd: 150%;
    Str 16, Dex 10, Wis 1, Cha 1;
    Attk: A_SLAM for 1d8 AD_BLUNT;
    ANIMATED_OBJECT_STUFF }      

Monster "huge animated object" : MA_CONSTRUCT
  { Image: bright red 'X'; Size: SZ_MEDIUM; 
    CR: 4; HD: 6; Hit: +4; Def: 10; Mov: 75%; Spd: 125%;
    Str 20, Dex 10, Wis 1, Cha 1;
    Attk: A_SLAM for 1d10 AD_BLUNT;
    ANIMATED_OBJECT_STUFF }      

Monster "gargantuan animated object" : MA_CONSTRUCT
  { Image: bright red 'X'; Size: SZ_MEDIUM; 
    CR: 5; HD: 8; Hit: +4; Def: 10; Mov: 75%; Spd: 100%;
    Str 24, Dex 10, Wis 1, Cha 1;
    Attk: A_SLAM for 1d12 AD_BLUNT;
    ANIMATED_OBJECT_STUFF } 

Monster "collosal animated object" : MA_CONSTRUCT
  { Image: bright red 'X'; Size: SZ_MEDIUM; 
    CR: 6; HD: 10; Hit: +4; Def: 10; Mov: 50%; Spd: 75%;
    Str 28, Dex 10, Wis 1, Cha 1;
    Attk: A_SLAM for 1d20 AD_BLUNT;
    ANIMATED_OBJECT_STUFF } 

/* Animated object TODO:
   * special templates for animated ropes (entangle attack),
     animated cloaks (A_WRAP for AD_BLND) and animated objects
     that have legs
   * chest contents on destruction
   * redirect /mending/ and /make whole/ to object
   * the EV_GETNAME script
   * we really need EV_CALC_VALUES for this
*/

Wizard / Priest Spell "Banishment" : EA_GENERIC
  { SC_ABJ; Base: SP_MEDIUM; Cost: 12; Level: 6; qval: Q_TAR; sval: WILL;
    Desc: "This spell enables you to force an extraplanar creature out of
    your home plane, effectively destroying it here. You may affect a
    creature with up to twice your level in hit dice. When you cast this
    spell you make a Knowledge (Theology) skill check with DC 20. If you succeed
    the Will save DC for this spell is increased by +2 (representing your
    ability to call upon substances and ideals that the target hates,
    fears or opposes)."; 
    On Event PRE(EV_MAGIC_STRIKE) {
      if (EActor->SkillCheck(SK_KNOW_THEO,20,true,0)) {
        EActor->IPrint("You incorporate opposed ideals into the banishment!");
        e.saveDC += EActor->HasEffStati(TRAP_EVENT, $"Iron Sword") ? 5 : 2; 
      }
    };
    On Event EV_ISTARGET {
      if (!ETarget->isMType(MA_OUTSIDER))
        return CANNOT_CAST_IT;
    } ;
    On Event EV_MAGIC_HIT {
      VPrint(e,"You feel a strong urge to leave this plane!",
               "The <EVictim> feels an urge to leave this plane!");
      ThrowDmg(EV_DEATH,AD_NORM,0,"banishment",EActor,EVictim);
      return DONE;
      };
    tval: LEVEL_2PER1; Flags: EF_LIM_LEVEL; 
    Purpose: EP_ATTACK;
  }

Priest Spell "Etherealness" : EA_INFLICT
  {
    SC_WEA; Level: 6; IS_A_BUFF(60);
    aval: AR_GLOBE; tval: MA_ALLIES; lval: 8; cval: CYAN;
    Desc: "Casting this spell shifts the caster (and all of her
      equipment), along wil all of her allies within 80 feet, 
      into the ethereal plane until the caster elects to cancel
      the spell. While ethereal, the caster is incorporeal and
      invisible with regard to creatures on the material plane, 
      but can interact physically with other ethereal creatures.";
    xval: PHASED; yval: PHASE_ETHERIAL; 
    Flags: EF_CANCEL, EF_SHOWNAME, EF_PERMANANT, EF_LIM_MTYPE; 
    On Event EV_MAGIC_HIT
      "You cross into the ethereal plane.",
    EV_REMOVED
      "You return to the material plane.";
  }

Priest Spell "Heal;spell" : EA_HEALING
  { SC_THE; Base: SP_EASY; Cost: 15; Level: 6; qval: Q_TAR|Q_NEAR;
    xval: HEAL_HP|HEAL_XP|HEAL_ATTR|HEAL_MALADY|HEAL_FATIGUE; 
    Purpose: EP_FIX_TROUBLE;
    On Event EV_CALC_EFFECT {
      e.vDmg = 5000;
      return NOTHING;
      };
    Desc: "Heals the target fully and cures experience drain, attribute 
      damage and fatigue. In addition, it removes a number of maladies 
      (e.g., poison, disease, stunning)."; 
  }

Priest / Scroll Spell "Harm" : EA_BLAST
  { SC_NEC; Base: SP_TRIVIAL; Cost: 12; Level: 6; aval: AR_TOUCH;
    Flags: EF_CANCEL; Purpose: EP_ATTACK; lval: 1;
    On Event EV_CAST
      "Your hands glow with a black aura." /
      "The <EActor>'s hands glow with a black aura.",
     EV_MAGIC_HIT {
      int16 dmg;
      dmg = EVictim->cHP - min(EVictim->cHP,max(1d4+1,
              EVictim->cHP - ((EVictim->mHP*2) / 3)));
      if (dmg && EVictim->ResistLevel(AD_NECR) != -1 &&
           !EVictim->HasEffStati(TRIED,$"Harm",-1,EActor)) {
        VPrint(e,"Wounds appear on your body!",
          "Wounds appear on the <EVictim>'s body!");
        ThrowDmg(EV_DAMAGE,AD_NECR,dmg,"harm",EActor,EVictim);
        EVictim->GainTempStati(TRIED,EActor,-2,SS_MISC,0,0,$"Harm");
        }
      else
        e.Immune = true;
      return DONE;
      };
    Desc: "Casting this spell grants the caster a touch attack which
      inflicts necromantic damage equal to two-thirds the victim's total
      hit points when healthy, bringing the victim to a minimum of
      1d4+1 hit points -- this spell cannot kill its subject, and a
      victim can be subject to only one <9>harm<1> spell per day. Only
      one such touch is allowed per casting.";
  }

Priest Spell "Heroes' Feast" : EA_HEALING
  { SC_THE; Base: SP_HARD; Cost: 40; Level: 6; Purpose: EP_PLAYER_ONLY; 
    aval: AR_GLOBE; cval: WHITE; lval: 10; tval: MA_ALLIES;
    Flags: EF_PERSISTANT, EF_LIM_MTYPE;
    Desc: "Casting this spell conjures a lavish feast, complete with
      chairs and a grand feast table, with more than sufficient food
      for all the creatures in the caster's party. The food created
      has a spiritual quality like the mythical ambrosia, curing ills
      and replenishing the spirit of all who partake for the full 
      length of the feast. Consuming the feast takes a full hour, so
      obviously this spell cannot be cast in combat. When in a secure
      area, casting this spell affects the priest and all allied 
      creatures within 100 feet. Creatures that cannot eat -- undead,
      constructs, vortices and elementals -- do not benefit, but even
      outsiders and aberrations can replenish themselves with this
      spell.\n
      __Those who partake of the feast automatically become satiated.
      They heal 3d10 points of damage, 3d10 / 5 points of attribute damage,
      are cured of any diseases they possess and are rendered immune to 
      poison and fear for the rest of the day. Participants gain a +1 
      morale bonus to all rolls, and a sacred bonus to saving throws 
      equal to the priest's Wisdom modifier. Finally, every participant 
      in the feast is renewed and reinvigorated, regaining a number of 
      fatigue points equal to the total number of participants.\n
      __Holding a <9>heroes' feast<1> requires a minimum of 3
      participating characters. If the feast is interrupted by an
      encounter or other event, no benefit is gained."; 
    int16 n;
    On Event PRE(EV_EFFECT) {
      hObj cr; n = 0;
      for (cr=EMap->FirstThing();cr;cr=EMap->NextThing())
        if (cr->isCreature() && cr->DistFrom(EActor) <= 10)
          if (cr->isFriendlyTo(EActor))
            n++;
      if (n < 3)
        {
          EActor->IPrint("There must be at least 3 participants in a
            <9>Heroes' Feast<1>.");
          return ABORT;
        }
      EActor->IDPrint("You conjure a lavish feast, and you and your
        allies sit down to eat.", "The <hObj1> conjures a lavish
        feast, and <he:hObj1> and <his:hObj1> allies sit down to
        eat.",EActor);
      
      if (EPlayer->SpendHours(1,1) != DONE)
        {
          APrint(e,"The enchantment broken by the disruption, the
            feast and furnishings fade from existance.");
          return DONE;
        }
      
      return NOTHING;
      },
    PRE(EV_MAGIC_HIT) {
      if (e.efNum == 5)
        e.vDmg = max(0,EActor->Mod(A_WIS));
      else if (e.efNum == 6)
        e.vDmg = n;
      if (EVictim->HasStati(HUNGER))
        EVictim->SetStatiDur(HUNGER,-1,NULL,2800);
      return NOTHING;
      },
    EV_ISTARGET {
      if (EVictim->isMType(MA_UNDEAD) ||
          EVictim->isMType(MA_CONSTRUCT) ||
          EVictim->isMType(MA_ELEMENTAL) ||
          EVictim->isMType(MA_VORTEX))
        return CANNOT_CAST_IT;
      return SHOULD_CAST_IT;
      },
    POST(EV_MAGIC_STRIKE)
      "You and your companions consume the feast, feeling renewed and
        replenished by food as much spirit as matter.";
    xval: HEAL_HP|HEAL_ATTR; pval: 3d10;
  }
and EA_HEALING
  { xval: HEAL_MALADY; yval: DISEASED; }
and EA_INFLICT
  { xval: IMMUNITY; yval: AD_FEAR; }
and EA_INFLICT
  { xval: IMMUNITY; yval: AD_POIS; }
and EA_INFLICT
  { xval: ADJUST_MOR; yval: A_AID; pval: +1; }
and EA_INFLICT
  { xval: ADJUST_SAC; yval: A_SAV; }
and EA_HEALING
  { xval: HEAL_FATIGUE; }
      

Priest Spell "Holy Summoning VI" : EA_SUMMON
  { SC_WEA; Base: SP_MEDIUM; Cost: 13; Level: 6; qval: Q_LOC;
    Purpose: EP_SUMMON; rval: $"Holy Summons"; pval: 6; 
    Desc: "Summons an outsider of CR 6 to fight in the 
      caster's name.";  
    ALIENIST_CLAUSE(6) }

Wizard / Priest Spell "Undeath to Death" : EA_BLAST
  { SC_NEC; aval: AR_BALL; lval: 3; cval: WHITE; 
    Base: SP_EASY; Cost: 12; Level: 6; qval: Q_TAR; pval: (LEVEL_1PER1)d8;
    Desc: "Destroys any undead creature caught within a 60-foot globe
      centered on the caster that currently has fewer than (1d8 per 
      caster level) hit points. The effect is all-or-nothing, and no 
      saving throw is allowed.";
    On Event EV_MAGIC_HIT {
      if (EVictim->cHP > e.vDmg)
        {
          e.Immune = true;
          return DONE;
        }
      VPrint(e,"You return to death!",
               "The <EVictim> returns to death!");
      ThrowDmg(EV_DEATH,AD_NORM,0,"Undeath to Death",EActor,EVictim);
      return DONE;
      };
    tval: MA_UNDEAD; Flags: EF_LIM_MTYPE, EF_DEATH; 
    Purpose: EP_ATTACK;
  }

Priest  Spell "Glyph of Warding, Greater" : EA_TERRAFORM
  { SC_ARC; Base: SP_TRIVIAL; Cost 12; Level: 6; qval: Q_LOC;
    xval: TERRA_FLOOR; Purpose: EP_PLAYER_ONLY; 
    rval: $"strange rune"; sval: REF; pval: (LEVEL_SCALED)d8;
    Desc: "Turns one chosen floor square into a powerful rune that explodes
      for 1d8 damage per level (max 10d8) when stepped on.";
    On Event MSG_CAST
      "A strange rune materializes on the ground."; }

/*
Priest Spell "Righteous Wrath of the Faithful" : EA_INFLICT
  { SC_THE; Base: 77; Cost: 12; Level: 6;  
    aval: AR_GLOBE; lval: 12; tval: MA_ALLIES;
    xval: ADJUST_SAC; yval: A_AID; pval: +4; }
  and EA_INFLICT
  { aval: AR_GLOBE; lval: 12; tval: MA_ALLIES; 
    xval: ADJUST_SAC; yval: A_SPD; pval: +10; }
  and EA_INFLICT
  { aval: AR_GLOBE; lval: 12; tval: MA_ALLIES;
    xval: ADJUST_SAC; yval: A_THP;  pval: (LEVEL_1PER2)d8;
    Desc: "Inspires a holy fury in you and all your allies, such
      that they receive a +4 sacred bonus to all rolls, gain a +50%
      sacred bonus to speed and receive 1d8 temporary hit points
      for every odd level you possess."; }

Priest Spell "Unceasing Vigilance of the Holy Sentinel" : EA_INFLICT
  { SC_THA; Base: 82; Cost: 12; Level: 6;
    xval: SKILL_BONUS; yval: SK_SPOT; pval: 10; }
  and EA_INFLICT
  { xval: SAVE_BONUS; yval: SA_TRAPS; pval: +4; }
  and EA_INFLICT
  { xval: IMMUNE; yval: AD_STUN; }
  and EA_INFLICT
  { xval: IMMUNE; yval: AD_CONF; }
  and EA_INFLICT
  { xval: IMMUNE; yval: AD_BLND; 
    Desc: "Imbues you with an unearthly vigilance, such that you are
      immune to blindness or confusion, suffer no penalties from hunger
      or fatigue, have a +10 bonus to your Spot skills
      and gain a +4 insight bonus to save versus traps."; }
      
      */

Effect "Conjure Earth Elemental" : EA_NOTIMP { }

/* -- Priest 7 -- */

Priest Spell "Blasphemy" : EA_GENERIC
  { SC_THE; Base: SP_HARD; Cost: 32; Level: 7;
    aval: AR_GLOBE; lval: 12; cval: RED; Flags: EF_EVIL;
    Desc: "Not dissimilar to the arcane Power Word spells, this spell
      allows a priest to speak a word resonating with such absolute
      power that it stuns, weakens, paralyzes or kills good creatures,
      and banishes good outsiders if used on their home plane. The
      effects depend upon the creature's Challenge Rating in comparison
      to the priest's caster level + Charisma modifier (henceforth 
      called the blasphemy power), as follows:\n
      __*_If the creature's CR exceeds the blasphemy power, it is 
      unaffected.
      __*_Otherwise, if the creature's [CR + 3] exceeds the blasphemy
      power, it is only stunned for 1d4 rounds.\n
      __*_Otherwise, if the creature's [CR + 6] exceeds the blasphemy
      power, it is stunned for 3d6 rounds and also weakened, suffering
      2d6 points of Strength damage.\n
      __*_Otherwise, if the creature's [CR + 9] exceeds the blasphemy
      power, it is stunned for 3d6 rounds, weakened for 2d6 Strength
      damage and paralyzed for 3d6 rounds.\n
      __*_Otherwise, the creature is killed. If it has some means of
      avoiding death (such as a <9>death ward<1> spell, or an Amulet
      of Life Saving), it is stunned, weakened and paralyzed as above.
      __The speaking of a blasphemy spell affects all creatures within
      120 feet of the caster, consumes two fatigue points and affects
      neutral creatures at 1/2 normal blasphemy power. Evil creatures
      are unaffected by the spell. In addition to the effects listed
      above, good outsiders must succeed in a Will saving throw or be
      banished instantly -- this is the only part of the spell subject
      to a saving throw.";
    On Event EV_MAGIC_HIT {
      int16 vPower, vCR;
      vPower = EActor->CasterLev() + EActor->Mod(A_CHA);
      vCR    = EVictim->ChallengeRating();
      if (EVictim->isMType(MA_EVIL))
        {
          e.Immune = true;
          return DONE;
        }
      if (!EVictim->isMType(MA_GOOD))
        vPower /= 2;
      else if (EVictim->isMType(MA_OUTSIDER))
        {
          if (!EVictim->SavingThrow(WILL,e.saveDC,SA_MAGIC|SA_EVIL|SA_SPELLS))
            {
              VPrint(e,"You feel a strong urge to leave this plane!",
                       "The <EVictim> is scoured from this plane!");
              ThrowDmg(EV_DEATH,AD_NORM,0,"banishment",EActor,EVictim);
              if (EVictim->isDead())
                return DONE;
            }
        }
      
      if (vPower >= vCR + 9 && EVictim->ResistLevel(AD_NECR) != -1)
        {
          VPrint(e,"You are slain by the blasphemy!",
                   "The <EVictim> is slain!");
          ThrowDmg(EV_DEATH,AD_NECR,0,"hearing a blasphemy spell",
                     EActor, EVictim);        
          if (EVictim->isDead())
            return DONE;
        }
      if (vPower >= vCR + 6 && EVictim->ResistLevel(AD_PLYS) != -1)
        {
          VPrint(e,"You are paralyzed by the blasphemy!",
                   "The <EVictim> is paralyzed!");
          EVictim->GainTempStati(PARALYSIS,NULL,3d6,SS_ATTK,PARA_HELD);
        }
      if (vPower >= vCR + 3)
        {
          VPrint(e,"You are weakened by the blasphemy!",
                   "The <EVictim> is weakened!");
          ThrowDmg(EV_DAMAGE, AD_DAST,2d6,"hearing a blasphemy spell",
                         EActor, EVictim);
          if (EVictim->isDead())
            return DONE;
        }
      if (vPower >= vCR)
        {
          VPrint(e,"You are stunned by the blasphemy!",
                   "The <EVictim> is stunned!");
          EVictim->GainTempStati(STUNNED,NULL, (vPower >= vCR + 3) 
                                    ? 3d6 : 1d4,SS_ATTK);
        }
      else
        e.Immune = true;
      return DONE;
    },
  MSG_CAST
    "You utter words of unspeakable vileness, and your skin crawls." /
    "The <EActor> utters words of unspeakable vileness, and your skin crawls.";
}

